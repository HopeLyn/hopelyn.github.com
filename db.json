{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1481880484000},{"_id":"themes/yilia/_config.yml","hash":"9c57d9948275bfcb1290b6636c2ff253d8685b3a","modified":1481880484000},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1481880484000},{"_id":"themes/yilia/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1481880484000},{"_id":"source/_posts/Github Pages + Hexo 写博客.md","hash":"5c55d5a16cc3efcc10a3d3439a83235e69468c50","modified":1481880484000},{"_id":"source/_posts/Markdown语法学习.md","hash":"916c98e2097dbdc3a85d4ed1fca801ed00da4ee4","modified":1481880484000},{"_id":"source/_posts/正则表达式学习.md","hash":"af8cefa76c8255fd6a3aa7bd856350fca9a61a84","modified":1481880484000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1481880484000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1481880484000},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1481880484000},{"_id":"themes/yilia/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1481880484000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481880484000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481880484000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1481880484000},{"_id":"themes/yilia/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1481880484000},{"_id":"themes/yilia/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1481880484000},{"_id":"themes/yilia/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1481880484000},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1481880484000},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1481880484000},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1481880484000},{"_id":"themes/yilia/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1481880484000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"d6306cd897683c25184a50b29931aa1fa18d119c","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"f7068535c0df7e7bc6614a046e7d4b262a65d8b2","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"47dc7c1d35928a7b026c683547f8482d2e524c63","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"fff29e619af2b1abcab7d5d2d6f78428272f18f7","modified":1481880484000},{"_id":"themes/yilia/source/css/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1481880484000},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1481880484000},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481880484000},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481880484000},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1481880484000},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1481880484000},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1481880484000},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1481880484000},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1481880484000},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1481880484000},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1481880484000},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1481880484000},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1481880484000},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1481880484000},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1481880484000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481880484000},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1481880484000},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1481880484000},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1481880484000},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1481880484000},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1481880484000},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1481880484000},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1481880484000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1481880484000},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1481880484000},{"_id":"themes/yilia/source/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1481880484000},{"_id":"themes/yilia/source/js/main.js","hash":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"0ac35bd92e58983c189ac0c35df404ebc6ee826e","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"924744aa3c1bce9056ba03cec02e19e095009126","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"08d3205dde3235f3e6881126268e6c473f46a8ac","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1481880484000},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1481880484000},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1481880484000},{"_id":"public/baidusitemap.xml","hash":"b0e839ce4f62a2ccc670dffb0baad56793a3b3e9","modified":1486361915496},{"_id":"public/atom.xml","hash":"ccf531fabb036d6dd7e419f773586ba05a075ffe","modified":1486361915501},{"_id":"public/sitemap.xml","hash":"c5d20f5eed4ca8f380185745cee9e4786ba0ae21","modified":1486361915502},{"_id":"public/archives/index.html","hash":"b61d64f5854ae48a0ef11f9e14b7a92299a0c287","modified":1486361915507},{"_id":"public/archives/2016/index.html","hash":"47c642671320af337ba49ed3e7d2c8384527a176","modified":1486361915507},{"_id":"public/archives/2016/04/index.html","hash":"2fc0389d54e01205e459b68ab2c47c62c4cc4878","modified":1486361915507},{"_id":"public/categories/未完成/index.html","hash":"340838a12097b0dccb4dbe0035857a83e4648e22","modified":1486361915507},{"_id":"public/categories/已归档/index.html","hash":"3135898a627a10dcfa9d6a8244ec2c33d3667d07","modified":1486361915507},{"_id":"public/tags/工具/index.html","hash":"92c86d72276e3dbe6acf07fdfad50cf036eab65a","modified":1486361915507},{"_id":"public/tags/语法/index.html","hash":"39aa3d236e51a60fbac75c150d6d1409a58e7e58","modified":1486361915507},{"_id":"public/tags/实践/index.html","hash":"9d2c3d7a8ee8492da8f2350c0a9331d20bd7511f","modified":1486361915507},{"_id":"public/2016/04/09/Markdown语法学习/index.html","hash":"c4e1a601d302d7ea356c51cdc5725f7a4c629c7e","modified":1486361915507},{"_id":"public/2016/04/08/正则表达式学习/index.html","hash":"918c26a9d933f9a28f9d951307c052515c560286","modified":1486361915507},{"_id":"public/2016/04/08/Github Pages + Hexo 写博客/index.html","hash":"e59b1334d6bf374c4a9f8cebb64362024bcf0ef2","modified":1486361915507},{"_id":"public/index.html","hash":"df7fe5df866f44b37b74a7169dfc29fec26118c5","modified":1486361915507},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486361915520},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486361915520},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486361915520},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486361915520},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486361915520},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486361915520},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1486361915520},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1486361915521},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1486361915522},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1486361915522},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1486361915522},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1486361915523},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1486361915523},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1486361915523},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1486361915523},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1486361915523},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1486361915523},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1486361915523},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1486361915524},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1486361915524},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1486361915524},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1486361915524},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1486361915524},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1486361915524},{"_id":"public/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1486361915524},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486361915524},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1486361915524},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1486361915524},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1486361915524},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1486361916409},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1486361916418},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1486361916418},{"_id":"public/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1486361916418},{"_id":"public/js/pc.js","hash":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10","modified":1486361916418},{"_id":"public/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1486361916418},{"_id":"public/js/main.js","hash":"0640b68a76fab3c693b3cd1e4d04d14be1e53940","modified":1486361916418},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486361916418},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1486361916418},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1486361916418},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1486361916419},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486361916419},{"_id":"public/css/style.css","hash":"10e9b93cf935a165020e48334a40b84b0f895401","modified":1486361916419},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1486361916419},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1486361916419}],"Category":[{"name":"未完成","_id":"ciytpi9cy0003sv1iod5qbgjw"},{"name":"已归档","_id":"ciytpi9d30008sv1ifw4gitqt"}],"Data":[],"Page":[],"Post":[{"title":"Markdown语法学习","date":"2016-04-09T08:01:28.000Z","_content":"**备注**: 待完成，从开头到\"图片大小\"部分尚未处理\n\n## 语法总结\n*\t段落与换行:\n\t* \t行尾多加两个空格，就可以换行\n\t*\t`<br>`\n\n*\t标题:\n\t*\t#标题1\n\n\t*\t标题2\n\t\t===\n\n\t*\t标题2\n\t\t-\n\n*\t引用: \n\t*\t单行引用\n\t\n\t*  \t>单行引用\n\n\t*\t>嵌套引用\n\t\t>>嵌套嵌套\n\t\t\n\t*\t>引用中使用 ***`markdown`*** 语法\n\n*\t列表:\n\t* \t无序列表\n\t\t* \t第一项\n\t\t+ \t第二项 \n\t\t-\t第三项\n\n\t*\t有序列表\n\t\t1.\t有序列表以`数字`和`.`为首\n\t\t2. \t数字的序列并不会影响生成的列表序列: \n\t\t4. \t比如这样\n\t\t5. \t也可以转义来取消序列的作用\n\t\t6\\. \n\n*\t代码\n\t* \t代码块\n\t<html>\n\t<div style='color:#69d'>蓝色的代码</div>\n\t</html>\n\n\t*\t内嵌代码: `<title>Markdown</title>`\n\n*\t分割线\n\n\t* * *\n\t---\n\t_ _ _\n\n\n*\t超链接:\n\t*\t本地文件:[icon.png](./images/icon.png)\n\n\t* \t[Google](http://www.google.com/)\n\n\t*  \t[Google][]\n\t\t[Google]: http://www.google.com/ \"Google\"\n\t*\t自动转换为链接\n\t\t* \tURL: <http://www.google.com/>\n\t\t*\tEmail: <123@email.com>\n*\t图片: \n\t* \t行内式  \n\t\n\t\t````js\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t\t````\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t*\t参考式\n\n\t\t````js\n\t\t// 注: hexo 中出不来结果\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\t\t````\n\t\t\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\n\t*\t图片大小:\n\t\t\n\t\t````js\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n\t\t````\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n*\t强调\n\t* \t*斜体* or _斜体_\n\n\t\t```js\n\t\t*斜体* or _斜体_\n\t\t```\n\t*  \t**粗体** or __粗体__\n\n\t\t```js\n\t\t**粗体** or __粗体__\n\t\t```\n\n*\t扩展语法\n\t* \t语法高亮\n\n\t\t````\n\t\t\t// 用法\n\t\t\t```js\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t\t```\n\t\t````\n\t\t````\n\t\t\t// 结果\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t````\n\t*\t表格: \n\t\t*\t`|` 区分单元格\n\t\t*\t`-` 分隔表头和其它行\n\t\t*\t用法\n\n\t\t\t```\n\t\t\t| 链接 | 结果 | 原因 |\n\t\t\t|-----|---|----------|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t```\n\t\t*\t结果 \n\n| 链接 | 结果 | 原因 |\n|-----|---|----------|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n\n\t\n## 注意问题\n*\t想要引用反引号(`` ` ``)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如``` `` ` `` ```\n","source":"_posts/Markdown语法学习.md","raw":"---\ntitle: Markdown语法学习\ndate: 2016-04-09 16:01:28\ncategories: 未完成\ntags: \n\t- 工具\n\t- 语法\n---\n**备注**: 待完成，从开头到\"图片大小\"部分尚未处理\n\n## 语法总结\n*\t段落与换行:\n\t* \t行尾多加两个空格，就可以换行\n\t*\t`<br>`\n\n*\t标题:\n\t*\t#标题1\n\n\t*\t标题2\n\t\t===\n\n\t*\t标题2\n\t\t-\n\n*\t引用: \n\t*\t单行引用\n\t\n\t*  \t>单行引用\n\n\t*\t>嵌套引用\n\t\t>>嵌套嵌套\n\t\t\n\t*\t>引用中使用 ***`markdown`*** 语法\n\n*\t列表:\n\t* \t无序列表\n\t\t* \t第一项\n\t\t+ \t第二项 \n\t\t-\t第三项\n\n\t*\t有序列表\n\t\t1.\t有序列表以`数字`和`.`为首\n\t\t2. \t数字的序列并不会影响生成的列表序列: \n\t\t4. \t比如这样\n\t\t5. \t也可以转义来取消序列的作用\n\t\t6\\. \n\n*\t代码\n\t* \t代码块\n\t<html>\n\t<div style='color:#69d'>蓝色的代码</div>\n\t</html>\n\n\t*\t内嵌代码: `<title>Markdown</title>`\n\n*\t分割线\n\n\t* * *\n\t---\n\t_ _ _\n\n\n*\t超链接:\n\t*\t本地文件:[icon.png](./images/icon.png)\n\n\t* \t[Google](http://www.google.com/)\n\n\t*  \t[Google][]\n\t\t[Google]: http://www.google.com/ \"Google\"\n\t*\t自动转换为链接\n\t\t* \tURL: <http://www.google.com/>\n\t\t*\tEmail: <123@email.com>\n*\t图片: \n\t* \t行内式  \n\t\n\t\t````js\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t\t````\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t*\t参考式\n\n\t\t````js\n\t\t// 注: hexo 中出不来结果\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\t\t````\n\t\t\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\n\t*\t图片大小:\n\t\t\n\t\t````js\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n\t\t````\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n*\t强调\n\t* \t*斜体* or _斜体_\n\n\t\t```js\n\t\t*斜体* or _斜体_\n\t\t```\n\t*  \t**粗体** or __粗体__\n\n\t\t```js\n\t\t**粗体** or __粗体__\n\t\t```\n\n*\t扩展语法\n\t* \t语法高亮\n\n\t\t````\n\t\t\t// 用法\n\t\t\t```js\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t\t```\n\t\t````\n\t\t````\n\t\t\t// 结果\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t````\n\t*\t表格: \n\t\t*\t`|` 区分单元格\n\t\t*\t`-` 分隔表头和其它行\n\t\t*\t用法\n\n\t\t\t```\n\t\t\t| 链接 | 结果 | 原因 |\n\t\t\t|-----|---|----------|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t```\n\t\t*\t结果 \n\n| 链接 | 结果 | 原因 |\n|-----|---|----------|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n\n\t\n## 注意问题\n*\t想要引用反引号(`` ` ``)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如``` `` ` `` ```\n","slug":"Markdown语法学习","published":1,"updated":"2016-12-16T09:28:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciytpi9cn0000sv1id2ntriy5","content":"<p><strong>备注</strong>: 待完成，从开头到”图片大小”部分尚未处理</p>\n<h2 id=\"语法总结\"><a href=\"#语法总结\" class=\"headerlink\" title=\"语法总结\"></a>语法总结</h2><ul>\n<li><p>段落与换行:</p>\n<ul>\n<li>行尾多加两个空格，就可以换行</li>\n<li><code>&lt;br&gt;</code></li>\n</ul>\n</li>\n<li><p>标题:</p>\n<ul>\n<li><p>#标题1</p>\n</li>\n<li><h1 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h1></li>\n<li><p>标题2<br>-</p>\n</li>\n</ul>\n</li>\n<li><p>引用: </p>\n<ul>\n<li><p>单行引用</p>\n</li>\n<li><blockquote>\n<p>单行引用</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>嵌套嵌套</p>\n</blockquote>\n</blockquote>\n</li>\n<li><blockquote>\n<p>引用中使用 <strong><em><code>markdown</code></em></strong> 语法</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>列表:</p>\n<ul>\n<li><p>无序列表</p>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项 </li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n</li>\n<li><p>有序列表</p>\n<ol>\n<li>有序列表以<code>数字</code>和<code>.</code>为首</li>\n<li>数字的序列并不会影响生成的列表序列: </li>\n<li>比如这样</li>\n<li>也可以转义来取消序列的作用<br>6. </li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>代码</p>\n<ul>\n<li><p>代码块</p>\n<html><br><div style=\"color:#69d\">蓝色的代码</div><br></html>\n</li>\n<li><p>内嵌代码: <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>\n</li>\n</ul>\n</li>\n<li><p>分割线</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"  *\"></a><em> </em> *</h2><hr>\n</li>\n</ul>\n<ul>\n<li><p>超链接:</p>\n<ul>\n<li><p>本地文件:<a href=\"./images/icon.png\">icon.png</a></p>\n</li>\n<li><p><a href=\"http://www.google.com/\" target=\"_blank\" rel=\"external\">Google</a></p>\n</li>\n<li><p>[Google][]</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    [Google]: http://www.google.com/ &quot;Google&quot;\n*    自动转换为链接\n    *     URL: &lt;http://www.google.com/&gt;\n    *    Email: &lt;123@email.com&gt;\n</code></pre><ul>\n<li><p>图片: </p>\n<ul>\n<li><p>行内式  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub](https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\")</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\"></p>\n</li>\n<li><p>参考式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注: hexo 中出不来结果</span></span><br><span class=\"line\">![GitHub][github]</span><br><span class=\"line\">[github]: https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    ![GitHub][github]\n    [github]: https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;GitHub,Social Coding&quot;\n\n*    图片大小:\n\n    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\"</span> alt=<span class=\"string\">\"GitHub\"</span> title=<span class=\"string\">\"GitHub,Social Coding\"</span> width=<span class=\"string\">\"200\"</span> height=<span class=\"string\">\"200\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n    &lt;img src=&quot;https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100&quot; alt=&quot;GitHub&quot; title=&quot;GitHub,Social Coding&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt;\n</code></pre><ul>\n<li><p>强调</p>\n<ul>\n<li><p><em>斜体</em> or <em>斜体</em></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* or _斜体_</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>粗体</strong> or <strong>粗体</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**粗体** or __粗体__</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>扩展语法</p>\n<ul>\n<li><p>语法高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用法</span><br><span class=\"line\">```js</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 结果</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表格: </p>\n<ul>\n<li><code>|</code> 区分单元格</li>\n<li><code>-</code> 分隔表头和其它行</li>\n<li><p>用法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 链接 | 结果 | 原因 |</span><br><span class=\"line\">|-----|---|----------|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结果 </p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>链接</th>\n<th>结果</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h2><ul>\n<li>想要引用反引号(<code>` </code>)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如<code>`` ` `` </code></li>\n</ul>\n","excerpt":"","more":"<p><strong>备注</strong>: 待完成，从开头到”图片大小”部分尚未处理</p>\n<h2 id=\"语法总结\"><a href=\"#语法总结\" class=\"headerlink\" title=\"语法总结\"></a>语法总结</h2><ul>\n<li><p>段落与换行:</p>\n<ul>\n<li>行尾多加两个空格，就可以换行</li>\n<li><code>&lt;br&gt;</code></li>\n</ul>\n</li>\n<li><p>标题:</p>\n<ul>\n<li><p>#标题1</p>\n</li>\n<li><h1 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h1></li>\n<li><p>标题2<br>-</p>\n</li>\n</ul>\n</li>\n<li><p>引用: </p>\n<ul>\n<li><p>单行引用</p>\n</li>\n<li><blockquote>\n<p>单行引用</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>嵌套嵌套</p>\n</blockquote>\n</blockquote>\n</li>\n<li><blockquote>\n<p>引用中使用 <strong><em><code>markdown</code></em></strong> 语法</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>列表:</p>\n<ul>\n<li><p>无序列表</p>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项 </li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n</li>\n<li><p>有序列表</p>\n<ol>\n<li>有序列表以<code>数字</code>和<code>.</code>为首</li>\n<li>数字的序列并不会影响生成的列表序列: </li>\n<li>比如这样</li>\n<li>也可以转义来取消序列的作用<br>6. </li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>代码</p>\n<ul>\n<li><p>代码块</p>\n<html><br><div style='color:#69d'>蓝色的代码</div><br></html>\n</li>\n<li><p>内嵌代码: <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>\n</li>\n</ul>\n</li>\n<li><p>分割线</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"  *\"></a><em> </em> *</h2><hr>\n</li>\n</ul>\n<ul>\n<li><p>超链接:</p>\n<ul>\n<li><p>本地文件:<a href=\"./images/icon.png\">icon.png</a></p>\n</li>\n<li><p><a href=\"http://www.google.com/\">Google</a></p>\n</li>\n<li><p>[Google][]</p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    [Google]: http://www.google.com/ &quot;Google&quot;\n*    自动转换为链接\n    *     URL: &lt;http://www.google.com/&gt;\n    *    Email: &lt;123@email.com&gt;\n</code></pre><ul>\n<li><p>图片: </p>\n<ul>\n<li><p>行内式  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub](https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\")</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\"></p>\n</li>\n<li><p>参考式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注: hexo 中出不来结果</span></span><br><span class=\"line\">![GitHub][github]</span><br><span class=\"line\">[github]: https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    ![GitHub][github]\n    [github]: https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;GitHub,Social Coding&quot;\n\n*    图片大小:\n\n    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\"</span> alt=<span class=\"string\">\"GitHub\"</span> title=<span class=\"string\">\"GitHub,Social Coding\"</span> width=<span class=\"string\">\"200\"</span> height=<span class=\"string\">\"200\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n    &lt;img src=&quot;https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100&quot; alt=&quot;GitHub&quot; title=&quot;GitHub,Social Coding&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt;\n</code></pre><ul>\n<li><p>强调</p>\n<ul>\n<li><p><em>斜体</em> or <em>斜体</em></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* or _斜体_</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>粗体</strong> or <strong>粗体</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**粗体** or __粗体__</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>扩展语法</p>\n<ul>\n<li><p>语法高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用法</span><br><span class=\"line\">```js</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 结果</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表格: </p>\n<ul>\n<li><code>|</code> 区分单元格</li>\n<li><code>-</code> 分隔表头和其它行</li>\n<li><p>用法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 链接 | 结果 | 原因 |</span><br><span class=\"line\">|-----|---|----------|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结果 </p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>链接</th>\n<th>结果</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h2><ul>\n<li>想要引用反引号(<code>` </code>)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如<code>`` ` `` </code></li>\n</ul>\n"},{"title":"Github Pages + Hexo 写博客","date":"2016-04-08T07:02:28.000Z","_content":"\n## 相关链接\n*\t[极客学院](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n## 本人博客地址\n*\t[http://hopelyn.github.io/](http://hopelyn.github.io/)\n* \t[http://blog.hopeleft.com/](http://blog.hopeleft.com/)\n\n## 配置环境\n### Github Pages Prjoect 搭建\n\n### Hexo配置\n#### 安装\n*\t安装 Node 环境: [https://hexo.io/docs/index.html#Install-Node-js](https://hexo.io/docs/index.html#Install-Node-js)\n\t* \t`curl https://raw.github.com/creationix/nvm/master/install.sh | sh`\n\t*  \t或者使用 nvm : `nvm install 4`\n\n* \t安装 Git 环境: [https://hexo.io/docs/index.html#Install-Git](https://hexo.io/docs/index.html#Install-Git)\n\t*  \t使用 homebrew: `brew install git`\n\t*  \t使用 macports: `port instal git`\n\n* \t安装 hexo (使用 npm 安装):`npm install -g hexo-cli`\n\n* \t安装 `hexo-deployer-git` => 可以发布 hexo 到相应的 git rep 上: `npm install hexo-deployer-git --save` \n\n#### 自定义配置\n*\t修改 `_config.yml` 文件:\n\t\t\n\t```yml\n\t// _config.xml\n\tdeploy:\n\t\ttype: git\n\t\trepo: git@github.com:HopeLyn/hopelyn.github.com.git\n\t\tbranch: master\n\t```\n*\t在 **./public** 文件夹下添加 `CNAME` 文件，并写下需要重定向的域名 \n\n\t```js\n\t// CNAME\n\tblog.hopeleft.com\n\t```\n*\t修改 theme\n\t* \t下载主题到 **./themes** 文件夹下\n\n\t\t````js\n\t\t// 安装 Next 主题\n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\t\t// 或者安装 yilia 主题\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\t````\n\n\t*\t修改 `_config.yml` 文件\n\n\t\t```js\n\t\t// #theme: next\n\t\ttheme: yilia\n\t\t```\n*\t`sitemap`: \n\t*\t普通的 **sitemap** 插件\n\t\t*\t安装\n\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tsitemap:\n\t           path: sitemap.xml\n\t\t\t```\n\t*\t**baidu-sitemap** 插件\n\t\t*\t安装\n\t\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-baidu-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tbaidusitemap:\n\t\t\t\tpath: baidusitemap.xml\n\t\t\t```\n*\t生成 `RSS`:\n\t* \t安装插件: `npm install hexo-generator-feed --save`\n\t*\t修改设置:\n\n\t\t```js\n\t\t// _config.xml\n\t\tfeed:\n\t\t\ttype: atom\n\t\t\tpath: atom.xml\n\t\t\tlimit: 20\n\t\t```\n*\t`yilia`主题的自定义配置\n\t* \tlanguage: 在主目录下的 `_config.yml` 中修改\n\t\n\t\t```js\n\t\tlanguage: zh-Hans #简体中文\n\t\t```\n\n### 使用方法\n*\t新建文章: `hexo new 'My Post Name'` => 就会在 **./source/_posts** 下新建一个 `My Post Name.md` 文件\n\n*\t通过 `hexo d -generate` 生成 html 文件(在 public 文件夹下)，并发布到 github 上\n\n*\t`hexo s`: 启动本地服务，方便调整和配置\n\n### 写文章方法\n* \t文章的头部\n\t*  \t用`hexo new 'My Post Name'`命令新建文章的话会自动生成开头，如下所示\n\t\n\t\t```js\n\t\t---\n\t\ttitle: Github Pages + Hexo 写博客\n\t\tdate: 2016-04-09 16:11:31\n\t\ttags:\n\t\t---\n\t\t```\n\n*\t文章的主体\n\t*\t基本按照 [Markdown](http://www.appinn.com/markdown/) 语法\n\t* \t**注意事项**\n\t\t*  \t在写副标题的时候，需要在`##` 和标题名中间留下空格，如 `## 使用方法`，否则会显示 `##使用方法` 在页面上，而不转义\n\t\t*  \t在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符\n\n\t\t\t```js\n\t\t\t*  这是第一个列表\n\t\t\t*  这是第二个列表\n\t\t\t```\n\n### 常见问题\n*\t`WARN  No layout: index.html`: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹\n\t* \t解决方法一: 重新拉取 => 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去\n\n\t\t```bash\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\t\t```\n\t*\t解决方法二: 通过 git subtree 来管理\n\n\t\t```bash\n\t\t// 新建一个指向远程仓库的 remote \n\t\tgit remote add yilia https://github.com/litten/hexo-theme-yilia.git\n\t\t\n\t\t// 在指定路径下建立 subtree，并同步代码\n\t\tgit subtree add —-prefix=themes/yilia/ yilia master\n\t\t\n\t\t// 或者直接建立\n\t\tgit subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master\n\t\t```\n","source":"_posts/Github Pages + Hexo 写博客.md","raw":"---\ntitle: Github Pages + Hexo 写博客\ndate: 2016-04-08 15:02:28\ncategories: 未完成\ntags: \n\t- 工具\n\t- 实践\n---\n\n## 相关链接\n*\t[极客学院](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n## 本人博客地址\n*\t[http://hopelyn.github.io/](http://hopelyn.github.io/)\n* \t[http://blog.hopeleft.com/](http://blog.hopeleft.com/)\n\n## 配置环境\n### Github Pages Prjoect 搭建\n\n### Hexo配置\n#### 安装\n*\t安装 Node 环境: [https://hexo.io/docs/index.html#Install-Node-js](https://hexo.io/docs/index.html#Install-Node-js)\n\t* \t`curl https://raw.github.com/creationix/nvm/master/install.sh | sh`\n\t*  \t或者使用 nvm : `nvm install 4`\n\n* \t安装 Git 环境: [https://hexo.io/docs/index.html#Install-Git](https://hexo.io/docs/index.html#Install-Git)\n\t*  \t使用 homebrew: `brew install git`\n\t*  \t使用 macports: `port instal git`\n\n* \t安装 hexo (使用 npm 安装):`npm install -g hexo-cli`\n\n* \t安装 `hexo-deployer-git` => 可以发布 hexo 到相应的 git rep 上: `npm install hexo-deployer-git --save` \n\n#### 自定义配置\n*\t修改 `_config.yml` 文件:\n\t\t\n\t```yml\n\t// _config.xml\n\tdeploy:\n\t\ttype: git\n\t\trepo: git@github.com:HopeLyn/hopelyn.github.com.git\n\t\tbranch: master\n\t```\n*\t在 **./public** 文件夹下添加 `CNAME` 文件，并写下需要重定向的域名 \n\n\t```js\n\t// CNAME\n\tblog.hopeleft.com\n\t```\n*\t修改 theme\n\t* \t下载主题到 **./themes** 文件夹下\n\n\t\t````js\n\t\t// 安装 Next 主题\n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\t\t// 或者安装 yilia 主题\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\t````\n\n\t*\t修改 `_config.yml` 文件\n\n\t\t```js\n\t\t// #theme: next\n\t\ttheme: yilia\n\t\t```\n*\t`sitemap`: \n\t*\t普通的 **sitemap** 插件\n\t\t*\t安装\n\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tsitemap:\n\t           path: sitemap.xml\n\t\t\t```\n\t*\t**baidu-sitemap** 插件\n\t\t*\t安装\n\t\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-baidu-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tbaidusitemap:\n\t\t\t\tpath: baidusitemap.xml\n\t\t\t```\n*\t生成 `RSS`:\n\t* \t安装插件: `npm install hexo-generator-feed --save`\n\t*\t修改设置:\n\n\t\t```js\n\t\t// _config.xml\n\t\tfeed:\n\t\t\ttype: atom\n\t\t\tpath: atom.xml\n\t\t\tlimit: 20\n\t\t```\n*\t`yilia`主题的自定义配置\n\t* \tlanguage: 在主目录下的 `_config.yml` 中修改\n\t\n\t\t```js\n\t\tlanguage: zh-Hans #简体中文\n\t\t```\n\n### 使用方法\n*\t新建文章: `hexo new 'My Post Name'` => 就会在 **./source/_posts** 下新建一个 `My Post Name.md` 文件\n\n*\t通过 `hexo d -generate` 生成 html 文件(在 public 文件夹下)，并发布到 github 上\n\n*\t`hexo s`: 启动本地服务，方便调整和配置\n\n### 写文章方法\n* \t文章的头部\n\t*  \t用`hexo new 'My Post Name'`命令新建文章的话会自动生成开头，如下所示\n\t\n\t\t```js\n\t\t---\n\t\ttitle: Github Pages + Hexo 写博客\n\t\tdate: 2016-04-09 16:11:31\n\t\ttags:\n\t\t---\n\t\t```\n\n*\t文章的主体\n\t*\t基本按照 [Markdown](http://www.appinn.com/markdown/) 语法\n\t* \t**注意事项**\n\t\t*  \t在写副标题的时候，需要在`##` 和标题名中间留下空格，如 `## 使用方法`，否则会显示 `##使用方法` 在页面上，而不转义\n\t\t*  \t在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符\n\n\t\t\t```js\n\t\t\t*  这是第一个列表\n\t\t\t*  这是第二个列表\n\t\t\t```\n\n### 常见问题\n*\t`WARN  No layout: index.html`: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹\n\t* \t解决方法一: 重新拉取 => 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去\n\n\t\t```bash\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\t\t```\n\t*\t解决方法二: 通过 git subtree 来管理\n\n\t\t```bash\n\t\t// 新建一个指向远程仓库的 remote \n\t\tgit remote add yilia https://github.com/litten/hexo-theme-yilia.git\n\t\t\n\t\t// 在指定路径下建立 subtree，并同步代码\n\t\tgit subtree add —-prefix=themes/yilia/ yilia master\n\t\t\n\t\t// 或者直接建立\n\t\tgit subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master\n\t\t```\n","slug":"Github Pages + Hexo 写博客","published":1,"updated":"2016-12-16T09:28:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciytpi9cs0001sv1i5snwyiry","content":"<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"external\">极客学院</a></li>\n</ul>\n<h2 id=\"本人博客地址\"><a href=\"#本人博客地址\" class=\"headerlink\" title=\"本人博客地址\"></a>本人博客地址</h2><ul>\n<li><a href=\"http://hopelyn.github.io/\" target=\"_blank\" rel=\"external\">http://hopelyn.github.io/</a></li>\n<li><a href=\"http://blog.hopeleft.com/\" target=\"_blank\" rel=\"external\">http://blog.hopeleft.com/</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"Github-Pages-Prjoect-搭建\"><a href=\"#Github-Pages-Prjoect-搭建\" class=\"headerlink\" title=\"Github Pages Prjoect 搭建\"></a>Github Pages Prjoect 搭建</h3><h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>安装 Node 环境: <a href=\"https://hexo.io/docs/index.html#Install-Node-js\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/index.html#Install-Node-js</a></p>\n<ul>\n<li><code>curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></li>\n<li>或者使用 nvm : <code>nvm install 4</code></li>\n</ul>\n</li>\n<li><p>安装 Git 环境: <a href=\"https://hexo.io/docs/index.html#Install-Git\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/index.html#Install-Git</a></p>\n<ul>\n<li>使用 homebrew: <code>brew install git</code></li>\n<li>使用 macports: <code>port instal git</code></li>\n</ul>\n</li>\n<li><p>安装 hexo (使用 npm 安装):<code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>安装 <code>hexo-deployer-git</code> =&gt; 可以发布 hexo 到相应的 git rep 上: <code>npm install hexo-deployer-git --save</code> </p>\n</li>\n</ul>\n<h4 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h4><ul>\n<li><p>修改 <code>_config.yml</code> 文件:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// _config.xml</span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepo: git@github.com:HopeLyn/hopelyn.github.com.git</span><br><span class=\"line\">\tbranch: master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <strong>./public</strong> 文件夹下添加 <code>CNAME</code> 文件，并写下需要重定向的域名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CNAME</span></span><br><span class=\"line\">blog.hopeleft.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 theme</p>\n<ul>\n<li><p>下载主题到 <strong>./themes</strong> 文件夹下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 安装 Next 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者安装 yilia 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/litten/hexo-theme-yilia.git themes/yilia</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.yml</code> 文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// #theme: next</span></span><br><span class=\"line\">theme: yilia</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>sitemap</code>: </p>\n<ul>\n<li><p>普通的 <strong>sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">         path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>baidu-sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">\tpath: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>生成 <code>RSS</code>:</p>\n<ul>\n<li>安装插件: <code>npm install hexo-generator-feed --save</code></li>\n<li><p>修改设置:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">feed:</span><br><span class=\"line\">\ttype: atom</span><br><span class=\"line\">\tpath: atom.xml</span><br><span class=\"line\">\tlimit: <span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>yilia</code>主题的自定义配置</p>\n<ul>\n<li><p>language: 在主目录下的 <code>_config.yml</code> 中修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans #简体中文</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>新建文章: <code>hexo new &#39;My Post Name&#39;</code> =&gt; 就会在 <strong>./source/_posts</strong> 下新建一个 <code>My Post Name.md</code> 文件</p>\n</li>\n<li><p>通过 <code>hexo d -generate</code> 生成 html 文件(在 public 文件夹下)，并发布到 github 上</p>\n</li>\n<li><p><code>hexo s</code>: 启动本地服务，方便调整和配置</p>\n</li>\n</ul>\n<h3 id=\"写文章方法\"><a href=\"#写文章方法\" class=\"headerlink\" title=\"写文章方法\"></a>写文章方法</h3><ul>\n<li><p>文章的头部</p>\n<ul>\n<li><p>用<code>hexo new &#39;My Post Name&#39;</code>命令新建文章的话会自动生成开头，如下所示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Github Pages + Hexo 写博客</span><br><span class=\"line\">date: <span class=\"number\">2016</span><span class=\"number\">-04</span><span class=\"number\">-09</span> <span class=\"number\">16</span>:<span class=\"number\">11</span>:<span class=\"number\">31</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>文章的主体</p>\n<ul>\n<li>基本按照 <a href=\"http://www.appinn.com/markdown/\" target=\"_blank\" rel=\"external\">Markdown</a> 语法</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li>在写副标题的时候，需要在<code>##</code> 和标题名中间留下空格，如 <code>## 使用方法</code>，否则会显示 <code>##使用方法</code> 在页面上，而不转义</li>\n<li><p>在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*  这是第一个列表</span><br><span class=\"line\">*  这是第二个列表</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><ul>\n<li><p><code>WARN  No layout: index.html</code>: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹</p>\n<ul>\n<li><p>解决方法一: 重新拉取 =&gt; 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法二: 通过 git subtree 来管理</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建一个指向远程仓库的 remote </span><br><span class=\"line\">git remote add yilia https://github.com/litten/hexo-theme-yilia.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在指定路径下建立 subtree，并同步代码</span><br><span class=\"line\">git subtree add —-prefix=themes/yilia/ yilia master</span><br><span class=\"line\"></span><br><span class=\"line\">// 或者直接建立</span><br><span class=\"line\">git subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\">极客学院</a></li>\n</ul>\n<h2 id=\"本人博客地址\"><a href=\"#本人博客地址\" class=\"headerlink\" title=\"本人博客地址\"></a>本人博客地址</h2><ul>\n<li><a href=\"http://hopelyn.github.io/\">http://hopelyn.github.io/</a></li>\n<li><a href=\"http://blog.hopeleft.com/\">http://blog.hopeleft.com/</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"Github-Pages-Prjoect-搭建\"><a href=\"#Github-Pages-Prjoect-搭建\" class=\"headerlink\" title=\"Github Pages Prjoect 搭建\"></a>Github Pages Prjoect 搭建</h3><h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>安装 Node 环境: <a href=\"https://hexo.io/docs/index.html#Install-Node-js\">https://hexo.io/docs/index.html#Install-Node-js</a></p>\n<ul>\n<li><code>curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></li>\n<li>或者使用 nvm : <code>nvm install 4</code></li>\n</ul>\n</li>\n<li><p>安装 Git 环境: <a href=\"https://hexo.io/docs/index.html#Install-Git\">https://hexo.io/docs/index.html#Install-Git</a></p>\n<ul>\n<li>使用 homebrew: <code>brew install git</code></li>\n<li>使用 macports: <code>port instal git</code></li>\n</ul>\n</li>\n<li><p>安装 hexo (使用 npm 安装):<code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>安装 <code>hexo-deployer-git</code> =&gt; 可以发布 hexo 到相应的 git rep 上: <code>npm install hexo-deployer-git --save</code> </p>\n</li>\n</ul>\n<h4 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h4><ul>\n<li><p>修改 <code>_config.yml</code> 文件:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// _config.xml</span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\">\trepo: git@github.com:HopeLyn/hopelyn.github.com.git</span><br><span class=\"line\">\tbranch: master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <strong>./public</strong> 文件夹下添加 <code>CNAME</code> 文件，并写下需要重定向的域名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CNAME</span></span><br><span class=\"line\">blog.hopeleft.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 theme</p>\n<ul>\n<li><p>下载主题到 <strong>./themes</strong> 文件夹下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 安装 Next 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者安装 yilia 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/litten/hexo-theme-yilia.git themes/yilia</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.yml</code> 文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// #theme: next</span></span><br><span class=\"line\">theme: yilia</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>sitemap</code>: </p>\n<ul>\n<li><p>普通的 <strong>sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">         path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>baidu-sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">\tpath: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>生成 <code>RSS</code>:</p>\n<ul>\n<li>安装插件: <code>npm install hexo-generator-feed --save</code></li>\n<li><p>修改设置:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">feed:</span><br><span class=\"line\">\ttype: atom</span><br><span class=\"line\">\tpath: atom.xml</span><br><span class=\"line\">\tlimit: <span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>yilia</code>主题的自定义配置</p>\n<ul>\n<li><p>language: 在主目录下的 <code>_config.yml</code> 中修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans #简体中文</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>新建文章: <code>hexo new &#39;My Post Name&#39;</code> =&gt; 就会在 <strong>./source/_posts</strong> 下新建一个 <code>My Post Name.md</code> 文件</p>\n</li>\n<li><p>通过 <code>hexo d -generate</code> 生成 html 文件(在 public 文件夹下)，并发布到 github 上</p>\n</li>\n<li><p><code>hexo s</code>: 启动本地服务，方便调整和配置</p>\n</li>\n</ul>\n<h3 id=\"写文章方法\"><a href=\"#写文章方法\" class=\"headerlink\" title=\"写文章方法\"></a>写文章方法</h3><ul>\n<li><p>文章的头部</p>\n<ul>\n<li><p>用<code>hexo new &#39;My Post Name&#39;</code>命令新建文章的话会自动生成开头，如下所示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Github Pages + Hexo 写博客</span><br><span class=\"line\">date: <span class=\"number\">2016</span><span class=\"number\">-04</span><span class=\"number\">-09</span> <span class=\"number\">16</span>:<span class=\"number\">11</span>:<span class=\"number\">31</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>文章的主体</p>\n<ul>\n<li>基本按照 <a href=\"http://www.appinn.com/markdown/\">Markdown</a> 语法</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li>在写副标题的时候，需要在<code>##</code> 和标题名中间留下空格，如 <code>## 使用方法</code>，否则会显示 <code>##使用方法</code> 在页面上，而不转义</li>\n<li><p>在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*  这是第一个列表</span><br><span class=\"line\">*  这是第二个列表</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><ul>\n<li><p><code>WARN  No layout: index.html</code>: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹</p>\n<ul>\n<li><p>解决方法一: 重新拉取 =&gt; 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法二: 通过 git subtree 来管理</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建一个指向远程仓库的 remote </span><br><span class=\"line\">git remote add yilia https://github.com/litten/hexo-theme-yilia.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在指定路径下建立 subtree，并同步代码</span><br><span class=\"line\">git subtree add —-prefix=themes/yilia/ yilia master</span><br><span class=\"line\"></span><br><span class=\"line\">// 或者直接建立</span><br><span class=\"line\">git subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"正则表达式学习","date":"2016-04-08T07:35:56.000Z","description":"这篇文章主要是在于记录正则表达式的入门学习过程，总结了其语法以及一些基本使用方法","_content":"\n## 测试工具\n*\tsublime 中的搜索功能: 打开正则开关(**Regular expression**)和高亮开关(**Highlight matches**)\n* \t网上测试工具:\n\t*  \t[开源中国在线工具](http://tool.oschina.net/regex/)\n\t*  \t[站长工具](http://tool.chinaz.com/regex/)\n\n## **JavaScript** 中的用法\n* \t`replace`方法: `stringObject.replace(regexp,replacement) `\n\t*  `replacement` 参数\n\t\t*  `$1、$2、...、$99`: 与 **regexp** 中的第 1 到第 99 个子表达式相匹配的文本\n\t\t*\t`$&`: 与 **regexp** 相匹配的子串。 \n\t\t*\t``$` ``: 位于匹配子串左侧的文本。 \n\t\t*\t`$'`: 位于匹配子串右侧的文本。 \n\t\t*\t`%`: 直接量符号。\n\t*\t例子\n\n\t\t```js\n\t\t// 替换两个名字的顺序\n\t\tname = \"Doe, John\";\n\t\tname.replace(/(\\w+)\\s*, \\s*(\\w+)/, \"$2 $1\");\n\t\t```\n\n### **RegExp** 对象\n*\t修饰符\n\t*\t`i`: 执行对大小写不敏感的匹配 => `/[a-z]/i` 匹配a-z，A-Z\n\t*\t`g`: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=> `/[a-z]/g`\n\t*\t`m`: 执行多行匹配\n\n## 普通语法\n*\t例子\n\t*\t`0\\d{2}-\\d{8}` 匹配 **010-88888888** 这类的电话\n\t*\t`^\\d{5,12}$` 填写的 QQ 号必须为 5 位到 12 位数字时\n\t* \t`\\ba\\w*\\b` 匹配以字母 a 开头的单词\n\t*  `\\(?0\\d{2}[) -]?\\d{8}` 匹配几种格式的电话：\n\t\t**(010)88886666**，或 **022-22334455**，或 **02912345678**\n\t*  `((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})` 匹配 IP 地址\n\t*  `\\b(\\w+)\\b\\s+\\1\\b` 可以用来匹配重复的单词，像 **go go**, 或者 **kitty kitty**\n\t*  `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` 也可以\n\t*\t**url 解析** 的例子: \n\n\t\t```js\n\t\tfunction parseUrl(url){\n\t\t\tvar urlPattern = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\t\t\tvar result = urlPattern.exec(url);\n\t\t\tvar type = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t\tparseUrl(\"http://tool.oschina.net:80/regex?haha=true#fragment\");\n\t\t// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]\n\t\t```\n\t\t\n*  元字符\n\t*  \t`\\w` 匹配 字符、数字、下划线、汉字 等\n\t* \t`\\d` 匹配数字\n\t* \t`\\s` 匹配任意的空白符：空格，制表，换行，中文全角空格等\n\t*\t`.` 匹配除换行符(结束符)以外的任意字符\n\n* \t位置匹配：\n\t*\t`^`：\"字符串\"的开始\n\t* \t`$`：\"字符串\"的结束\n\t* \t`\\b`: 表示一个位置 => 其前一个和后一个字符不全是 `\\w`\n\n*  重复匹配：限定符\n\t*\t`*`\t 重复零次或更多次\n\t*\t`+`\t 重复一次或更多次\n\t*\t`?`\t 重复零次或一次\n\t*\t`{n}` 重复n次\n\t*\t`{n,}` 重复n次或更多次\n\t*\t`{n,m}` 重复n到m次\n\n*\t元素集：`[]` 里面表示一个范围\n\t* \t`[aeiou]` 匹配英文元音字母\n\t*  \t`[0-9]` 匹配数字,即\\d\n\t*  \t`[0-9a-zA-Z]` 匹配数字和字母\n\n*  \t分支条件：|\t把几种不同的规则分隔开(按顺序匹配)\n\t*  \t`0\\d{2}-\\d{8}|0\\d{3}-\\d{7}` 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(**010-12345678**)，一种是4位区号，7位本地号(**0376-2233445**)。\n\n*  \t分组：可以用小括号来指定子表达式(也叫做分组)\n\t* \t`(\\d{1,3}\\.){3}\\d{1,3}` 是一个简单的 IP 地址匹配表达式\n\n*  \t反义：\n\t*  \t`\\W` 匹配任意不是字母，数字，下划线，汉字的字符\n\t*\t`\\S` 匹配任意不是空白符的字符\n\t*\t`\\D` 匹配任意非数字的字符\n\t*\t`\\B` 匹配不是单词开头或结束的位置\n\t*\t`[^x]`\t匹配 **除了 x 以外** 的任意字符\n\t*\t`[^aeiou]` 匹配除了 aeiou 这几个字母以外的任意字符\n\n* \t后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: **从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2**\n\t* \t`\\1`: 代表分组1匹配的文本\n\t*  \t捕获\t\n\t\t*  \t`(exp)` 匹配 exp，并捕获文本到自动命名的组里\n\t\t*\t`(?<name>exp)` 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 `(?'name'exp)`\n\t\t*\t`(?:exp)` 匹配 exp，不捕获匹配的文本，也不给此分组分配组号\n\n*\t零宽断言（**匹配位置！**）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言\n\t* \t`(?=exp)` 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置\n\t\t*\t`\\b\\w+(?=ing\\b)` 匹配以 ing 结尾的单词的前面部分(**除了 ing 以外的部分**)\n\t*\t`(?<=exp)` 零宽度正回顾后发断言，匹配 exp 后面的位置\n\t*\t`(?!exp)` 匹配后面跟的不是 exp 的位置\n\t*\t`(?<!exp)` 匹配前面不是 exp 的位置\n\n*\t匹配优先级：\n\t* \t最先开始的匹配拥有最高优先级 —— **The match that begins earliest wins**\n\t*  \t贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符\n\t*  \t转化为懒惰匹配模式：要在限定符后面加上一个问号 `?`\n\n*\t需要转义的字符要注意\n\t* \t`\\/`: 避免误认为是 正则表达式的结束符\n\t*  \t`\\?`: 避免误认为是 非捕获匹配符或是限定符\n\t*  \t`\\.`: 避免误认为是 任意匹配元字符\n\n*\t练习:\n\t*\t匹配数字: `/^-?$/`\n","source":"_posts/正则表达式学习.md","raw":"---\ntitle: 正则表达式学习\ndate: 2016-04-08 15:35:56\ncategories: 已归档\ntags: \n\t- 工具 \n\t- 语法\ndescription: 这篇文章主要是在于记录正则表达式的入门学习过程，总结了其语法以及一些基本使用方法\n---\n\n## 测试工具\n*\tsublime 中的搜索功能: 打开正则开关(**Regular expression**)和高亮开关(**Highlight matches**)\n* \t网上测试工具:\n\t*  \t[开源中国在线工具](http://tool.oschina.net/regex/)\n\t*  \t[站长工具](http://tool.chinaz.com/regex/)\n\n## **JavaScript** 中的用法\n* \t`replace`方法: `stringObject.replace(regexp,replacement) `\n\t*  `replacement` 参数\n\t\t*  `$1、$2、...、$99`: 与 **regexp** 中的第 1 到第 99 个子表达式相匹配的文本\n\t\t*\t`$&`: 与 **regexp** 相匹配的子串。 \n\t\t*\t``$` ``: 位于匹配子串左侧的文本。 \n\t\t*\t`$'`: 位于匹配子串右侧的文本。 \n\t\t*\t`%`: 直接量符号。\n\t*\t例子\n\n\t\t```js\n\t\t// 替换两个名字的顺序\n\t\tname = \"Doe, John\";\n\t\tname.replace(/(\\w+)\\s*, \\s*(\\w+)/, \"$2 $1\");\n\t\t```\n\n### **RegExp** 对象\n*\t修饰符\n\t*\t`i`: 执行对大小写不敏感的匹配 => `/[a-z]/i` 匹配a-z，A-Z\n\t*\t`g`: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=> `/[a-z]/g`\n\t*\t`m`: 执行多行匹配\n\n## 普通语法\n*\t例子\n\t*\t`0\\d{2}-\\d{8}` 匹配 **010-88888888** 这类的电话\n\t*\t`^\\d{5,12}$` 填写的 QQ 号必须为 5 位到 12 位数字时\n\t* \t`\\ba\\w*\\b` 匹配以字母 a 开头的单词\n\t*  `\\(?0\\d{2}[) -]?\\d{8}` 匹配几种格式的电话：\n\t\t**(010)88886666**，或 **022-22334455**，或 **02912345678**\n\t*  `((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})` 匹配 IP 地址\n\t*  `\\b(\\w+)\\b\\s+\\1\\b` 可以用来匹配重复的单词，像 **go go**, 或者 **kitty kitty**\n\t*  `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` 也可以\n\t*\t**url 解析** 的例子: \n\n\t\t```js\n\t\tfunction parseUrl(url){\n\t\t\tvar urlPattern = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\t\t\tvar result = urlPattern.exec(url);\n\t\t\tvar type = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t\tparseUrl(\"http://tool.oschina.net:80/regex?haha=true#fragment\");\n\t\t// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]\n\t\t```\n\t\t\n*  元字符\n\t*  \t`\\w` 匹配 字符、数字、下划线、汉字 等\n\t* \t`\\d` 匹配数字\n\t* \t`\\s` 匹配任意的空白符：空格，制表，换行，中文全角空格等\n\t*\t`.` 匹配除换行符(结束符)以外的任意字符\n\n* \t位置匹配：\n\t*\t`^`：\"字符串\"的开始\n\t* \t`$`：\"字符串\"的结束\n\t* \t`\\b`: 表示一个位置 => 其前一个和后一个字符不全是 `\\w`\n\n*  重复匹配：限定符\n\t*\t`*`\t 重复零次或更多次\n\t*\t`+`\t 重复一次或更多次\n\t*\t`?`\t 重复零次或一次\n\t*\t`{n}` 重复n次\n\t*\t`{n,}` 重复n次或更多次\n\t*\t`{n,m}` 重复n到m次\n\n*\t元素集：`[]` 里面表示一个范围\n\t* \t`[aeiou]` 匹配英文元音字母\n\t*  \t`[0-9]` 匹配数字,即\\d\n\t*  \t`[0-9a-zA-Z]` 匹配数字和字母\n\n*  \t分支条件：|\t把几种不同的规则分隔开(按顺序匹配)\n\t*  \t`0\\d{2}-\\d{8}|0\\d{3}-\\d{7}` 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(**010-12345678**)，一种是4位区号，7位本地号(**0376-2233445**)。\n\n*  \t分组：可以用小括号来指定子表达式(也叫做分组)\n\t* \t`(\\d{1,3}\\.){3}\\d{1,3}` 是一个简单的 IP 地址匹配表达式\n\n*  \t反义：\n\t*  \t`\\W` 匹配任意不是字母，数字，下划线，汉字的字符\n\t*\t`\\S` 匹配任意不是空白符的字符\n\t*\t`\\D` 匹配任意非数字的字符\n\t*\t`\\B` 匹配不是单词开头或结束的位置\n\t*\t`[^x]`\t匹配 **除了 x 以外** 的任意字符\n\t*\t`[^aeiou]` 匹配除了 aeiou 这几个字母以外的任意字符\n\n* \t后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: **从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2**\n\t* \t`\\1`: 代表分组1匹配的文本\n\t*  \t捕获\t\n\t\t*  \t`(exp)` 匹配 exp，并捕获文本到自动命名的组里\n\t\t*\t`(?<name>exp)` 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 `(?'name'exp)`\n\t\t*\t`(?:exp)` 匹配 exp，不捕获匹配的文本，也不给此分组分配组号\n\n*\t零宽断言（**匹配位置！**）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言\n\t* \t`(?=exp)` 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置\n\t\t*\t`\\b\\w+(?=ing\\b)` 匹配以 ing 结尾的单词的前面部分(**除了 ing 以外的部分**)\n\t*\t`(?<=exp)` 零宽度正回顾后发断言，匹配 exp 后面的位置\n\t*\t`(?!exp)` 匹配后面跟的不是 exp 的位置\n\t*\t`(?<!exp)` 匹配前面不是 exp 的位置\n\n*\t匹配优先级：\n\t* \t最先开始的匹配拥有最高优先级 —— **The match that begins earliest wins**\n\t*  \t贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符\n\t*  \t转化为懒惰匹配模式：要在限定符后面加上一个问号 `?`\n\n*\t需要转义的字符要注意\n\t* \t`\\/`: 避免误认为是 正则表达式的结束符\n\t*  \t`\\?`: 避免误认为是 非捕获匹配符或是限定符\n\t*  \t`\\.`: 避免误认为是 任意匹配元字符\n\n*\t练习:\n\t*\t匹配数字: `/^-?$/`\n","slug":"正则表达式学习","published":1,"updated":"2016-12-16T09:28:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciytpi9cz0004sv1idozrgbrh","content":"<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><ul>\n<li>sublime 中的搜索功能: 打开正则开关(<strong>Regular expression</strong>)和高亮开关(<strong>Highlight matches</strong>)</li>\n<li>网上测试工具:<ul>\n<li><a href=\"http://tool.oschina.net/regex/\" target=\"_blank\" rel=\"external\">开源中国在线工具</a></li>\n<li><a href=\"http://tool.chinaz.com/regex/\" target=\"_blank\" rel=\"external\">站长工具</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JavaScript-中的用法\"><a href=\"#JavaScript-中的用法\" class=\"headerlink\" title=\"JavaScript 中的用法\"></a><strong>JavaScript</strong> 中的用法</h2><ul>\n<li><p><code>replace</code>方法: <code>stringObject.replace(regexp,replacement)</code></p>\n<ul>\n<li><code>replacement</code> 参数<ul>\n<li><code>$1、$2、...、$99</code>: 与 <strong>regexp</strong> 中的第 1 到第 99 个子表达式相匹配的文本</li>\n<li><code>$&amp;</code>: 与 <strong>regexp</strong> 相匹配的子串。 </li>\n<li><code>$` </code>: 位于匹配子串左侧的文本。 </li>\n<li><code>$&#39;</code>: 位于匹配子串右侧的文本。 </li>\n<li><code>%</code>: 直接量符号。</li>\n</ul>\n</li>\n<li><p>例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 替换两个名字的顺序</span></span><br><span class=\"line\">name = <span class=\"string\">\"Doe, John\"</span>;</span><br><span class=\"line\">name.replace(<span class=\"regexp\">/(\\w+)\\s*, \\s*(\\w+)/</span>, <span class=\"string\">\"$2 $1\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"RegExp-对象\"><a href=\"#RegExp-对象\" class=\"headerlink\" title=\"RegExp 对象\"></a><strong>RegExp</strong> 对象</h3><ul>\n<li>修饰符<ul>\n<li><code>i</code>: 执行对大小写不敏感的匹配 =&gt; <code>/[a-z]/i</code> 匹配a-z，A-Z</li>\n<li><code>g</code>: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=&gt; <code>/[a-z]/g</code></li>\n<li><code>m</code>: 执行多行匹配</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"普通语法\"><a href=\"#普通语法\" class=\"headerlink\" title=\"普通语法\"></a>普通语法</h2><ul>\n<li><p>例子</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}</code> 匹配 <strong>010-88888888</strong> 这类的电话</li>\n<li><code>^\\d{5,12}$</code> 填写的 QQ 号必须为 5 位到 12 位数字时</li>\n<li><code>\\ba\\w*\\b</code> 匹配以字母 a 开头的单词</li>\n<li><code>\\(?0\\d{2}[) -]?\\d{8}</code> 匹配几种格式的电话：<br><strong>(010)88886666</strong>，或 <strong>022-22334455</strong>，或 <strong>02912345678</strong></li>\n<li><code>((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})</code> 匹配 IP 地址</li>\n<li><code>\\b(\\w+)\\b\\s+\\1\\b</code> 可以用来匹配重复的单词，像 <strong>go go</strong>, 或者 <strong>kitty kitty</strong></li>\n<li><code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> 也可以</li>\n<li><p><strong>url 解析</strong> 的例子: </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseUrl</span>(<span class=\"params\">url</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> urlPattern = <span class=\"regexp\">/^(?:([A-Za-z]+):)?(\\/&#123;0,3&#125;)([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> result = urlPattern.exec(url);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> type = [<span class=\"string\">'url'</span>, <span class=\"string\">'scheme'</span>, <span class=\"string\">'slash'</span>, <span class=\"string\">'host'</span>, <span class=\"string\">'port'</span>, <span class=\"string\">'path'</span>, <span class=\"string\">'query'</span>, <span class=\"string\">'hash'</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">parseUrl(<span class=\"string\">\"http://tool.oschina.net:80/regex?haha=true#fragment\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元字符</p>\n<ul>\n<li><code>\\w</code> 匹配 字符、数字、下划线、汉字 等</li>\n<li><code>\\d</code> 匹配数字</li>\n<li><code>\\s</code> 匹配任意的空白符：空格，制表，换行，中文全角空格等</li>\n<li><code>.</code> 匹配除换行符(结束符)以外的任意字符</li>\n</ul>\n</li>\n<li><p>位置匹配：</p>\n<ul>\n<li><code>^</code>：”字符串”的开始</li>\n<li><code>$</code>：”字符串”的结束</li>\n<li><code>\\b</code>: 表示一个位置 =&gt; 其前一个和后一个字符不全是 <code>\\w</code></li>\n</ul>\n</li>\n<li><p>重复匹配：限定符</p>\n<ul>\n<li><code>*</code>     重复零次或更多次</li>\n<li><code>+</code>     重复一次或更多次</li>\n<li><code>?</code>     重复零次或一次</li>\n<li><code>{n}</code> 重复n次</li>\n<li><code>{n,}</code> 重复n次或更多次</li>\n<li><code>{n,m}</code> 重复n到m次</li>\n</ul>\n</li>\n<li><p>元素集：<code>[]</code> 里面表示一个范围</p>\n<ul>\n<li><code>[aeiou]</code> 匹配英文元音字母</li>\n<li><code>[0-9]</code> 匹配数字,即\\d</li>\n<li><code>[0-9a-zA-Z]</code> 匹配数字和字母</li>\n</ul>\n</li>\n<li><p>分支条件：|    把几种不同的规则分隔开(按顺序匹配)</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}|0\\d{3}-\\d{7}</code> 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(<strong>010-12345678</strong>)，一种是4位区号，7位本地号(<strong>0376-2233445</strong>)。</li>\n</ul>\n</li>\n<li><p>分组：可以用小括号来指定子表达式(也叫做分组)</p>\n<ul>\n<li><code>(\\d{1,3}\\.){3}\\d{1,3}</code> 是一个简单的 IP 地址匹配表达式</li>\n</ul>\n</li>\n<li><p>反义：</p>\n<ul>\n<li><code>\\W</code> 匹配任意不是字母，数字，下划线，汉字的字符</li>\n<li><code>\\S</code> 匹配任意不是空白符的字符</li>\n<li><code>\\D</code> 匹配任意非数字的字符</li>\n<li><code>\\B</code> 匹配不是单词开头或结束的位置</li>\n<li><code>[^x]</code>    匹配 <strong>除了 x 以外</strong> 的任意字符</li>\n<li><code>[^aeiou]</code> 匹配除了 aeiou 这几个字母以外的任意字符</li>\n</ul>\n</li>\n<li><p>后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: <strong>从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2</strong></p>\n<ul>\n<li><code>\\1</code>: 代表分组1匹配的文本</li>\n<li>捕获    <ul>\n<li><code>(exp)</code> 匹配 exp，并捕获文本到自动命名的组里</li>\n<li><code>(?&lt;name&gt;exp)</code> 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 <code>(?&#39;name&#39;exp)</code></li>\n<li><code>(?:exp)</code> 匹配 exp，不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>零宽断言（<strong>匹配位置！</strong>）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言</p>\n<ul>\n<li><code>(?=exp)</code> 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置<ul>\n<li><code>\\b\\w+(?=ing\\b)</code> 匹配以 ing 结尾的单词的前面部分(<strong>除了 ing 以外的部分</strong>)</li>\n</ul>\n</li>\n<li><code>(?&lt;=exp)</code> 零宽度正回顾后发断言，匹配 exp 后面的位置</li>\n<li><code>(?!exp)</code> 匹配后面跟的不是 exp 的位置</li>\n<li><code>(?&lt;!exp)</code> 匹配前面不是 exp 的位置</li>\n</ul>\n</li>\n<li><p>匹配优先级：</p>\n<ul>\n<li>最先开始的匹配拥有最高优先级 —— <strong>The match that begins earliest wins</strong></li>\n<li>贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符</li>\n<li>转化为懒惰匹配模式：要在限定符后面加上一个问号 <code>?</code></li>\n</ul>\n</li>\n<li><p>需要转义的字符要注意</p>\n<ul>\n<li><code>\\/</code>: 避免误认为是 正则表达式的结束符</li>\n<li><code>\\?</code>: 避免误认为是 非捕获匹配符或是限定符</li>\n<li><code>\\.</code>: 避免误认为是 任意匹配元字符</li>\n</ul>\n</li>\n<li><p>练习:</p>\n<ul>\n<li>匹配数字: <code>/^-?$/</code></li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><ul>\n<li>sublime 中的搜索功能: 打开正则开关(<strong>Regular expression</strong>)和高亮开关(<strong>Highlight matches</strong>)</li>\n<li>网上测试工具:<ul>\n<li><a href=\"http://tool.oschina.net/regex/\">开源中国在线工具</a></li>\n<li><a href=\"http://tool.chinaz.com/regex/\">站长工具</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JavaScript-中的用法\"><a href=\"#JavaScript-中的用法\" class=\"headerlink\" title=\"JavaScript 中的用法\"></a><strong>JavaScript</strong> 中的用法</h2><ul>\n<li><p><code>replace</code>方法: <code>stringObject.replace(regexp,replacement)</code></p>\n<ul>\n<li><code>replacement</code> 参数<ul>\n<li><code>$1、$2、...、$99</code>: 与 <strong>regexp</strong> 中的第 1 到第 99 个子表达式相匹配的文本</li>\n<li><code>$&amp;</code>: 与 <strong>regexp</strong> 相匹配的子串。 </li>\n<li><code>$` </code>: 位于匹配子串左侧的文本。 </li>\n<li><code>$&#39;</code>: 位于匹配子串右侧的文本。 </li>\n<li><code>%</code>: 直接量符号。</li>\n</ul>\n</li>\n<li><p>例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 替换两个名字的顺序</span></span><br><span class=\"line\">name = <span class=\"string\">\"Doe, John\"</span>;</span><br><span class=\"line\">name.replace(<span class=\"regexp\">/(\\w+)\\s*, \\s*(\\w+)/</span>, <span class=\"string\">\"$2 $1\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"RegExp-对象\"><a href=\"#RegExp-对象\" class=\"headerlink\" title=\"RegExp 对象\"></a><strong>RegExp</strong> 对象</h3><ul>\n<li>修饰符<ul>\n<li><code>i</code>: 执行对大小写不敏感的匹配 =&gt; <code>/[a-z]/i</code> 匹配a-z，A-Z</li>\n<li><code>g</code>: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=&gt; <code>/[a-z]/g</code></li>\n<li><code>m</code>: 执行多行匹配</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"普通语法\"><a href=\"#普通语法\" class=\"headerlink\" title=\"普通语法\"></a>普通语法</h2><ul>\n<li><p>例子</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}</code> 匹配 <strong>010-88888888</strong> 这类的电话</li>\n<li><code>^\\d{5,12}$</code> 填写的 QQ 号必须为 5 位到 12 位数字时</li>\n<li><code>\\ba\\w*\\b</code> 匹配以字母 a 开头的单词</li>\n<li><code>\\(?0\\d{2}[) -]?\\d{8}</code> 匹配几种格式的电话：<br><strong>(010)88886666</strong>，或 <strong>022-22334455</strong>，或 <strong>02912345678</strong></li>\n<li><code>((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})</code> 匹配 IP 地址</li>\n<li><code>\\b(\\w+)\\b\\s+\\1\\b</code> 可以用来匹配重复的单词，像 <strong>go go</strong>, 或者 <strong>kitty kitty</strong></li>\n<li><code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> 也可以</li>\n<li><p><strong>url 解析</strong> 的例子: </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseUrl</span>(<span class=\"params\">url</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> urlPattern = <span class=\"regexp\">/^(?:([A-Za-z]+):)?(\\/&#123;0,3&#125;)([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> result = urlPattern.exec(url);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> type = [<span class=\"string\">'url'</span>, <span class=\"string\">'scheme'</span>, <span class=\"string\">'slash'</span>, <span class=\"string\">'host'</span>, <span class=\"string\">'port'</span>, <span class=\"string\">'path'</span>, <span class=\"string\">'query'</span>, <span class=\"string\">'hash'</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">parseUrl(<span class=\"string\">\"http://tool.oschina.net:80/regex?haha=true#fragment\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元字符</p>\n<ul>\n<li><code>\\w</code> 匹配 字符、数字、下划线、汉字 等</li>\n<li><code>\\d</code> 匹配数字</li>\n<li><code>\\s</code> 匹配任意的空白符：空格，制表，换行，中文全角空格等</li>\n<li><code>.</code> 匹配除换行符(结束符)以外的任意字符</li>\n</ul>\n</li>\n<li><p>位置匹配：</p>\n<ul>\n<li><code>^</code>：”字符串”的开始</li>\n<li><code>$</code>：”字符串”的结束</li>\n<li><code>\\b</code>: 表示一个位置 =&gt; 其前一个和后一个字符不全是 <code>\\w</code></li>\n</ul>\n</li>\n<li><p>重复匹配：限定符</p>\n<ul>\n<li><code>*</code>     重复零次或更多次</li>\n<li><code>+</code>     重复一次或更多次</li>\n<li><code>?</code>     重复零次或一次</li>\n<li><code>{n}</code> 重复n次</li>\n<li><code>{n,}</code> 重复n次或更多次</li>\n<li><code>{n,m}</code> 重复n到m次</li>\n</ul>\n</li>\n<li><p>元素集：<code>[]</code> 里面表示一个范围</p>\n<ul>\n<li><code>[aeiou]</code> 匹配英文元音字母</li>\n<li><code>[0-9]</code> 匹配数字,即\\d</li>\n<li><code>[0-9a-zA-Z]</code> 匹配数字和字母</li>\n</ul>\n</li>\n<li><p>分支条件：|    把几种不同的规则分隔开(按顺序匹配)</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}|0\\d{3}-\\d{7}</code> 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(<strong>010-12345678</strong>)，一种是4位区号，7位本地号(<strong>0376-2233445</strong>)。</li>\n</ul>\n</li>\n<li><p>分组：可以用小括号来指定子表达式(也叫做分组)</p>\n<ul>\n<li><code>(\\d{1,3}\\.){3}\\d{1,3}</code> 是一个简单的 IP 地址匹配表达式</li>\n</ul>\n</li>\n<li><p>反义：</p>\n<ul>\n<li><code>\\W</code> 匹配任意不是字母，数字，下划线，汉字的字符</li>\n<li><code>\\S</code> 匹配任意不是空白符的字符</li>\n<li><code>\\D</code> 匹配任意非数字的字符</li>\n<li><code>\\B</code> 匹配不是单词开头或结束的位置</li>\n<li><code>[^x]</code>    匹配 <strong>除了 x 以外</strong> 的任意字符</li>\n<li><code>[^aeiou]</code> 匹配除了 aeiou 这几个字母以外的任意字符</li>\n</ul>\n</li>\n<li><p>后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: <strong>从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2</strong></p>\n<ul>\n<li><code>\\1</code>: 代表分组1匹配的文本</li>\n<li>捕获    <ul>\n<li><code>(exp)</code> 匹配 exp，并捕获文本到自动命名的组里</li>\n<li><code>(?&lt;name&gt;exp)</code> 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 <code>(?&#39;name&#39;exp)</code></li>\n<li><code>(?:exp)</code> 匹配 exp，不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>零宽断言（<strong>匹配位置！</strong>）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言</p>\n<ul>\n<li><code>(?=exp)</code> 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置<ul>\n<li><code>\\b\\w+(?=ing\\b)</code> 匹配以 ing 结尾的单词的前面部分(<strong>除了 ing 以外的部分</strong>)</li>\n</ul>\n</li>\n<li><code>(?&lt;=exp)</code> 零宽度正回顾后发断言，匹配 exp 后面的位置</li>\n<li><code>(?!exp)</code> 匹配后面跟的不是 exp 的位置</li>\n<li><code>(?&lt;!exp)</code> 匹配前面不是 exp 的位置</li>\n</ul>\n</li>\n<li><p>匹配优先级：</p>\n<ul>\n<li>最先开始的匹配拥有最高优先级 —— <strong>The match that begins earliest wins</strong></li>\n<li>贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符</li>\n<li>转化为懒惰匹配模式：要在限定符后面加上一个问号 <code>?</code></li>\n</ul>\n</li>\n<li><p>需要转义的字符要注意</p>\n<ul>\n<li><code>\\/</code>: 避免误认为是 正则表达式的结束符</li>\n<li><code>\\?</code>: 避免误认为是 非捕获匹配符或是限定符</li>\n<li><code>\\.</code>: 避免误认为是 任意匹配元字符</li>\n</ul>\n</li>\n<li><p>练习:</p>\n<ul>\n<li>匹配数字: <code>/^-?$/</code></li>\n</ul>\n</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciytpi9cn0000sv1id2ntriy5","category_id":"ciytpi9cy0003sv1iod5qbgjw","_id":"ciytpi9d30007sv1ifhm1ip9d"},{"post_id":"ciytpi9cs0001sv1i5snwyiry","category_id":"ciytpi9cy0003sv1iod5qbgjw","_id":"ciytpi9di000bsv1ikgd8dz5f"},{"post_id":"ciytpi9cz0004sv1idozrgbrh","category_id":"ciytpi9d30008sv1ifw4gitqt","_id":"ciytpi9dj000esv1i0awbmbyv"}],"PostTag":[{"post_id":"ciytpi9cn0000sv1id2ntriy5","tag_id":"ciytpi9cv0002sv1ifk0jzx3o","_id":"ciytpi9d4000asv1iivw4m9an"},{"post_id":"ciytpi9cn0000sv1id2ntriy5","tag_id":"ciytpi9d10005sv1itqvt7d5d","_id":"ciytpi9di000csv1ixjoxfst3"},{"post_id":"ciytpi9cs0001sv1i5snwyiry","tag_id":"ciytpi9cv0002sv1ifk0jzx3o","_id":"ciytpi9dj000gsv1ixsld7952"},{"post_id":"ciytpi9cs0001sv1i5snwyiry","tag_id":"ciytpi9di000dsv1if0c9445e","_id":"ciytpi9dk000hsv1i5xbvqbuw"},{"post_id":"ciytpi9cz0004sv1idozrgbrh","tag_id":"ciytpi9cv0002sv1ifk0jzx3o","_id":"ciytpi9dk000jsv1ii5u888y6"},{"post_id":"ciytpi9cz0004sv1idozrgbrh","tag_id":"ciytpi9d10005sv1itqvt7d5d","_id":"ciytpi9dk000ksv1ia3336x2y"}],"Tag":[{"name":"工具","_id":"ciytpi9cv0002sv1ifk0jzx3o"},{"name":"语法","_id":"ciytpi9d10005sv1itqvt7d5d"},{"name":"实践","_id":"ciytpi9di000dsv1if0c9445e"}]}}