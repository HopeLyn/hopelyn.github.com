{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/yilia/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"source/media/15481297883580/15481522955441.jpg","path":"media/15481297883580/15481522955441.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"source/media/14870541119124/14870623524159.jpg","path":"media/14870541119124/14870623524159.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870623717107.jpg","path":"media/14870541119124/14870623717107.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870545904964.jpg","path":"media/14870541119124/14870545904964.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482137824196.jpg","path":"media/15481297883580/15482137824196.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/media/14835104737473/14835105500366.jpg","path":"media/14835104737473/14835105500366.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870618446585.jpg","path":"media/14870541119124/14870618446585.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482397560137.jpg","path":"media/15481297883580/15482397560137.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482397569503.jpg","path":"media/15481297883580/15482397569503.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482397619087.jpg","path":"media/15481297883580/15482397619087.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/media/15481297883580/15482133672843.jpg","path":"media/15481297883580/15482133672843.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482407032089.jpg","path":"media/15481297883580/15482407032089.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482563560237.jpg","path":"media/15481297883580/15482563560237.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482589171116.jpg","path":"media/15481297883580/15482589171116.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482590011608.jpg","path":"media/15481297883580/15482590011608.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482119916067.jpg","path":"media/15481297883580/15482119916067.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482140578138.jpg","path":"media/15481297883580/15482140578138.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870635219273.jpg","path":"media/14870541119124/14870635219273.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482581731361.jpg","path":"media/15481297883580/15482581731361.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482156645261.jpg","path":"media/15481297883580/15482156645261.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870587262585.jpg","path":"media/14870541119124/14870587262585.jpg","modified":0,"renderable":0},{"_id":"source/media/15481297883580/15482559630550.jpg","path":"media/15481297883580/15482559630550.jpg","modified":0,"renderable":0},{"_id":"source/media/14870541119124/14870587533341.jpg","path":"media/14870541119124/14870587533341.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"9135724e1bac5de86335a72334dae0cb4e59be95","modified":1551250427442},{"_id":"source/favicon.ico","hash":"ed2eef2e82556fefaed8849b286f94afd33fc803","modified":1461835073000},{"_id":"themes/yilia/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1481880484000},{"_id":"themes/yilia/.DS_Store","hash":"32103c67ce5164dfd9eb7f2ec3cb8ec28e165dd3","modified":1486458829000},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1481880484000},{"_id":"themes/yilia/_config.yml","hash":"ffa5ea572f1d1ef32144366f201999f2b945c7dd","modified":1486458890000},{"_id":"themes/yilia/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1481880484000},{"_id":"source/_posts/.DS_Store","hash":"6c5abdd8fadc1e8e83abb37daaa6564d4d7d7654","modified":1486457489000},{"_id":"source/_posts/VSCode-基本操作.md","hash":"8ce09a0df3f7f4e49e80ef61c47045a95c0229fc","modified":1551251852208},{"_id":"source/_posts/Markdown语法学习.md","hash":"916c98e2097dbdc3a85d4ed1fca801ed00da4ee4","modified":1481880484000},{"_id":"source/_posts/Github Pages + Hexo 写博客.md","hash":"5c55d5a16cc3efcc10a3d3439a83235e69468c50","modified":1491645217000},{"_id":"source/_posts/日本行政区划.md","hash":"e9f229309cd5a39afb776c5a39322ac87e7ae5a2","modified":1486457604000},{"_id":"source/_posts/农药攻略.md","hash":"3998a7f63c7ef8e7e1c501edb3f44f030aa34eb6","modified":1551251660881},{"_id":"source/_posts/正则表达式学习.md","hash":"af8cefa76c8255fd6a3aa7bd856350fca9a61a84","modified":1481880484000},{"_id":"source/_posts/浏览器的 Cache 机制研究.md","hash":"5de3eab2dd5b83d7a772fd274a3765e8c731dbb3","modified":1491647299000},{"_id":"source/media/.DS_Store","hash":"164e2568379d8b2201a81df9478097cf03fcfa6c","modified":1551249885124},{"_id":"themes/yilia/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1481880484000},{"_id":"themes/yilia/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1481880484000},{"_id":"themes/yilia/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1481880484000},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1481880484000},{"_id":"themes/yilia/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1481880484000},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1481880484000},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1481880484000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1481880484000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1481880484000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1481880484000},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1481880484000},{"_id":"themes/yilia/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1481880484000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481880484000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1481880484000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1481880484000},{"_id":"themes/yilia/source/.DS_Store","hash":"54e47502587188bf64a50e1e1a14279f8f42c177","modified":1486456328000},{"_id":"themes/yilia/source/CNAME","hash":"e022601af38293437fedc7c29a46d08f4a4617fb","modified":1486363127000},{"_id":"source/media/14835104737473/.DS_Store","hash":"2352e326c4213fbdc77892a4ecf4cfbab5087b38","modified":1486457526000},{"_id":"source/media/15481297883580/15481522955441.jpg","hash":"a090696b274d787342212c540f897396bfd33e4c","modified":1548152295000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"d6306cd897683c25184a50b29931aa1fa18d119c","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"f7068535c0df7e7bc6614a046e7d4b262a65d8b2","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"47dc7c1d35928a7b026c683547f8482d2e524c63","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"fff29e619af2b1abcab7d5d2d6f78428272f18f7","modified":1481880484000},{"_id":"themes/yilia/source/css/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1481880484000},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1481880484000},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1481880484000},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1481880484000},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1481880484000},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1481880484000},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1481880484000},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1481880484000},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1481880484000},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1481880484000},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1481880484000},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1481880484000},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1481880484000},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1481880484000},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1481880484000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1481880484000},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1481880484000},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1481880484000},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1481880484000},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1481880484000},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1481880484000},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1481880484000},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1481880484000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1481880484000},{"_id":"themes/yilia/source/js/main.js","hash":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1481880484000},{"_id":"themes/yilia/source/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1481880484000},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1481880484000},{"_id":"source/media/14870541119124/14870623524159.jpg","hash":"351829667d1db73cc1bf723deb565c8059fffe4f","modified":1487062352000},{"_id":"source/media/14870541119124/14870623717107.jpg","hash":"74ad862db12c71c3516c653f5a815d3b959748b2","modified":1487062371000},{"_id":"source/media/14870541119124/14870545904964.jpg","hash":"4335afe3bfe7d32a6f169c3ee2317c15c212081c","modified":1487054590000},{"_id":"source/media/15481297883580/15482137824196.jpg","hash":"80f2db652f95ba3d62599540bbbddfa1708bfff6","modified":1548213782000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"924744aa3c1bce9056ba03cec02e19e095009126","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"0ac35bd92e58983c189ac0c35df404ebc6ee826e","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1481880484000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"08d3205dde3235f3e6881126268e6c473f46a8ac","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1481880484000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1481880484000},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1481880484000},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1481880484000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1481880484000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1481880484000},{"_id":"source/media/14835104737473/14835105500366.jpg","hash":"1c25959bbf7f817a0e42204829916266eaa01231","modified":1483510550000},{"_id":"source/media/14870541119124/14870618446585.jpg","hash":"1b820569ac5c21b7f35aa5f325e903e2bda68839","modified":1487061844000},{"_id":"source/media/15481297883580/15482397560137.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1548239756000},{"_id":"source/media/15481297883580/15482397569503.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1548239756000},{"_id":"source/media/15481297883580/15482397619087.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1548239761000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1481880484000},{"_id":"source/media/15481297883580/15482133672843.jpg","hash":"b27b0614f0957936ae28363e74c898a5edaa4536","modified":1548213367000},{"_id":"source/media/15481297883580/15482407032089.jpg","hash":"0539ac44bda0838d017f28673d1328a30f4d1358","modified":1548240703000},{"_id":"source/media/15481297883580/15482563560237.jpg","hash":"3aff842d518becba70cb2d0489961e233d280177","modified":1548256356000},{"_id":"source/media/15481297883580/15482589171116.jpg","hash":"57a63b41d6aee122ffca07f905a5c6b5f4fe47e5","modified":1548258917000},{"_id":"source/media/15481297883580/15482590011608.jpg","hash":"10669e342c5372bc398438560ed02fde161cd0d0","modified":1548259001000},{"_id":"source/media/15481297883580/15482119916067.jpg","hash":"746e30b86ac3562e123be6e6f31be4e25c4b807d","modified":1548211991000},{"_id":"source/media/15481297883580/15482140578138.jpg","hash":"533868d0b12da8ba71571f891bb1e680bc113e52","modified":1548214057000},{"_id":"source/media/14870541119124/14870635219273.jpg","hash":"3e1e8650d214d7a948bbe2052480e33e64189a62","modified":1487063521000},{"_id":"source/media/15481297883580/15482581731361.jpg","hash":"7fed2fcb0a8fae73f5be2edc22a71c661289443a","modified":1548258173000},{"_id":"source/media/15481297883580/15482156645261.jpg","hash":"4b345537f7cefe1e26824aa0dd7f33b049531f75","modified":1548215664000},{"_id":"source/media/14870541119124/14870587262585.jpg","hash":"4f01019f226e3266e704931f990f729fe84fe440","modified":1487058726000},{"_id":"source/media/15481297883580/15482559630550.jpg","hash":"c7c8d11dceab31d8e7fb332a41bd8660f3ca459b","modified":1548255963000},{"_id":"source/media/14870541119124/14870587533341.jpg","hash":"9dd41b376dbc7348038e76fbcc53079171f2abe1","modified":1487058753000},{"_id":"public/baidusitemap.xml","hash":"9b259be9daac70b9611c81fa68760c752df4c319","modified":1551251895364},{"_id":"public/atom.xml","hash":"314be4fd38a2d3bfee2beb0b3ce2ed7ecfd28885","modified":1551251895365},{"_id":"public/sitemap.xml","hash":"a21b5d133c08522d19cd9cb98ebf7fcd2514aac7","modified":1551251895673},{"_id":"public/2017/01/04/日本行政区划/index.html","hash":"d5253e69d7d6a0ec1ad6959396d76dd057f651b6","modified":1551251895732},{"_id":"public/archives/index.html","hash":"7ff113ce7ae961797f0012a6c7dd3af62580345f","modified":1551251895732},{"_id":"public/archives/2016/index.html","hash":"d10837934210bf54c303505b2f1f53575168a5f7","modified":1551251895783},{"_id":"public/archives/2016/04/index.html","hash":"2212f3950ca1474b5611fbd3756e50bc97134578","modified":1551251895784},{"_id":"public/archives/2017/index.html","hash":"d60c93275448a30aec30c543bfdce522049b4be8","modified":1551251895785},{"_id":"public/archives/2017/01/index.html","hash":"17ae5f56678513259323659d7590308675006ad0","modified":1551251895785},{"_id":"public/archives/2017/02/index.html","hash":"52d822027eaa3aa8d9f841d015a3d334213f72f0","modified":1551251895785},{"_id":"public/archives/2019/index.html","hash":"9b78ed77eb148a33ae55e8b3c1ae034423b60105","modified":1551251895785},{"_id":"public/archives/2019/02/index.html","hash":"830818f7b4832773fc3d1831721749b3dcd62070","modified":1551251895785},{"_id":"public/categories/已归档/index.html","hash":"4b6b80875d89c12123ac66604770d3b5784c8873","modified":1551251895785},{"_id":"public/categories/未完成/index.html","hash":"8c942c9abc4869257f3aa297f03757c6aa058d5f","modified":1551251895785},{"_id":"public/tags/工具/index.html","hash":"fe788e9bfd08874b05d90ee6db56688ed10b08e9","modified":1551251895786},{"_id":"public/2019/02/22/农药攻略/index.html","hash":"129a049731f573eb74c43a68ef050f71c37971ab","modified":1551251895786},{"_id":"public/2017/02/14/浏览器的 Cache 机制研究/index.html","hash":"1be357be35ef3f10cca7a97c7171e84b6c7ed299","modified":1551251895786},{"_id":"public/2016/04/09/Markdown语法学习/index.html","hash":"9b435af119efd7e7924e4d90466cbbbeedeecef3","modified":1551251895786},{"_id":"public/2016/04/08/正则表达式学习/index.html","hash":"360344402d4ae12d290a52b4818e5a7fa3f3b941","modified":1551251895786},{"_id":"public/2016/04/08/Github Pages + Hexo 写博客/index.html","hash":"1a66d6dcfda7a2e5b0ff63e890e6cddea92d4183","modified":1551251895786},{"_id":"public/index.html","hash":"3da7ecea2843febb34c450836e5ac91697671bb9","modified":1551251895786},{"_id":"public/tags/语法/index.html","hash":"6c78a0f18382fa8df15515425817e182d3b5584b","modified":1551251895795},{"_id":"public/tags/随笔/index.html","hash":"3a158a38d9b213ebe22afb6e3ca5290cc5469220","modified":1551251895795},{"_id":"public/tags/实践/index.html","hash":"432bf0ca25b4502469146a6a6d638c1af8b92945","modified":1551251895796},{"_id":"public/tags/游戏攻略/index.html","hash":"7e17d1f260abf47f9497c4c3bea097ebaaa21faa","modified":1551251895796},{"_id":"public/2019/02/27/VSCode-基本操作/index.html","hash":"2787bd898105fadd0ed0413e448aacf9120b6901","modified":1551251895796},{"_id":"public/media/15481297883580/15481522955441.jpg","hash":"a090696b274d787342212c540f897396bfd33e4c","modified":1551251895812},{"_id":"public/media/15481297883580/15482137824196.jpg","hash":"80f2db652f95ba3d62599540bbbddfa1708bfff6","modified":1551251895840},{"_id":"public/media/15481297883580/15482397560137.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1551251895857},{"_id":"public/media/15481297883580/15482397569503.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1551251895857},{"_id":"public/media/15481297883580/15482397619087.jpg","hash":"133a8c9a1401084fa71493598d72995dcc07a2bf","modified":1551251895857},{"_id":"public/media/15481297883580/15482133672843.jpg","hash":"b27b0614f0957936ae28363e74c898a5edaa4536","modified":1551251895860},{"_id":"public/media/15481297883580/15482407032089.jpg","hash":"0539ac44bda0838d017f28673d1328a30f4d1358","modified":1551251895860},{"_id":"public/media/15481297883580/15482563560237.jpg","hash":"3aff842d518becba70cb2d0489961e233d280177","modified":1551251895860},{"_id":"public/media/15481297883580/15482589171116.jpg","hash":"57a63b41d6aee122ffca07f905a5c6b5f4fe47e5","modified":1551251895860},{"_id":"public/media/15481297883580/15482590011608.jpg","hash":"10669e342c5372bc398438560ed02fde161cd0d0","modified":1551251895864},{"_id":"public/media/15481297883580/15482119916067.jpg","hash":"746e30b86ac3562e123be6e6f31be4e25c4b807d","modified":1551251895872},{"_id":"public/media/15481297883580/15482140578138.jpg","hash":"533868d0b12da8ba71571f891bb1e680bc113e52","modified":1551251895872},{"_id":"public/media/15481297883580/15482156645261.jpg","hash":"4b345537f7cefe1e26824aa0dd7f33b049531f75","modified":1551251895895},{"_id":"public/media/15481297883580/15482559630550.jpg","hash":"c7c8d11dceab31d8e7fb332a41bd8660f3ca459b","modified":1551251895895},{"_id":"public/media/15481297883580/15482581731361.jpg","hash":"7fed2fcb0a8fae73f5be2edc22a71c661289443a","modified":1551251895898}],"Category":[{"name":"未完成","_id":"cjsmvbeyq0002m21i5io0yzdl"},{"name":"已归档","_id":"cjsmvbez0000am21i98mfigfi"}],"Data":[],"Page":[],"Post":[{"title":"Markdown语法学习","date":"2016-04-09T08:01:28.000Z","_content":"**备注**: 待完成，从开头到\"图片大小\"部分尚未处理\n\n## 语法总结\n*\t段落与换行:\n\t* \t行尾多加两个空格，就可以换行\n\t*\t`<br>`\n\n*\t标题:\n\t*\t#标题1\n\n\t*\t标题2\n\t\t===\n\n\t*\t标题2\n\t\t-\n\n*\t引用: \n\t*\t单行引用\n\t\n\t*  \t>单行引用\n\n\t*\t>嵌套引用\n\t\t>>嵌套嵌套\n\t\t\n\t*\t>引用中使用 ***`markdown`*** 语法\n\n*\t列表:\n\t* \t无序列表\n\t\t* \t第一项\n\t\t+ \t第二项 \n\t\t-\t第三项\n\n\t*\t有序列表\n\t\t1.\t有序列表以`数字`和`.`为首\n\t\t2. \t数字的序列并不会影响生成的列表序列: \n\t\t4. \t比如这样\n\t\t5. \t也可以转义来取消序列的作用\n\t\t6\\. \n\n*\t代码\n\t* \t代码块\n\t<html>\n\t<div style='color:#69d'>蓝色的代码</div>\n\t</html>\n\n\t*\t内嵌代码: `<title>Markdown</title>`\n\n*\t分割线\n\n\t* * *\n\t---\n\t_ _ _\n\n\n*\t超链接:\n\t*\t本地文件:[icon.png](./images/icon.png)\n\n\t* \t[Google](http://www.google.com/)\n\n\t*  \t[Google][]\n\t\t[Google]: http://www.google.com/ \"Google\"\n\t*\t自动转换为链接\n\t\t* \tURL: <http://www.google.com/>\n\t\t*\tEmail: <123@email.com>\n*\t图片: \n\t* \t行内式  \n\t\n\t\t````js\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t\t````\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t*\t参考式\n\n\t\t````js\n\t\t// 注: hexo 中出不来结果\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\t\t````\n\t\t\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\n\t*\t图片大小:\n\t\t\n\t\t````js\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n\t\t````\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n*\t强调\n\t* \t*斜体* or _斜体_\n\n\t\t```js\n\t\t*斜体* or _斜体_\n\t\t```\n\t*  \t**粗体** or __粗体__\n\n\t\t```js\n\t\t**粗体** or __粗体__\n\t\t```\n\n*\t扩展语法\n\t* \t语法高亮\n\n\t\t````\n\t\t\t// 用法\n\t\t\t```js\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t\t```\n\t\t````\n\t\t````\n\t\t\t// 结果\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t````\n\t*\t表格: \n\t\t*\t`|` 区分单元格\n\t\t*\t`-` 分隔表头和其它行\n\t\t*\t用法\n\n\t\t\t```\n\t\t\t| 链接 | 结果 | 原因 |\n\t\t\t|-----|---|----------|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t```\n\t\t*\t结果 \n\n| 链接 | 结果 | 原因 |\n|-----|---|----------|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n\n\t\n## 注意问题\n*\t想要引用反引号(`` ` ``)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如``` `` ` `` ```\n","source":"_posts/Markdown语法学习.md","raw":"---\ntitle: Markdown语法学习\ndate: 2016-04-09 16:01:28\ncategories: 未完成\ntags: \n\t- 工具\n\t- 语法\n---\n**备注**: 待完成，从开头到\"图片大小\"部分尚未处理\n\n## 语法总结\n*\t段落与换行:\n\t* \t行尾多加两个空格，就可以换行\n\t*\t`<br>`\n\n*\t标题:\n\t*\t#标题1\n\n\t*\t标题2\n\t\t===\n\n\t*\t标题2\n\t\t-\n\n*\t引用: \n\t*\t单行引用\n\t\n\t*  \t>单行引用\n\n\t*\t>嵌套引用\n\t\t>>嵌套嵌套\n\t\t\n\t*\t>引用中使用 ***`markdown`*** 语法\n\n*\t列表:\n\t* \t无序列表\n\t\t* \t第一项\n\t\t+ \t第二项 \n\t\t-\t第三项\n\n\t*\t有序列表\n\t\t1.\t有序列表以`数字`和`.`为首\n\t\t2. \t数字的序列并不会影响生成的列表序列: \n\t\t4. \t比如这样\n\t\t5. \t也可以转义来取消序列的作用\n\t\t6\\. \n\n*\t代码\n\t* \t代码块\n\t<html>\n\t<div style='color:#69d'>蓝色的代码</div>\n\t</html>\n\n\t*\t内嵌代码: `<title>Markdown</title>`\n\n*\t分割线\n\n\t* * *\n\t---\n\t_ _ _\n\n\n*\t超链接:\n\t*\t本地文件:[icon.png](./images/icon.png)\n\n\t* \t[Google](http://www.google.com/)\n\n\t*  \t[Google][]\n\t\t[Google]: http://www.google.com/ \"Google\"\n\t*\t自动转换为链接\n\t\t* \tURL: <http://www.google.com/>\n\t\t*\tEmail: <123@email.com>\n*\t图片: \n\t* \t行内式  \n\t\n\t\t````js\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t\t````\n\t\t![GitHub](https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\")\n\t*\t参考式\n\n\t\t````js\n\t\t// 注: hexo 中出不来结果\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\t\t````\n\t\t\n\t\t![GitHub][github]\n\t\t[github]: https://avatars2.githubusercontent.com/u/3265208?v=3&s=100 \"GitHub,Social Coding\"\n\n\t*\t图片大小:\n\t\t\n\t\t````js\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n\t\t````\n\t\t<img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\" width=\"200\" height=\"200\" />\n*\t强调\n\t* \t*斜体* or _斜体_\n\n\t\t```js\n\t\t*斜体* or _斜体_\n\t\t```\n\t*  \t**粗体** or __粗体__\n\n\t\t```js\n\t\t**粗体** or __粗体__\n\t\t```\n\n*\t扩展语法\n\t* \t语法高亮\n\n\t\t````\n\t\t\t// 用法\n\t\t\t```js\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t\t```\n\t\t````\n\t\t````\n\t\t\t// 结果\n\t\t\twindow.addEventListener('load', function(){\n\t\t\t\tconsole.log('window loaded');\n\t\t\t})\n\t\t````\n\t*\t表格: \n\t\t*\t`|` 区分单元格\n\t\t*\t`-` 分隔表头和其它行\n\t\t*\t用法\n\n\t\t\t```\n\t\t\t| 链接 | 结果 | 原因 |\n\t\t\t|-----|---|----------|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t|文本内容| **`是`** |同协议同域名同端口|\n\t\t\t```\n\t\t*\t结果 \n\n| 链接 | 结果 | 原因 |\n|-----|---|----------|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n|文本内容| **`是`** |同协议同域名同端口|\n\n\t\n## 注意问题\n*\t想要引用反引号(`` ` ``)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如``` `` ` `` ```\n","slug":"Markdown语法学习","published":1,"updated":"2016-12-16T09:28:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeyi0000m21i3vr2e7u2","content":"<p><strong>备注</strong>: 待完成，从开头到”图片大小”部分尚未处理</p>\n<h2 id=\"语法总结\"><a href=\"#语法总结\" class=\"headerlink\" title=\"语法总结\"></a>语法总结</h2><ul>\n<li><p>段落与换行:</p>\n<ul>\n<li>行尾多加两个空格，就可以换行</li>\n<li><code>&lt;br&gt;</code></li>\n</ul>\n</li>\n<li><p>标题:</p>\n<ul>\n<li><p>#标题1</p>\n</li>\n<li><h1 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h1></li>\n<li><p>标题2<br>-</p>\n</li>\n</ul>\n</li>\n<li><p>引用: </p>\n<ul>\n<li><p>单行引用</p>\n</li>\n<li><blockquote>\n<p>单行引用</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>嵌套嵌套</p>\n</blockquote>\n</blockquote>\n</li>\n<li><blockquote>\n<p>引用中使用 <strong><em><code>markdown</code></em></strong> 语法</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>列表:</p>\n<ul>\n<li><p>无序列表</p>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项 </li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n</li>\n<li><p>有序列表</p>\n<ol>\n<li>有序列表以<code>数字</code>和<code>.</code>为首</li>\n<li>数字的序列并不会影响生成的列表序列: </li>\n<li>比如这样</li>\n<li>也可以转义来取消序列的作用<br>6. </li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>代码</p>\n<ul>\n<li><p>代码块</p>\n<html><br><div style=\"color:#69d\">蓝色的代码</div><br></html>\n</li>\n<li><p>内嵌代码: <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>\n</li>\n</ul>\n</li>\n<li><p>分割线</p>\n<hr>\n<hr>\n<hr>\n</li>\n</ul>\n<ul>\n<li><p>超链接:</p>\n<ul>\n<li><p>本地文件:<a href=\"./images/icon.png\">icon.png</a></p>\n</li>\n<li><p><a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">Google</a></p>\n</li>\n<li><p>[Google][]</p>\n</li>\n</ul>\n<p>   [Google]: <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">http://www.google.com/</a> “Google”</p>\n<ul>\n<li>自动转换为链接<ul>\n<li>URL: <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">http://www.google.com/</a></li>\n<li>Email: <a href=\"mailto:&#x31;&#x32;&#51;&#x40;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\" target=\"_blank\" rel=\"noopener\">&#x31;&#x32;&#51;&#x40;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>图片: </p>\n<ul>\n<li><p>行内式  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub](https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\")</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\"></p>\n</li>\n<li><p>参考式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注: hexo 中出不来结果</span></span><br><span class=\"line\">![GitHub][github]</span><br><span class=\"line\">[github]: https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    ![GitHub][github]\n    [github]: https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;GitHub,Social Coding&quot;\n\n*    图片大小:\n\n    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\"</span> alt=<span class=\"string\">\"GitHub\"</span> title=<span class=\"string\">\"GitHub,Social Coding\"</span> width=<span class=\"string\">\"200\"</span> height=<span class=\"string\">\"200\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n    &lt;img src=&quot;https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100&quot; alt=&quot;GitHub&quot; title=&quot;GitHub,Social Coding&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt;\n</code></pre><ul>\n<li><p>强调</p>\n<ul>\n<li><p><em>斜体</em> or _斜体_</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* or _斜体_</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>粗体</strong> or <strong>粗体</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**粗体** or __粗体__</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>扩展语法</p>\n<ul>\n<li><p>语法高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用法</span><br><span class=\"line\">```js</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 结果</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表格: </p>\n<ul>\n<li><code>|</code> 区分单元格</li>\n<li><code>-</code> 分隔表头和其它行</li>\n<li><p>用法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 链接 | 结果 | 原因 |</span><br><span class=\"line\">|-----|---|----------|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结果 </p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>链接</th>\n<th>结果</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h2><ul>\n<li>想要引用反引号(<code>`</code>)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如<code>`` ` ``</code></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>备注</strong>: 待完成，从开头到”图片大小”部分尚未处理</p>\n<h2 id=\"语法总结\"><a href=\"#语法总结\" class=\"headerlink\" title=\"语法总结\"></a>语法总结</h2><ul>\n<li><p>段落与换行:</p>\n<ul>\n<li>行尾多加两个空格，就可以换行</li>\n<li><code>&lt;br&gt;</code></li>\n</ul>\n</li>\n<li><p>标题:</p>\n<ul>\n<li><p>#标题1</p>\n</li>\n<li><h1 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h1></li>\n<li><p>标题2<br>-</p>\n</li>\n</ul>\n</li>\n<li><p>引用: </p>\n<ul>\n<li><p>单行引用</p>\n</li>\n<li><blockquote>\n<p>单行引用</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>嵌套引用</p>\n<blockquote>\n<p>嵌套嵌套</p>\n</blockquote>\n</blockquote>\n</li>\n<li><blockquote>\n<p>引用中使用 <strong><em><code>markdown</code></em></strong> 语法</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>列表:</p>\n<ul>\n<li><p>无序列表</p>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项 </li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n</li>\n<li><p>有序列表</p>\n<ol>\n<li>有序列表以<code>数字</code>和<code>.</code>为首</li>\n<li>数字的序列并不会影响生成的列表序列: </li>\n<li>比如这样</li>\n<li>也可以转义来取消序列的作用<br>6. </li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>代码</p>\n<ul>\n<li><p>代码块</p>\n<html><br><div style=\"color:#69d\">蓝色的代码</div><br></html>\n</li>\n<li><p>内嵌代码: <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>\n</li>\n</ul>\n</li>\n<li><p>分割线</p>\n<hr>\n<hr>\n<hr>\n</li>\n</ul>\n<ul>\n<li><p>超链接:</p>\n<ul>\n<li><p>本地文件:<a href=\"./images/icon.png\">icon.png</a></p>\n</li>\n<li><p><a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">Google</a></p>\n</li>\n<li><p>[Google][]</p>\n</li>\n</ul>\n<p>   [Google]: <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">http://www.google.com/</a> “Google”</p>\n<ul>\n<li>自动转换为链接<ul>\n<li>URL: <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener\">http://www.google.com/</a></li>\n<li>Email: <a href=\"mailto:&#x31;&#x32;&#51;&#x40;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;\" target=\"_blank\" rel=\"noopener\">&#x31;&#x32;&#51;&#x40;&#101;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>图片: </p>\n<ul>\n<li><p>行内式  </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![GitHub](https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\")</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\" alt=\"GitHub\" title=\"GitHub,Social Coding\"></p>\n</li>\n<li><p>参考式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注: hexo 中出不来结果</span></span><br><span class=\"line\">![GitHub][github]</span><br><span class=\"line\">[github]: https:<span class=\"comment\">//avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 \"GitHub,Social Coding\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>    ![GitHub][github]\n    [github]: https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100 &quot;GitHub,Social Coding&quot;\n\n*    图片大小:\n\n    <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">\"https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100\"</span> alt=<span class=\"string\">\"GitHub\"</span> title=<span class=\"string\">\"GitHub,Social Coding\"</span> width=<span class=\"string\">\"200\"</span> height=<span class=\"string\">\"200\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n    &lt;img src=&quot;https://avatars2.githubusercontent.com/u/3265208?v=3&amp;s=100&quot; alt=&quot;GitHub&quot; title=&quot;GitHub,Social Coding&quot; width=&quot;200&quot; height=&quot;200&quot; /&gt;\n</code></pre><ul>\n<li><p>强调</p>\n<ul>\n<li><p><em>斜体</em> or _斜体_</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*斜体* or _斜体_</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>粗体</strong> or <strong>粗体</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**粗体** or __粗体__</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>扩展语法</p>\n<ul>\n<li><p>语法高亮</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 用法</span><br><span class=\"line\">```js</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 结果</span><br><span class=\"line\">window.addEventListener(&apos;load&apos;, function()&#123;</span><br><span class=\"line\">\tconsole.log(&apos;window loaded&apos;);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>表格: </p>\n<ul>\n<li><code>|</code> 区分单元格</li>\n<li><code>-</code> 分隔表头和其它行</li>\n<li><p>用法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 链接 | 结果 | 原因 |</span><br><span class=\"line\">|-----|---|----------|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br><span class=\"line\">|文本内容| **`是`** |同协议同域名同端口|</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>结果 </p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>链接</th>\n<th>结果</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n<tr>\n<td>文本内容</td>\n<td><strong><code>是</code></strong></td>\n<td>同协议同域名同端口</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"注意问题\"><a href=\"#注意问题\" class=\"headerlink\" title=\"注意问题\"></a>注意问题</h2><ul>\n<li>想要引用反引号(<code>`</code>)的时候，使用多个反引号将其括起来(注意包括的反引号和内容中的反引号不能是连续的，需要用空格隔开)，如<code>`` ` ``</code></li>\n</ul>\n"},{"title":"Github Pages + Hexo 写博客","date":"2016-04-08T07:02:28.000Z","_content":"\n## 相关链接\n*\t[极客学院](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n## 本人博客地址\n*\t[http://hopelyn.github.io/](http://hopelyn.github.io/)\n* \t[http://blog.hopeleft.com/](http://blog.hopeleft.com/)\n\n## 配置环境\n### Github Pages Prjoect 搭建\n\n### Hexo配置\n#### 安装\n*\t安装 Node 环境: [https://hexo.io/docs/index.html#Install-Node-js](https://hexo.io/docs/index.html#Install-Node-js)\n\t* \t`curl https://raw.github.com/creationix/nvm/master/install.sh | sh`\n\t*  \t或者使用 nvm : `nvm install 4`\n\n* \t安装 Git 环境: [https://hexo.io/docs/index.html#Install-Git](https://hexo.io/docs/index.html#Install-Git)\n\t*  \t使用 homebrew: `brew install git`\n\t*  \t使用 macports: `port instal git`\n\n* \t安装 hexo (使用 npm 安装):`npm install -g hexo-cli`\n\n* \t安装 `hexo-deployer-git` => 可以发布 hexo 到相应的 git rep 上: `npm install hexo-deployer-git --save` \n\n#### 自定义配置\n*\t修改 `_config.yml` 文件:\n\t\t\n\t```yml\n\t// _config.xml\n\tdeploy:\n\t\ttype: git\n\t\trepo: git@github.com:HopeLyn/hopelyn.github.com.git\n\t\tbranch: master\n\t```\n*\t在 **./public** 文件夹下添加 `CNAME` 文件，并写下需要重定向的域名 \n\n\t```js\n\t// CNAME\n\tblog.hopeleft.com\n\t```\n*\t修改 theme\n\t* \t下载主题到 **./themes** 文件夹下\n\n\t\t````js\n\t\t// 安装 Next 主题\n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\t\t// 或者安装 yilia 主题\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\t````\n\n\t*\t修改 `_config.yml` 文件\n\n\t\t```js\n\t\t// #theme: next\n\t\ttheme: yilia\n\t\t```\n*\t`sitemap`: \n\t*\t普通的 **sitemap** 插件\n\t\t*\t安装\n\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tsitemap:\n\t           path: sitemap.xml\n\t\t\t```\n\t*\t**baidu-sitemap** 插件\n\t\t*\t安装\n\t\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-baidu-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tbaidusitemap:\n\t\t\t\tpath: baidusitemap.xml\n\t\t\t```\n*\t生成 `RSS`:\n\t* \t安装插件: `npm install hexo-generator-feed --save`\n\t*\t修改设置:\n\n\t\t```js\n\t\t// _config.xml\n\t\tfeed:\n\t\t\ttype: atom\n\t\t\tpath: atom.xml\n\t\t\tlimit: 20\n\t\t```\n*\t`yilia`主题的自定义配置\n\t* \tlanguage: 在主目录下的 `_config.yml` 中修改\n\t\n\t\t```js\n\t\tlanguage: zh-Hans #简体中文\n\t\t```\n\n### 使用方法\n*\t新建文章: `hexo new 'My Post Name'` => 就会在 **./source/_posts** 下新建一个 `My Post Name.md` 文件\n\n*\t通过 `hexo d -generate` 生成 html 文件(在 public 文件夹下)，并发布到 github 上\n\n*\t`hexo s`: 启动本地服务，方便调整和配置\n\n### 写文章方法\n* \t文章的头部\n\t*  \t用`hexo new 'My Post Name'`命令新建文章的话会自动生成开头，如下所示\n\t\n\t\t```js\n\t\t---\n\t\ttitle: Github Pages + Hexo 写博客\n\t\tdate: 2016-04-09 16:11:31\n\t\ttags:\n\t\t---\n\t\t```\n\n*\t文章的主体\n\t*\t基本按照 [Markdown](http://www.appinn.com/markdown/) 语法\n\t* \t**注意事项**\n\t\t*  \t在写副标题的时候，需要在`##` 和标题名中间留下空格，如 `## 使用方法`，否则会显示 `##使用方法` 在页面上，而不转义\n\t\t*  \t在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符\n\n\t\t\t```js\n\t\t\t*  这是第一个列表\n\t\t\t*  这是第二个列表\n\t\t\t```\n\n### 常见问题\n*\t`WARN  No layout: index.html`: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹\n\t* \t解决方法一: 重新拉取 => 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去\n\n\t\t```bash\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\t\t```\n\t*\t解决方法二: 通过 git subtree 来管理\n\n\t\t```bash\n\t\t// 新建一个指向远程仓库的 remote \n\t\tgit remote add yilia https://github.com/litten/hexo-theme-yilia.git\n\t\t\n\t\t// 在指定路径下建立 subtree，并同步代码\n\t\tgit subtree add —-prefix=themes/yilia/ yilia master\n\t\t\n\t\t// 或者直接建立\n\t\tgit subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master\n\t\t```\n","source":"_posts/Github Pages + Hexo 写博客.md","raw":"---\ntitle: Github Pages + Hexo 写博客\ndate: 2016-04-08 15:02:28\ncategories: 未完成\ntags: \n\t- 工具\n\t- 实践\n---\n\n## 相关链接\n*\t[极客学院](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n## 本人博客地址\n*\t[http://hopelyn.github.io/](http://hopelyn.github.io/)\n* \t[http://blog.hopeleft.com/](http://blog.hopeleft.com/)\n\n## 配置环境\n### Github Pages Prjoect 搭建\n\n### Hexo配置\n#### 安装\n*\t安装 Node 环境: [https://hexo.io/docs/index.html#Install-Node-js](https://hexo.io/docs/index.html#Install-Node-js)\n\t* \t`curl https://raw.github.com/creationix/nvm/master/install.sh | sh`\n\t*  \t或者使用 nvm : `nvm install 4`\n\n* \t安装 Git 环境: [https://hexo.io/docs/index.html#Install-Git](https://hexo.io/docs/index.html#Install-Git)\n\t*  \t使用 homebrew: `brew install git`\n\t*  \t使用 macports: `port instal git`\n\n* \t安装 hexo (使用 npm 安装):`npm install -g hexo-cli`\n\n* \t安装 `hexo-deployer-git` => 可以发布 hexo 到相应的 git rep 上: `npm install hexo-deployer-git --save` \n\n#### 自定义配置\n*\t修改 `_config.yml` 文件:\n\t\t\n\t```yml\n\t// _config.xml\n\tdeploy:\n\t\ttype: git\n\t\trepo: git@github.com:HopeLyn/hopelyn.github.com.git\n\t\tbranch: master\n\t```\n*\t在 **./public** 文件夹下添加 `CNAME` 文件，并写下需要重定向的域名 \n\n\t```js\n\t// CNAME\n\tblog.hopeleft.com\n\t```\n*\t修改 theme\n\t* \t下载主题到 **./themes** 文件夹下\n\n\t\t````js\n\t\t// 安装 Next 主题\n\t\tgit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\t\t// 或者安装 yilia 主题\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\t````\n\n\t*\t修改 `_config.yml` 文件\n\n\t\t```js\n\t\t// #theme: next\n\t\ttheme: yilia\n\t\t```\n*\t`sitemap`: \n\t*\t普通的 **sitemap** 插件\n\t\t*\t安装\n\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tsitemap:\n\t           path: sitemap.xml\n\t\t\t```\n\t*\t**baidu-sitemap** 插件\n\t\t*\t安装\n\t\t\n\t\t\t```js\n\t\t\tnpm install hexo-generator-baidu-sitemap --save\n\t\t\t```\n\t\t*\t修改 `_config.xml`\n\t\t\n\t\t\t```js\n\t\t\t// _config.xml\n\t\t\tbaidusitemap:\n\t\t\t\tpath: baidusitemap.xml\n\t\t\t```\n*\t生成 `RSS`:\n\t* \t安装插件: `npm install hexo-generator-feed --save`\n\t*\t修改设置:\n\n\t\t```js\n\t\t// _config.xml\n\t\tfeed:\n\t\t\ttype: atom\n\t\t\tpath: atom.xml\n\t\t\tlimit: 20\n\t\t```\n*\t`yilia`主题的自定义配置\n\t* \tlanguage: 在主目录下的 `_config.yml` 中修改\n\t\n\t\t```js\n\t\tlanguage: zh-Hans #简体中文\n\t\t```\n\n### 使用方法\n*\t新建文章: `hexo new 'My Post Name'` => 就会在 **./source/_posts** 下新建一个 `My Post Name.md` 文件\n\n*\t通过 `hexo d -generate` 生成 html 文件(在 public 文件夹下)，并发布到 github 上\n\n*\t`hexo s`: 启动本地服务，方便调整和配置\n\n### 写文章方法\n* \t文章的头部\n\t*  \t用`hexo new 'My Post Name'`命令新建文章的话会自动生成开头，如下所示\n\t\n\t\t```js\n\t\t---\n\t\ttitle: Github Pages + Hexo 写博客\n\t\tdate: 2016-04-09 16:11:31\n\t\ttags:\n\t\t---\n\t\t```\n\n*\t文章的主体\n\t*\t基本按照 [Markdown](http://www.appinn.com/markdown/) 语法\n\t* \t**注意事项**\n\t\t*  \t在写副标题的时候，需要在`##` 和标题名中间留下空格，如 `## 使用方法`，否则会显示 `##使用方法` 在页面上，而不转义\n\t\t*  \t在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符\n\n\t\t\t```js\n\t\t\t*  这是第一个列表\n\t\t\t*  这是第二个列表\n\t\t\t```\n\n### 常见问题\n*\t`WARN  No layout: index.html`: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹\n\t* \t解决方法一: 重新拉取 => 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去\n\n\t\t```bash\n\t\tgit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n\t\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\t\t```\n\t*\t解决方法二: 通过 git subtree 来管理\n\n\t\t```bash\n\t\t// 新建一个指向远程仓库的 remote \n\t\tgit remote add yilia https://github.com/litten/hexo-theme-yilia.git\n\t\t\n\t\t// 在指定路径下建立 subtree，并同步代码\n\t\tgit subtree add —-prefix=themes/yilia/ yilia master\n\t\t\n\t\t// 或者直接建立\n\t\tgit subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master\n\t\t```\n","slug":"Github Pages + Hexo 写博客","published":1,"updated":"2017-04-08T09:53:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeyn0001m21ir10siokm","content":"<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"noopener\">极客学院</a></li>\n</ul>\n<h2 id=\"本人博客地址\"><a href=\"#本人博客地址\" class=\"headerlink\" title=\"本人博客地址\"></a>本人博客地址</h2><ul>\n<li><a href=\"http://hopelyn.github.io/\" target=\"_blank\" rel=\"noopener\">http://hopelyn.github.io/</a></li>\n<li><a href=\"http://blog.hopeleft.com/\">http://blog.hopeleft.com/</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"Github-Pages-Prjoect-搭建\"><a href=\"#Github-Pages-Prjoect-搭建\" class=\"headerlink\" title=\"Github Pages Prjoect 搭建\"></a>Github Pages Prjoect 搭建</h3><h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>安装 Node 环境: <a href=\"https://hexo.io/docs/index.html#Install-Node-js\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/index.html#Install-Node-js</a></p>\n<ul>\n<li><code>curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></li>\n<li>或者使用 nvm : <code>nvm install 4</code></li>\n</ul>\n</li>\n<li><p>安装 Git 环境: <a href=\"https://hexo.io/docs/index.html#Install-Git\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/index.html#Install-Git</a></p>\n<ul>\n<li>使用 homebrew: <code>brew install git</code></li>\n<li>使用 macports: <code>port instal git</code></li>\n</ul>\n</li>\n<li><p>安装 hexo (使用 npm 安装):<code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>安装 <code>hexo-deployer-git</code> =&gt; 可以发布 hexo 到相应的 git rep 上: <code>npm install hexo-deployer-git --save</code> </p>\n</li>\n</ul>\n<h4 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h4><ul>\n<li><p>修改 <code>_config.yml</code> 文件:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span> <span class=\"string\">_config.xml</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\t<span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">\t<span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:HopeLyn/hopelyn.github.com.git</span></span><br><span class=\"line\">\t<span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <strong>./public</strong> 文件夹下添加 <code>CNAME</code> 文件，并写下需要重定向的域名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CNAME</span></span><br><span class=\"line\">blog.hopeleft.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 theme</p>\n<ul>\n<li><p>下载主题到 <strong>./themes</strong> 文件夹下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 安装 Next 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者安装 yilia 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/litten/hexo-theme-yilia.git themes/yilia</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.yml</code> 文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// #theme: next</span></span><br><span class=\"line\">theme: yilia</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>sitemap</code>: </p>\n<ul>\n<li><p>普通的 <strong>sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">         path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>baidu-sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">\tpath: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>生成 <code>RSS</code>:</p>\n<ul>\n<li>安装插件: <code>npm install hexo-generator-feed --save</code></li>\n<li><p>修改设置:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">feed:</span><br><span class=\"line\">\ttype: atom</span><br><span class=\"line\">\tpath: atom.xml</span><br><span class=\"line\">\tlimit: <span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>yilia</code>主题的自定义配置</p>\n<ul>\n<li><p>language: 在主目录下的 <code>_config.yml</code> 中修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans #简体中文</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>新建文章: <code>hexo new &#39;My Post Name&#39;</code> =&gt; 就会在 <strong>./source/_posts</strong> 下新建一个 <code>My Post Name.md</code> 文件</p>\n</li>\n<li><p>通过 <code>hexo d -generate</code> 生成 html 文件(在 public 文件夹下)，并发布到 github 上</p>\n</li>\n<li><p><code>hexo s</code>: 启动本地服务，方便调整和配置</p>\n</li>\n</ul>\n<h3 id=\"写文章方法\"><a href=\"#写文章方法\" class=\"headerlink\" title=\"写文章方法\"></a>写文章方法</h3><ul>\n<li><p>文章的头部</p>\n<ul>\n<li><p>用<code>hexo new &#39;My Post Name&#39;</code>命令新建文章的话会自动生成开头，如下所示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Github Pages + Hexo 写博客</span><br><span class=\"line\">date: <span class=\"number\">2016</span><span class=\"number\">-04</span><span class=\"number\">-09</span> <span class=\"number\">16</span>:<span class=\"number\">11</span>:<span class=\"number\">31</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>文章的主体</p>\n<ul>\n<li>基本按照 <a href=\"http://www.appinn.com/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> 语法</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li>在写副标题的时候，需要在<code>##</code> 和标题名中间留下空格，如 <code>## 使用方法</code>，否则会显示 <code>##使用方法</code> 在页面上，而不转义</li>\n<li><p>在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*  这是第一个列表</span><br><span class=\"line\">*  这是第二个列表</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><ul>\n<li><p><code>WARN  No layout: index.html</code>: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹</p>\n<ul>\n<li><p>解决方法一: 重新拉取 =&gt; 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法二: 通过 git subtree 来管理</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建一个指向远程仓库的 remote </span><br><span class=\"line\">git remote add yilia https://github.com/litten/hexo-theme-yilia.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在指定路径下建立 subtree，并同步代码</span><br><span class=\"line\">git subtree add —-prefix=themes/yilia/ yilia master</span><br><span class=\"line\"></span><br><span class=\"line\">// 或者直接建立</span><br><span class=\"line\">git subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"noopener\">极客学院</a></li>\n</ul>\n<h2 id=\"本人博客地址\"><a href=\"#本人博客地址\" class=\"headerlink\" title=\"本人博客地址\"></a>本人博客地址</h2><ul>\n<li><a href=\"http://hopelyn.github.io/\" target=\"_blank\" rel=\"noopener\">http://hopelyn.github.io/</a></li>\n<li><a href=\"http://blog.hopeleft.com/\">http://blog.hopeleft.com/</a></li>\n</ul>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><h3 id=\"Github-Pages-Prjoect-搭建\"><a href=\"#Github-Pages-Prjoect-搭建\" class=\"headerlink\" title=\"Github Pages Prjoect 搭建\"></a>Github Pages Prjoect 搭建</h3><h3 id=\"Hexo配置\"><a href=\"#Hexo配置\" class=\"headerlink\" title=\"Hexo配置\"></a>Hexo配置</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ul>\n<li><p>安装 Node 环境: <a href=\"https://hexo.io/docs/index.html#Install-Node-js\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/index.html#Install-Node-js</a></p>\n<ul>\n<li><code>curl https://raw.github.com/creationix/nvm/master/install.sh | sh</code></li>\n<li>或者使用 nvm : <code>nvm install 4</code></li>\n</ul>\n</li>\n<li><p>安装 Git 环境: <a href=\"https://hexo.io/docs/index.html#Install-Git\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/index.html#Install-Git</a></p>\n<ul>\n<li>使用 homebrew: <code>brew install git</code></li>\n<li>使用 macports: <code>port instal git</code></li>\n</ul>\n</li>\n<li><p>安装 hexo (使用 npm 安装):<code>npm install -g hexo-cli</code></p>\n</li>\n<li><p>安装 <code>hexo-deployer-git</code> =&gt; 可以发布 hexo 到相应的 git rep 上: <code>npm install hexo-deployer-git --save</code> </p>\n</li>\n</ul>\n<h4 id=\"自定义配置\"><a href=\"#自定义配置\" class=\"headerlink\" title=\"自定义配置\"></a>自定义配置</h4><ul>\n<li><p>修改 <code>_config.yml</code> 文件:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span> <span class=\"string\">_config.xml</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">\t<span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">\t<span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:HopeLyn/hopelyn.github.com.git</span></span><br><span class=\"line\">\t<span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 <strong>./public</strong> 文件夹下添加 <code>CNAME</code> 文件，并写下需要重定向的域名 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CNAME</span></span><br><span class=\"line\">blog.hopeleft.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 theme</p>\n<ul>\n<li><p>下载主题到 <strong>./themes</strong> 文件夹下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 安装 Next 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 或者安装 yilia 主题</span></span><br><span class=\"line\">git clone https:<span class=\"comment\">//github.com/litten/hexo-theme-yilia.git themes/yilia</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.yml</code> 文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// #theme: next</span></span><br><span class=\"line\">theme: yilia</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>sitemap</code>: </p>\n<ul>\n<li><p>普通的 <strong>sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">         path: sitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>baidu-sitemap</strong> 插件</p>\n<ul>\n<li><p>安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 <code>_config.xml</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">\tpath: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>生成 <code>RSS</code>:</p>\n<ul>\n<li>安装插件: <code>npm install hexo-generator-feed --save</code></li>\n<li><p>修改设置:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// _config.xml</span></span><br><span class=\"line\">feed:</span><br><span class=\"line\">\ttype: atom</span><br><span class=\"line\">\tpath: atom.xml</span><br><span class=\"line\">\tlimit: <span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>yilia</code>主题的自定义配置</p>\n<ul>\n<li><p>language: 在主目录下的 <code>_config.yml</code> 中修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">language: zh-Hans #简体中文</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>新建文章: <code>hexo new &#39;My Post Name&#39;</code> =&gt; 就会在 <strong>./source/_posts</strong> 下新建一个 <code>My Post Name.md</code> 文件</p>\n</li>\n<li><p>通过 <code>hexo d -generate</code> 生成 html 文件(在 public 文件夹下)，并发布到 github 上</p>\n</li>\n<li><p><code>hexo s</code>: 启动本地服务，方便调整和配置</p>\n</li>\n</ul>\n<h3 id=\"写文章方法\"><a href=\"#写文章方法\" class=\"headerlink\" title=\"写文章方法\"></a>写文章方法</h3><ul>\n<li><p>文章的头部</p>\n<ul>\n<li><p>用<code>hexo new &#39;My Post Name&#39;</code>命令新建文章的话会自动生成开头，如下所示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Github Pages + Hexo 写博客</span><br><span class=\"line\">date: <span class=\"number\">2016</span><span class=\"number\">-04</span><span class=\"number\">-09</span> <span class=\"number\">16</span>:<span class=\"number\">11</span>:<span class=\"number\">31</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>文章的主体</p>\n<ul>\n<li>基本按照 <a href=\"http://www.appinn.com/markdown/\" target=\"_blank\" rel=\"noopener\">Markdown</a> 语法</li>\n<li><p><strong>注意事项</strong></p>\n<ul>\n<li>在写副标题的时候，需要在<code>##</code> 和标题名中间留下空格，如 <code>## 使用方法</code>，否则会显示 <code>##使用方法</code> 在页面上，而不转义</li>\n<li><p>在写列表时(如下所示)，多余的空行有时会导致语义上的误解，比如将其当作是引用的换行符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*  这是第一个列表</span><br><span class=\"line\">*  这是第二个列表</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h3><ul>\n<li><p><code>WARN  No layout: index.html</code>: 当使用 git 来保存 hexo 文件夹时，因为 yilia 和 next 是单独的 git project，所以当你换电脑，或者重新 clone 这个工程时，yilia 和 next 只剩下空的文件夹</p>\n<ul>\n<li><p>解决方法一: 重新拉取 =&gt; 但是当你用 git 管理 hexo 项目的时候，这些主题并不会 push 上去</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决方法二: 通过 git subtree 来管理</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建一个指向远程仓库的 remote </span><br><span class=\"line\">git remote add yilia https://github.com/litten/hexo-theme-yilia.git</span><br><span class=\"line\"></span><br><span class=\"line\">// 在指定路径下建立 subtree，并同步代码</span><br><span class=\"line\">git subtree add —-prefix=themes/yilia/ yilia master</span><br><span class=\"line\"></span><br><span class=\"line\">// 或者直接建立</span><br><span class=\"line\">git subtree add --prefix=themes/next --squash https://github.com/iissnan/hexo-theme-next.git master</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"日本行政区划","date":"2017-01-04T06:14:01.000Z","_content":"\n## 两级行政区划\n*   **都、道、府、县**（广域地方公共团体）：东京都，北海道，大阪府，京都府, 43县。其办事机构称为“厅”，即“都厅”、“道厅”、“府厅”、“县厅”，行政长官称为“知事”\n\n*   **市、町、村**（基础地方公共团体）：其办事机构称“役所”，即“市役所”、“町役所”、“村役所”，行政长官称为“市长”、“町长”、“村长”。其中，町相当于中国的镇。\n\n## 八个地区\n根据地理位置，又可分为八个地区：北海道地方，东北地方，关东地方，中部地方，近畿地方，中国地方，四国地方，九州及冲绳地方\n\n![日本行政区划图](/media/14835104737473/14835105500366.jpg)\n\n\n\n\n\n\n\n\n","source":"_posts/日本行政区划.md","raw":"---\ntitle: 日本行政区划\ndate: 2017-01-04 14:14:01\ntags: \n\t- 随笔\n---\n\n## 两级行政区划\n*   **都、道、府、县**（广域地方公共团体）：东京都，北海道，大阪府，京都府, 43县。其办事机构称为“厅”，即“都厅”、“道厅”、“府厅”、“县厅”，行政长官称为“知事”\n\n*   **市、町、村**（基础地方公共团体）：其办事机构称“役所”，即“市役所”、“町役所”、“村役所”，行政长官称为“市长”、“町长”、“村长”。其中，町相当于中国的镇。\n\n## 八个地区\n根据地理位置，又可分为八个地区：北海道地方，东北地方，关东地方，中部地方，近畿地方，中国地方，四国地方，九州及冲绳地方\n\n![日本行政区划图](/media/14835104737473/14835105500366.jpg)\n\n\n\n\n\n\n\n\n","slug":"日本行政区划","published":1,"updated":"2017-02-07T08:53:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeys0004m21imhxspf0g","content":"<h2 id=\"两级行政区划\"><a href=\"#两级行政区划\" class=\"headerlink\" title=\"两级行政区划\"></a>两级行政区划</h2><ul>\n<li><p><strong>都、道、府、县</strong>（广域地方公共团体）：东京都，北海道，大阪府，京都府, 43县。其办事机构称为“厅”，即“都厅”、“道厅”、“府厅”、“县厅”，行政长官称为“知事”</p>\n</li>\n<li><p><strong>市、町、村</strong>（基础地方公共团体）：其办事机构称“役所”，即“市役所”、“町役所”、“村役所”，行政长官称为“市长”、“町长”、“村长”。其中，町相当于中国的镇。</p>\n</li>\n</ul>\n<h2 id=\"八个地区\"><a href=\"#八个地区\" class=\"headerlink\" title=\"八个地区\"></a>八个地区</h2><p>根据地理位置，又可分为八个地区：北海道地方，东北地方，关东地方，中部地方，近畿地方，中国地方，四国地方，九州及冲绳地方</p>\n<p><img src=\"/media/14835104737473/14835105500366.jpg\" alt=\"日本行政区划图\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"两级行政区划\"><a href=\"#两级行政区划\" class=\"headerlink\" title=\"两级行政区划\"></a>两级行政区划</h2><ul>\n<li><p><strong>都、道、府、县</strong>（广域地方公共团体）：东京都，北海道，大阪府，京都府, 43县。其办事机构称为“厅”，即“都厅”、“道厅”、“府厅”、“县厅”，行政长官称为“知事”</p>\n</li>\n<li><p><strong>市、町、村</strong>（基础地方公共团体）：其办事机构称“役所”，即“市役所”、“町役所”、“村役所”，行政长官称为“市长”、“町长”、“村长”。其中，町相当于中国的镇。</p>\n</li>\n</ul>\n<h2 id=\"八个地区\"><a href=\"#八个地区\" class=\"headerlink\" title=\"八个地区\"></a>八个地区</h2><p>根据地理位置，又可分为八个地区：北海道地方，东北地方，关东地方，中部地方，近畿地方，中国地方，四国地方，九州及冲绳地方</p>\n<p><img src=\"/media/14835104737473/14835105500366.jpg\" alt=\"日本行政区划图\"></p>\n"},{"title":"农药攻略","date":"2019-02-22T10:26:06.000Z","_content":"\n## 常见术语\n*   AP / APC，AD / ADC\n*   行为：打野/反蓝/反红、gank/游走/埋伏、清兵/推线、推塔/偷塔\n*   NPC：暴君/主宰（大小龙）、野怪（小野/红蓝怪/螃蟹）、炮车、近战兵/远程兵/超级兵\n*   角色分类：射手、法师、刺客、战士/突进、辅助\n*   位置分类：上单、中单、射手(下路)、打野、辅助/自由人 => 分别介绍玩法\n*   建筑：高地、水晶、防御塔(一塔/二塔/高地塔)、泉水\n*   地形：墙壁、草丛\n*   兵线 / 控线 => 技巧\n*   经济面板\n\n### 机制\n*   恢复自身状态\n    *   一塔前的回血包\n    *   自带的恢复技能\n    *   部分英雄的技能 => 亚瑟、铠被动回血，扁鹊、蔡文姬加血技能 => 出 制裁/梦魇 针对\n    *   部分装备 => 圣杯、噬神；进化水晶、霸者；吸血之镰(末世/泣血/制裁)；提神水晶、炼金护符\n*   刷兵\n    *   3个近战一个远程，一波兵到2级\n    *   第七波出现炮车，这个时候安琪拉一波技能收不完，需要加普攻\n*   刷野\n    *   第一波野全收升4级，比线上所有人都快\n    *   射手拿一红，可以配合辅助杀人\n    *   阵容强势，可以一级反蓝\n    *   一个人可以反蓝概率高的：钟馗、猴子、韩信\n    *   反反蓝技巧：打野进草丛 => **配图**，惩戒最后一格血用\n*   杀人\n    *   一血 300\n    *   人头初始值 200\n        *   被杀者每死一次都会减钱，但期间杀一次人就恢复 200 初始值\n        *   杀人者每杀一次人都会加钱，但只要期间死一次，就恢复 200 初始值\n    *   助攻：是杀人者的一半。多人则均分\n*   补兵\n    *   远程 36，10分钟后达到最大值 54\n    *   近战 54，10分钟后达到最大值 81\n    *   炮车 93，10分钟后达到最大值 140\n    *   超兵和炮车一样\n    *   主宰/暴君：117\n    *   若小兵不是自己打的，则只能得到 77% 经济\n    *   队友在身边会分享经验和经济\n*   技能加点 => 可下载《王者荣耀助手》\n    *   甄姬加点：主二副一，有大点大 =>  一技能需要预判容易放空，二技能只要弹到两次，伤害就高于一技能，而且可以叠加两次标记，配合被动容易杀人\n    *   安琪拉：主二副一，有大点大 => 二技能虽然需要预判，但是升级可以减冷却，而且有持续伤害，配合被动后，总和远高于一技能，并且可以在二技能打到对方身上时多加两次普攻\n    *   嬴政：主二副一，有大点大 => 升级二技能可以增加法强，减少冷却，增加移速，增加生存能力和输出，而一技能更多只能打到敌方一次，起到减速效果，升级意义不大\n    *   庄周：主二副一，有大点大 => 二技能升级减 CD，而且叠加伤害增加，配合被动将成为庄周的主要伤害输出，一技能主要提供减速和远程消耗\n        *   一级的时候看情况加，出门可以留技能点，如果对面射手和辅助在打红，没有第一时间上线，那么可以学二技能清兵，清完一波就有一技能了，趁这个时候还可以打一波螃蟹\n    \n## 战前准备\n*   合适的快捷信息，举例说明何时使用 => 推荐清单\n*   认识不同的英雄，技能，以及定位，并且选择合适的出装：举例说明(打野，劣单，中单，辅助，射手)\n*   合适的铭文 => 吐槽：没钱的同学可以选择“通用铭文”( AP 出 `冷却>法强>法吸>法穿`， AD 出 `攻击>物吸>暴击>攻速>物穿`，辅助出`生命+法防/物防+回血`)\n\n## 战斗过程\n*   小地图\n    *   发信号\n    *   \n\n### 各个位置的玩法\n*   中单\n    *   英雄技巧\n        *   安琪拉可以越兵线放技能压人，只要2技能打到，对面不死也要脱层皮\n        *   甄姬的话主要是看对面位置，看到对面要上来补兵的时候，放2技能，两次2技能对面就会被冻住，接上1技能再加两次普攻可以单杀\n        *   周瑜，不好杀人，但是可以防火加吹风，把兵线压进塔内，对面不好补刀，并且能够对塔造成伤害\n    *   时刻注意刺客和辅助的游走，一般看到打野的队友快清完野的时候，对面应该也清完并且升到4级准备杀人了(这时候可以看看经济面板，看对面的等级和装备)\n*   上单\n    *   对面一般会拿一红，抢时间清掉第一波小兵和螃蟹，然后猥琐呆在草丛里吃经验就好，尽量别用技能，因为兵线过去自己反而没法吃经验\n    *   尽量别死，死了对方射手就可以拿塔，辅助就可以游走中路，打野就会入侵己方野区 => **配图**\n    *   现在边路都要有一定带线抗压能力，对面如果只有射手你要有一定能力可以威胁对方，比如花木兰、铠、庄周都有前期单杀能力，吕布、宫本四级可以强杀对面\n\n*   射手\n    *   自私点拿一红，可以配合辅助杀死对面下单，然后拿塔，蹲草丛，等对方回来再杀一次，然后入侵对面野区，线野全清，经济爆炸\n    *   带闪现，方便逃跑\n    *   hit and run，尤其是后羿，走一步A一下，粘死对方\n    *   逆风时线上不好混，可以出把打野刀补经济\n    *   尚香这种缺蓝的可以出个炼金护符补蓝\n\n*   辅助\n    *   配合射手拿红，快死时，赶紧去线上，可以来得及第一个小兵，否则就会损失54金币和部分经验\n    *   有一定控制技时，可以躲在左侧草丛阴人(钟馗、钟无艳，庄周等)，不要一直打小兵，抢了射手钱还杀不死对方\n    *   看情况到左侧草丛，防止中路和对方打野来人 gank\n    *   辅助更多的是躲在草丛或是探索草丛，为队友做视野，替队友档刀\n\n*   打野\n    *   先拿蓝buff，拿了以后升2级，有两个技能，并且cd短，可以迅速清掉其它野\n    *   出打野刀，效率高，经验多\n    *   带惩戒，升级打野刀后可以补一手控制，而且有时候可以反红反蓝\n    *   如果对面没有拿红，可以看情况gank射手，假如拿了，果断继续清掉下路野，然后gank下路\n    *   打野经常都是脆皮，尽量别从正面上，抄后路、走草丛、蹲野点，怎么猥琐怎么来\n    *   一般选择gank目标是脆皮法师、射手、刺客\n    *   节奏很重要，假如没有好机会就继续发育，经济一旦落下就废了\n    *   逆风时，注意掌握己方野区，否则对面可以偷蓝，然后包上中路队友，偷红也是一样\n    *   顺风时，可以入侵对面野区，压制对面打野、射手经济，并且看情况收线偷塔\n\n## 其它\n*   兵线很重要，尽量选可以带线逃跑的英雄，偷着偷着就赢了。\n*   一切皆有可能，经常是中路一波团灭就可以反推对面了，所以顺逆风都要注意\n*   主宰/暴君的控制\n    *   小地图可以看到对面是否在打主宰/暴君\n    *   假如对面都不在线上了，不是抱团埋伏，就是打暴君了\n    *   打暴君的最好时机\n        *   对面都在小地图上露面了，并且在最远的一条兵线上\n        *   打了对面一波团灭，推了一波高地塔，对面马上就要活了，己方小兵没到或状态不好的时候，可以去打暴君，不行就清野，实行三光政策\n\n    \n \n\n","source":"_posts/农药攻略.md","raw":"---\ntitle: 农药攻略\ndate: 2019-02-22 18:26:06\ntags: 游戏攻略\n---\n\n## 常见术语\n*   AP / APC，AD / ADC\n*   行为：打野/反蓝/反红、gank/游走/埋伏、清兵/推线、推塔/偷塔\n*   NPC：暴君/主宰（大小龙）、野怪（小野/红蓝怪/螃蟹）、炮车、近战兵/远程兵/超级兵\n*   角色分类：射手、法师、刺客、战士/突进、辅助\n*   位置分类：上单、中单、射手(下路)、打野、辅助/自由人 => 分别介绍玩法\n*   建筑：高地、水晶、防御塔(一塔/二塔/高地塔)、泉水\n*   地形：墙壁、草丛\n*   兵线 / 控线 => 技巧\n*   经济面板\n\n### 机制\n*   恢复自身状态\n    *   一塔前的回血包\n    *   自带的恢复技能\n    *   部分英雄的技能 => 亚瑟、铠被动回血，扁鹊、蔡文姬加血技能 => 出 制裁/梦魇 针对\n    *   部分装备 => 圣杯、噬神；进化水晶、霸者；吸血之镰(末世/泣血/制裁)；提神水晶、炼金护符\n*   刷兵\n    *   3个近战一个远程，一波兵到2级\n    *   第七波出现炮车，这个时候安琪拉一波技能收不完，需要加普攻\n*   刷野\n    *   第一波野全收升4级，比线上所有人都快\n    *   射手拿一红，可以配合辅助杀人\n    *   阵容强势，可以一级反蓝\n    *   一个人可以反蓝概率高的：钟馗、猴子、韩信\n    *   反反蓝技巧：打野进草丛 => **配图**，惩戒最后一格血用\n*   杀人\n    *   一血 300\n    *   人头初始值 200\n        *   被杀者每死一次都会减钱，但期间杀一次人就恢复 200 初始值\n        *   杀人者每杀一次人都会加钱，但只要期间死一次，就恢复 200 初始值\n    *   助攻：是杀人者的一半。多人则均分\n*   补兵\n    *   远程 36，10分钟后达到最大值 54\n    *   近战 54，10分钟后达到最大值 81\n    *   炮车 93，10分钟后达到最大值 140\n    *   超兵和炮车一样\n    *   主宰/暴君：117\n    *   若小兵不是自己打的，则只能得到 77% 经济\n    *   队友在身边会分享经验和经济\n*   技能加点 => 可下载《王者荣耀助手》\n    *   甄姬加点：主二副一，有大点大 =>  一技能需要预判容易放空，二技能只要弹到两次，伤害就高于一技能，而且可以叠加两次标记，配合被动容易杀人\n    *   安琪拉：主二副一，有大点大 => 二技能虽然需要预判，但是升级可以减冷却，而且有持续伤害，配合被动后，总和远高于一技能，并且可以在二技能打到对方身上时多加两次普攻\n    *   嬴政：主二副一，有大点大 => 升级二技能可以增加法强，减少冷却，增加移速，增加生存能力和输出，而一技能更多只能打到敌方一次，起到减速效果，升级意义不大\n    *   庄周：主二副一，有大点大 => 二技能升级减 CD，而且叠加伤害增加，配合被动将成为庄周的主要伤害输出，一技能主要提供减速和远程消耗\n        *   一级的时候看情况加，出门可以留技能点，如果对面射手和辅助在打红，没有第一时间上线，那么可以学二技能清兵，清完一波就有一技能了，趁这个时候还可以打一波螃蟹\n    \n## 战前准备\n*   合适的快捷信息，举例说明何时使用 => 推荐清单\n*   认识不同的英雄，技能，以及定位，并且选择合适的出装：举例说明(打野，劣单，中单，辅助，射手)\n*   合适的铭文 => 吐槽：没钱的同学可以选择“通用铭文”( AP 出 `冷却>法强>法吸>法穿`， AD 出 `攻击>物吸>暴击>攻速>物穿`，辅助出`生命+法防/物防+回血`)\n\n## 战斗过程\n*   小地图\n    *   发信号\n    *   \n\n### 各个位置的玩法\n*   中单\n    *   英雄技巧\n        *   安琪拉可以越兵线放技能压人，只要2技能打到，对面不死也要脱层皮\n        *   甄姬的话主要是看对面位置，看到对面要上来补兵的时候，放2技能，两次2技能对面就会被冻住，接上1技能再加两次普攻可以单杀\n        *   周瑜，不好杀人，但是可以防火加吹风，把兵线压进塔内，对面不好补刀，并且能够对塔造成伤害\n    *   时刻注意刺客和辅助的游走，一般看到打野的队友快清完野的时候，对面应该也清完并且升到4级准备杀人了(这时候可以看看经济面板，看对面的等级和装备)\n*   上单\n    *   对面一般会拿一红，抢时间清掉第一波小兵和螃蟹，然后猥琐呆在草丛里吃经验就好，尽量别用技能，因为兵线过去自己反而没法吃经验\n    *   尽量别死，死了对方射手就可以拿塔，辅助就可以游走中路，打野就会入侵己方野区 => **配图**\n    *   现在边路都要有一定带线抗压能力，对面如果只有射手你要有一定能力可以威胁对方，比如花木兰、铠、庄周都有前期单杀能力，吕布、宫本四级可以强杀对面\n\n*   射手\n    *   自私点拿一红，可以配合辅助杀死对面下单，然后拿塔，蹲草丛，等对方回来再杀一次，然后入侵对面野区，线野全清，经济爆炸\n    *   带闪现，方便逃跑\n    *   hit and run，尤其是后羿，走一步A一下，粘死对方\n    *   逆风时线上不好混，可以出把打野刀补经济\n    *   尚香这种缺蓝的可以出个炼金护符补蓝\n\n*   辅助\n    *   配合射手拿红，快死时，赶紧去线上，可以来得及第一个小兵，否则就会损失54金币和部分经验\n    *   有一定控制技时，可以躲在左侧草丛阴人(钟馗、钟无艳，庄周等)，不要一直打小兵，抢了射手钱还杀不死对方\n    *   看情况到左侧草丛，防止中路和对方打野来人 gank\n    *   辅助更多的是躲在草丛或是探索草丛，为队友做视野，替队友档刀\n\n*   打野\n    *   先拿蓝buff，拿了以后升2级，有两个技能，并且cd短，可以迅速清掉其它野\n    *   出打野刀，效率高，经验多\n    *   带惩戒，升级打野刀后可以补一手控制，而且有时候可以反红反蓝\n    *   如果对面没有拿红，可以看情况gank射手，假如拿了，果断继续清掉下路野，然后gank下路\n    *   打野经常都是脆皮，尽量别从正面上，抄后路、走草丛、蹲野点，怎么猥琐怎么来\n    *   一般选择gank目标是脆皮法师、射手、刺客\n    *   节奏很重要，假如没有好机会就继续发育，经济一旦落下就废了\n    *   逆风时，注意掌握己方野区，否则对面可以偷蓝，然后包上中路队友，偷红也是一样\n    *   顺风时，可以入侵对面野区，压制对面打野、射手经济，并且看情况收线偷塔\n\n## 其它\n*   兵线很重要，尽量选可以带线逃跑的英雄，偷着偷着就赢了。\n*   一切皆有可能，经常是中路一波团灭就可以反推对面了，所以顺逆风都要注意\n*   主宰/暴君的控制\n    *   小地图可以看到对面是否在打主宰/暴君\n    *   假如对面都不在线上了，不是抱团埋伏，就是打暴君了\n    *   打暴君的最好时机\n        *   对面都在小地图上露面了，并且在最远的一条兵线上\n        *   打了对面一波团灭，推了一波高地塔，对面马上就要活了，己方小兵没到或状态不好的时候，可以去打暴君，不行就清野，实行三光政策\n\n    \n \n\n","slug":"农药攻略","published":1,"updated":"2019-02-27T07:14:20.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeyu0005m21ij1qhwo2l","content":"<h2 id=\"常见术语\"><a href=\"#常见术语\" class=\"headerlink\" title=\"常见术语\"></a>常见术语</h2><ul>\n<li>AP / APC，AD / ADC</li>\n<li>行为：打野/反蓝/反红、gank/游走/埋伏、清兵/推线、推塔/偷塔</li>\n<li>NPC：暴君/主宰（大小龙）、野怪（小野/红蓝怪/螃蟹）、炮车、近战兵/远程兵/超级兵</li>\n<li>角色分类：射手、法师、刺客、战士/突进、辅助</li>\n<li>位置分类：上单、中单、射手(下路)、打野、辅助/自由人 =&gt; 分别介绍玩法</li>\n<li>建筑：高地、水晶、防御塔(一塔/二塔/高地塔)、泉水</li>\n<li>地形：墙壁、草丛</li>\n<li>兵线 / 控线 =&gt; 技巧</li>\n<li>经济面板</li>\n</ul>\n<h3 id=\"机制\"><a href=\"#机制\" class=\"headerlink\" title=\"机制\"></a>机制</h3><ul>\n<li>恢复自身状态<ul>\n<li>一塔前的回血包</li>\n<li>自带的恢复技能</li>\n<li>部分英雄的技能 =&gt; 亚瑟、铠被动回血，扁鹊、蔡文姬加血技能 =&gt; 出 制裁/梦魇 针对</li>\n<li>部分装备 =&gt; 圣杯、噬神；进化水晶、霸者；吸血之镰(末世/泣血/制裁)；提神水晶、炼金护符</li>\n</ul>\n</li>\n<li>刷兵<ul>\n<li>3个近战一个远程，一波兵到2级</li>\n<li>第七波出现炮车，这个时候安琪拉一波技能收不完，需要加普攻</li>\n</ul>\n</li>\n<li>刷野<ul>\n<li>第一波野全收升4级，比线上所有人都快</li>\n<li>射手拿一红，可以配合辅助杀人</li>\n<li>阵容强势，可以一级反蓝</li>\n<li>一个人可以反蓝概率高的：钟馗、猴子、韩信</li>\n<li>反反蓝技巧：打野进草丛 =&gt; <strong>配图</strong>，惩戒最后一格血用</li>\n</ul>\n</li>\n<li>杀人<ul>\n<li>一血 300</li>\n<li>人头初始值 200<ul>\n<li>被杀者每死一次都会减钱，但期间杀一次人就恢复 200 初始值</li>\n<li>杀人者每杀一次人都会加钱，但只要期间死一次，就恢复 200 初始值</li>\n</ul>\n</li>\n<li>助攻：是杀人者的一半。多人则均分</li>\n</ul>\n</li>\n<li>补兵<ul>\n<li>远程 36，10分钟后达到最大值 54</li>\n<li>近战 54，10分钟后达到最大值 81</li>\n<li>炮车 93，10分钟后达到最大值 140</li>\n<li>超兵和炮车一样</li>\n<li>主宰/暴君：117</li>\n<li>若小兵不是自己打的，则只能得到 77% 经济</li>\n<li>队友在身边会分享经验和经济</li>\n</ul>\n</li>\n<li>技能加点 =&gt; 可下载《王者荣耀助手》<ul>\n<li>甄姬加点：主二副一，有大点大 =&gt;  一技能需要预判容易放空，二技能只要弹到两次，伤害就高于一技能，而且可以叠加两次标记，配合被动容易杀人</li>\n<li>安琪拉：主二副一，有大点大 =&gt; 二技能虽然需要预判，但是升级可以减冷却，而且有持续伤害，配合被动后，总和远高于一技能，并且可以在二技能打到对方身上时多加两次普攻</li>\n<li>嬴政：主二副一，有大点大 =&gt; 升级二技能可以增加法强，减少冷却，增加移速，增加生存能力和输出，而一技能更多只能打到敌方一次，起到减速效果，升级意义不大</li>\n<li>庄周：主二副一，有大点大 =&gt; 二技能升级减 CD，而且叠加伤害增加，配合被动将成为庄周的主要伤害输出，一技能主要提供减速和远程消耗<ul>\n<li>一级的时候看情况加，出门可以留技能点，如果对面射手和辅助在打红，没有第一时间上线，那么可以学二技能清兵，清完一波就有一技能了，趁这个时候还可以打一波螃蟹</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"战前准备\"><a href=\"#战前准备\" class=\"headerlink\" title=\"战前准备\"></a>战前准备</h2><ul>\n<li>合适的快捷信息，举例说明何时使用 =&gt; 推荐清单</li>\n<li>认识不同的英雄，技能，以及定位，并且选择合适的出装：举例说明(打野，劣单，中单，辅助，射手)</li>\n<li>合适的铭文 =&gt; 吐槽：没钱的同学可以选择“通用铭文”( AP 出 <code>冷却&gt;法强&gt;法吸&gt;法穿</code>， AD 出 <code>攻击&gt;物吸&gt;暴击&gt;攻速&gt;物穿</code>，辅助出<code>生命+法防/物防+回血</code>)</li>\n</ul>\n<h2 id=\"战斗过程\"><a href=\"#战斗过程\" class=\"headerlink\" title=\"战斗过程\"></a>战斗过程</h2><ul>\n<li>小地图<ul>\n<li>发信号</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"各个位置的玩法\"><a href=\"#各个位置的玩法\" class=\"headerlink\" title=\"各个位置的玩法\"></a>各个位置的玩法</h3><ul>\n<li>中单<ul>\n<li>英雄技巧<ul>\n<li>安琪拉可以越兵线放技能压人，只要2技能打到，对面不死也要脱层皮</li>\n<li>甄姬的话主要是看对面位置，看到对面要上来补兵的时候，放2技能，两次2技能对面就会被冻住，接上1技能再加两次普攻可以单杀</li>\n<li>周瑜，不好杀人，但是可以防火加吹风，把兵线压进塔内，对面不好补刀，并且能够对塔造成伤害</li>\n</ul>\n</li>\n<li>时刻注意刺客和辅助的游走，一般看到打野的队友快清完野的时候，对面应该也清完并且升到4级准备杀人了(这时候可以看看经济面板，看对面的等级和装备)</li>\n</ul>\n</li>\n<li><p>上单</p>\n<ul>\n<li>对面一般会拿一红，抢时间清掉第一波小兵和螃蟹，然后猥琐呆在草丛里吃经验就好，尽量别用技能，因为兵线过去自己反而没法吃经验</li>\n<li>尽量别死，死了对方射手就可以拿塔，辅助就可以游走中路，打野就会入侵己方野区 =&gt; <strong>配图</strong></li>\n<li>现在边路都要有一定带线抗压能力，对面如果只有射手你要有一定能力可以威胁对方，比如花木兰、铠、庄周都有前期单杀能力，吕布、宫本四级可以强杀对面</li>\n</ul>\n</li>\n<li><p>射手</p>\n<ul>\n<li>自私点拿一红，可以配合辅助杀死对面下单，然后拿塔，蹲草丛，等对方回来再杀一次，然后入侵对面野区，线野全清，经济爆炸</li>\n<li>带闪现，方便逃跑</li>\n<li>hit and run，尤其是后羿，走一步A一下，粘死对方</li>\n<li>逆风时线上不好混，可以出把打野刀补经济</li>\n<li>尚香这种缺蓝的可以出个炼金护符补蓝</li>\n</ul>\n</li>\n<li><p>辅助</p>\n<ul>\n<li>配合射手拿红，快死时，赶紧去线上，可以来得及第一个小兵，否则就会损失54金币和部分经验</li>\n<li>有一定控制技时，可以躲在左侧草丛阴人(钟馗、钟无艳，庄周等)，不要一直打小兵，抢了射手钱还杀不死对方</li>\n<li>看情况到左侧草丛，防止中路和对方打野来人 gank</li>\n<li>辅助更多的是躲在草丛或是探索草丛，为队友做视野，替队友档刀</li>\n</ul>\n</li>\n<li><p>打野</p>\n<ul>\n<li>先拿蓝buff，拿了以后升2级，有两个技能，并且cd短，可以迅速清掉其它野</li>\n<li>出打野刀，效率高，经验多</li>\n<li>带惩戒，升级打野刀后可以补一手控制，而且有时候可以反红反蓝</li>\n<li>如果对面没有拿红，可以看情况gank射手，假如拿了，果断继续清掉下路野，然后gank下路</li>\n<li>打野经常都是脆皮，尽量别从正面上，抄后路、走草丛、蹲野点，怎么猥琐怎么来</li>\n<li>一般选择gank目标是脆皮法师、射手、刺客</li>\n<li>节奏很重要，假如没有好机会就继续发育，经济一旦落下就废了</li>\n<li>逆风时，注意掌握己方野区，否则对面可以偷蓝，然后包上中路队友，偷红也是一样</li>\n<li>顺风时，可以入侵对面野区，压制对面打野、射手经济，并且看情况收线偷塔</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h2><ul>\n<li>兵线很重要，尽量选可以带线逃跑的英雄，偷着偷着就赢了。</li>\n<li>一切皆有可能，经常是中路一波团灭就可以反推对面了，所以顺逆风都要注意</li>\n<li>主宰/暴君的控制<ul>\n<li>小地图可以看到对面是否在打主宰/暴君</li>\n<li>假如对面都不在线上了，不是抱团埋伏，就是打暴君了</li>\n<li>打暴君的最好时机<ul>\n<li>对面都在小地图上露面了，并且在最远的一条兵线上</li>\n<li>打了对面一波团灭，推了一波高地塔，对面马上就要活了，己方小兵没到或状态不好的时候，可以去打暴君，不行就清野，实行三光政策</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常见术语\"><a href=\"#常见术语\" class=\"headerlink\" title=\"常见术语\"></a>常见术语</h2><ul>\n<li>AP / APC，AD / ADC</li>\n<li>行为：打野/反蓝/反红、gank/游走/埋伏、清兵/推线、推塔/偷塔</li>\n<li>NPC：暴君/主宰（大小龙）、野怪（小野/红蓝怪/螃蟹）、炮车、近战兵/远程兵/超级兵</li>\n<li>角色分类：射手、法师、刺客、战士/突进、辅助</li>\n<li>位置分类：上单、中单、射手(下路)、打野、辅助/自由人 =&gt; 分别介绍玩法</li>\n<li>建筑：高地、水晶、防御塔(一塔/二塔/高地塔)、泉水</li>\n<li>地形：墙壁、草丛</li>\n<li>兵线 / 控线 =&gt; 技巧</li>\n<li>经济面板</li>\n</ul>\n<h3 id=\"机制\"><a href=\"#机制\" class=\"headerlink\" title=\"机制\"></a>机制</h3><ul>\n<li>恢复自身状态<ul>\n<li>一塔前的回血包</li>\n<li>自带的恢复技能</li>\n<li>部分英雄的技能 =&gt; 亚瑟、铠被动回血，扁鹊、蔡文姬加血技能 =&gt; 出 制裁/梦魇 针对</li>\n<li>部分装备 =&gt; 圣杯、噬神；进化水晶、霸者；吸血之镰(末世/泣血/制裁)；提神水晶、炼金护符</li>\n</ul>\n</li>\n<li>刷兵<ul>\n<li>3个近战一个远程，一波兵到2级</li>\n<li>第七波出现炮车，这个时候安琪拉一波技能收不完，需要加普攻</li>\n</ul>\n</li>\n<li>刷野<ul>\n<li>第一波野全收升4级，比线上所有人都快</li>\n<li>射手拿一红，可以配合辅助杀人</li>\n<li>阵容强势，可以一级反蓝</li>\n<li>一个人可以反蓝概率高的：钟馗、猴子、韩信</li>\n<li>反反蓝技巧：打野进草丛 =&gt; <strong>配图</strong>，惩戒最后一格血用</li>\n</ul>\n</li>\n<li>杀人<ul>\n<li>一血 300</li>\n<li>人头初始值 200<ul>\n<li>被杀者每死一次都会减钱，但期间杀一次人就恢复 200 初始值</li>\n<li>杀人者每杀一次人都会加钱，但只要期间死一次，就恢复 200 初始值</li>\n</ul>\n</li>\n<li>助攻：是杀人者的一半。多人则均分</li>\n</ul>\n</li>\n<li>补兵<ul>\n<li>远程 36，10分钟后达到最大值 54</li>\n<li>近战 54，10分钟后达到最大值 81</li>\n<li>炮车 93，10分钟后达到最大值 140</li>\n<li>超兵和炮车一样</li>\n<li>主宰/暴君：117</li>\n<li>若小兵不是自己打的，则只能得到 77% 经济</li>\n<li>队友在身边会分享经验和经济</li>\n</ul>\n</li>\n<li>技能加点 =&gt; 可下载《王者荣耀助手》<ul>\n<li>甄姬加点：主二副一，有大点大 =&gt;  一技能需要预判容易放空，二技能只要弹到两次，伤害就高于一技能，而且可以叠加两次标记，配合被动容易杀人</li>\n<li>安琪拉：主二副一，有大点大 =&gt; 二技能虽然需要预判，但是升级可以减冷却，而且有持续伤害，配合被动后，总和远高于一技能，并且可以在二技能打到对方身上时多加两次普攻</li>\n<li>嬴政：主二副一，有大点大 =&gt; 升级二技能可以增加法强，减少冷却，增加移速，增加生存能力和输出，而一技能更多只能打到敌方一次，起到减速效果，升级意义不大</li>\n<li>庄周：主二副一，有大点大 =&gt; 二技能升级减 CD，而且叠加伤害增加，配合被动将成为庄周的主要伤害输出，一技能主要提供减速和远程消耗<ul>\n<li>一级的时候看情况加，出门可以留技能点，如果对面射手和辅助在打红，没有第一时间上线，那么可以学二技能清兵，清完一波就有一技能了，趁这个时候还可以打一波螃蟹</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"战前准备\"><a href=\"#战前准备\" class=\"headerlink\" title=\"战前准备\"></a>战前准备</h2><ul>\n<li>合适的快捷信息，举例说明何时使用 =&gt; 推荐清单</li>\n<li>认识不同的英雄，技能，以及定位，并且选择合适的出装：举例说明(打野，劣单，中单，辅助，射手)</li>\n<li>合适的铭文 =&gt; 吐槽：没钱的同学可以选择“通用铭文”( AP 出 <code>冷却&gt;法强&gt;法吸&gt;法穿</code>， AD 出 <code>攻击&gt;物吸&gt;暴击&gt;攻速&gt;物穿</code>，辅助出<code>生命+法防/物防+回血</code>)</li>\n</ul>\n<h2 id=\"战斗过程\"><a href=\"#战斗过程\" class=\"headerlink\" title=\"战斗过程\"></a>战斗过程</h2><ul>\n<li>小地图<ul>\n<li>发信号</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"各个位置的玩法\"><a href=\"#各个位置的玩法\" class=\"headerlink\" title=\"各个位置的玩法\"></a>各个位置的玩法</h3><ul>\n<li>中单<ul>\n<li>英雄技巧<ul>\n<li>安琪拉可以越兵线放技能压人，只要2技能打到，对面不死也要脱层皮</li>\n<li>甄姬的话主要是看对面位置，看到对面要上来补兵的时候，放2技能，两次2技能对面就会被冻住，接上1技能再加两次普攻可以单杀</li>\n<li>周瑜，不好杀人，但是可以防火加吹风，把兵线压进塔内，对面不好补刀，并且能够对塔造成伤害</li>\n</ul>\n</li>\n<li>时刻注意刺客和辅助的游走，一般看到打野的队友快清完野的时候，对面应该也清完并且升到4级准备杀人了(这时候可以看看经济面板，看对面的等级和装备)</li>\n</ul>\n</li>\n<li><p>上单</p>\n<ul>\n<li>对面一般会拿一红，抢时间清掉第一波小兵和螃蟹，然后猥琐呆在草丛里吃经验就好，尽量别用技能，因为兵线过去自己反而没法吃经验</li>\n<li>尽量别死，死了对方射手就可以拿塔，辅助就可以游走中路，打野就会入侵己方野区 =&gt; <strong>配图</strong></li>\n<li>现在边路都要有一定带线抗压能力，对面如果只有射手你要有一定能力可以威胁对方，比如花木兰、铠、庄周都有前期单杀能力，吕布、宫本四级可以强杀对面</li>\n</ul>\n</li>\n<li><p>射手</p>\n<ul>\n<li>自私点拿一红，可以配合辅助杀死对面下单，然后拿塔，蹲草丛，等对方回来再杀一次，然后入侵对面野区，线野全清，经济爆炸</li>\n<li>带闪现，方便逃跑</li>\n<li>hit and run，尤其是后羿，走一步A一下，粘死对方</li>\n<li>逆风时线上不好混，可以出把打野刀补经济</li>\n<li>尚香这种缺蓝的可以出个炼金护符补蓝</li>\n</ul>\n</li>\n<li><p>辅助</p>\n<ul>\n<li>配合射手拿红，快死时，赶紧去线上，可以来得及第一个小兵，否则就会损失54金币和部分经验</li>\n<li>有一定控制技时，可以躲在左侧草丛阴人(钟馗、钟无艳，庄周等)，不要一直打小兵，抢了射手钱还杀不死对方</li>\n<li>看情况到左侧草丛，防止中路和对方打野来人 gank</li>\n<li>辅助更多的是躲在草丛或是探索草丛，为队友做视野，替队友档刀</li>\n</ul>\n</li>\n<li><p>打野</p>\n<ul>\n<li>先拿蓝buff，拿了以后升2级，有两个技能，并且cd短，可以迅速清掉其它野</li>\n<li>出打野刀，效率高，经验多</li>\n<li>带惩戒，升级打野刀后可以补一手控制，而且有时候可以反红反蓝</li>\n<li>如果对面没有拿红，可以看情况gank射手，假如拿了，果断继续清掉下路野，然后gank下路</li>\n<li>打野经常都是脆皮，尽量别从正面上，抄后路、走草丛、蹲野点，怎么猥琐怎么来</li>\n<li>一般选择gank目标是脆皮法师、射手、刺客</li>\n<li>节奏很重要，假如没有好机会就继续发育，经济一旦落下就废了</li>\n<li>逆风时，注意掌握己方野区，否则对面可以偷蓝，然后包上中路队友，偷红也是一样</li>\n<li>顺风时，可以入侵对面野区，压制对面打野、射手经济，并且看情况收线偷塔</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h2><ul>\n<li>兵线很重要，尽量选可以带线逃跑的英雄，偷着偷着就赢了。</li>\n<li>一切皆有可能，经常是中路一波团灭就可以反推对面了，所以顺逆风都要注意</li>\n<li>主宰/暴君的控制<ul>\n<li>小地图可以看到对面是否在打主宰/暴君</li>\n<li>假如对面都不在线上了，不是抱团埋伏，就是打暴君了</li>\n<li>打暴君的最好时机<ul>\n<li>对面都在小地图上露面了，并且在最远的一条兵线上</li>\n<li>打了对面一波团灭，推了一波高地塔，对面马上就要活了，己方小兵没到或状态不好的时候，可以去打暴君，不行就清野，实行三光政策</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"正则表达式学习","date":"2016-04-08T07:35:56.000Z","description":"这篇文章主要是在于记录正则表达式的入门学习过程，总结了其语法以及一些基本使用方法","_content":"\n## 测试工具\n*\tsublime 中的搜索功能: 打开正则开关(**Regular expression**)和高亮开关(**Highlight matches**)\n* \t网上测试工具:\n\t*  \t[开源中国在线工具](http://tool.oschina.net/regex/)\n\t*  \t[站长工具](http://tool.chinaz.com/regex/)\n\n## **JavaScript** 中的用法\n* \t`replace`方法: `stringObject.replace(regexp,replacement) `\n\t*  `replacement` 参数\n\t\t*  `$1、$2、...、$99`: 与 **regexp** 中的第 1 到第 99 个子表达式相匹配的文本\n\t\t*\t`$&`: 与 **regexp** 相匹配的子串。 \n\t\t*\t``$` ``: 位于匹配子串左侧的文本。 \n\t\t*\t`$'`: 位于匹配子串右侧的文本。 \n\t\t*\t`%`: 直接量符号。\n\t*\t例子\n\n\t\t```js\n\t\t// 替换两个名字的顺序\n\t\tname = \"Doe, John\";\n\t\tname.replace(/(\\w+)\\s*, \\s*(\\w+)/, \"$2 $1\");\n\t\t```\n\n### **RegExp** 对象\n*\t修饰符\n\t*\t`i`: 执行对大小写不敏感的匹配 => `/[a-z]/i` 匹配a-z，A-Z\n\t*\t`g`: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=> `/[a-z]/g`\n\t*\t`m`: 执行多行匹配\n\n## 普通语法\n*\t例子\n\t*\t`0\\d{2}-\\d{8}` 匹配 **010-88888888** 这类的电话\n\t*\t`^\\d{5,12}$` 填写的 QQ 号必须为 5 位到 12 位数字时\n\t* \t`\\ba\\w*\\b` 匹配以字母 a 开头的单词\n\t*  `\\(?0\\d{2}[) -]?\\d{8}` 匹配几种格式的电话：\n\t\t**(010)88886666**，或 **022-22334455**，或 **02912345678**\n\t*  `((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})` 匹配 IP 地址\n\t*  `\\b(\\w+)\\b\\s+\\1\\b` 可以用来匹配重复的单词，像 **go go**, 或者 **kitty kitty**\n\t*  `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` 也可以\n\t*\t**url 解析** 的例子: \n\n\t\t```js\n\t\tfunction parseUrl(url){\n\t\t\tvar urlPattern = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\t\t\tvar result = urlPattern.exec(url);\n\t\t\tvar type = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t\tparseUrl(\"http://tool.oschina.net:80/regex?haha=true#fragment\");\n\t\t// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]\n\t\t```\n\t\t\n*  元字符\n\t*  \t`\\w` 匹配 字符、数字、下划线、汉字 等\n\t* \t`\\d` 匹配数字\n\t* \t`\\s` 匹配任意的空白符：空格，制表，换行，中文全角空格等\n\t*\t`.` 匹配除换行符(结束符)以外的任意字符\n\n* \t位置匹配：\n\t*\t`^`：\"字符串\"的开始\n\t* \t`$`：\"字符串\"的结束\n\t* \t`\\b`: 表示一个位置 => 其前一个和后一个字符不全是 `\\w`\n\n*  重复匹配：限定符\n\t*\t`*`\t 重复零次或更多次\n\t*\t`+`\t 重复一次或更多次\n\t*\t`?`\t 重复零次或一次\n\t*\t`{n}` 重复n次\n\t*\t`{n,}` 重复n次或更多次\n\t*\t`{n,m}` 重复n到m次\n\n*\t元素集：`[]` 里面表示一个范围\n\t* \t`[aeiou]` 匹配英文元音字母\n\t*  \t`[0-9]` 匹配数字,即\\d\n\t*  \t`[0-9a-zA-Z]` 匹配数字和字母\n\n*  \t分支条件：|\t把几种不同的规则分隔开(按顺序匹配)\n\t*  \t`0\\d{2}-\\d{8}|0\\d{3}-\\d{7}` 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(**010-12345678**)，一种是4位区号，7位本地号(**0376-2233445**)。\n\n*  \t分组：可以用小括号来指定子表达式(也叫做分组)\n\t* \t`(\\d{1,3}\\.){3}\\d{1,3}` 是一个简单的 IP 地址匹配表达式\n\n*  \t反义：\n\t*  \t`\\W` 匹配任意不是字母，数字，下划线，汉字的字符\n\t*\t`\\S` 匹配任意不是空白符的字符\n\t*\t`\\D` 匹配任意非数字的字符\n\t*\t`\\B` 匹配不是单词开头或结束的位置\n\t*\t`[^x]`\t匹配 **除了 x 以外** 的任意字符\n\t*\t`[^aeiou]` 匹配除了 aeiou 这几个字母以外的任意字符\n\n* \t后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: **从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2**\n\t* \t`\\1`: 代表分组1匹配的文本\n\t*  \t捕获\t\n\t\t*  \t`(exp)` 匹配 exp，并捕获文本到自动命名的组里\n\t\t*\t`(?<name>exp)` 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 `(?'name'exp)`\n\t\t*\t`(?:exp)` 匹配 exp，不捕获匹配的文本，也不给此分组分配组号\n\n*\t零宽断言（**匹配位置！**）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言\n\t* \t`(?=exp)` 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置\n\t\t*\t`\\b\\w+(?=ing\\b)` 匹配以 ing 结尾的单词的前面部分(**除了 ing 以外的部分**)\n\t*\t`(?<=exp)` 零宽度正回顾后发断言，匹配 exp 后面的位置\n\t*\t`(?!exp)` 匹配后面跟的不是 exp 的位置\n\t*\t`(?<!exp)` 匹配前面不是 exp 的位置\n\n*\t匹配优先级：\n\t* \t最先开始的匹配拥有最高优先级 —— **The match that begins earliest wins**\n\t*  \t贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符\n\t*  \t转化为懒惰匹配模式：要在限定符后面加上一个问号 `?`\n\n*\t需要转义的字符要注意\n\t* \t`\\/`: 避免误认为是 正则表达式的结束符\n\t*  \t`\\?`: 避免误认为是 非捕获匹配符或是限定符\n\t*  \t`\\.`: 避免误认为是 任意匹配元字符\n\n*\t练习:\n\t*\t匹配数字: `/^-?$/`\n","source":"_posts/正则表达式学习.md","raw":"---\ntitle: 正则表达式学习\ndate: 2016-04-08 15:35:56\ncategories: 已归档\ntags: \n\t- 工具 \n\t- 语法\ndescription: 这篇文章主要是在于记录正则表达式的入门学习过程，总结了其语法以及一些基本使用方法\n---\n\n## 测试工具\n*\tsublime 中的搜索功能: 打开正则开关(**Regular expression**)和高亮开关(**Highlight matches**)\n* \t网上测试工具:\n\t*  \t[开源中国在线工具](http://tool.oschina.net/regex/)\n\t*  \t[站长工具](http://tool.chinaz.com/regex/)\n\n## **JavaScript** 中的用法\n* \t`replace`方法: `stringObject.replace(regexp,replacement) `\n\t*  `replacement` 参数\n\t\t*  `$1、$2、...、$99`: 与 **regexp** 中的第 1 到第 99 个子表达式相匹配的文本\n\t\t*\t`$&`: 与 **regexp** 相匹配的子串。 \n\t\t*\t``$` ``: 位于匹配子串左侧的文本。 \n\t\t*\t`$'`: 位于匹配子串右侧的文本。 \n\t\t*\t`%`: 直接量符号。\n\t*\t例子\n\n\t\t```js\n\t\t// 替换两个名字的顺序\n\t\tname = \"Doe, John\";\n\t\tname.replace(/(\\w+)\\s*, \\s*(\\w+)/, \"$2 $1\");\n\t\t```\n\n### **RegExp** 对象\n*\t修饰符\n\t*\t`i`: 执行对大小写不敏感的匹配 => `/[a-z]/i` 匹配a-z，A-Z\n\t*\t`g`: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=> `/[a-z]/g`\n\t*\t`m`: 执行多行匹配\n\n## 普通语法\n*\t例子\n\t*\t`0\\d{2}-\\d{8}` 匹配 **010-88888888** 这类的电话\n\t*\t`^\\d{5,12}$` 填写的 QQ 号必须为 5 位到 12 位数字时\n\t* \t`\\ba\\w*\\b` 匹配以字母 a 开头的单词\n\t*  `\\(?0\\d{2}[) -]?\\d{8}` 匹配几种格式的电话：\n\t\t**(010)88886666**，或 **022-22334455**，或 **02912345678**\n\t*  `((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})` 匹配 IP 地址\n\t*  `\\b(\\w+)\\b\\s+\\1\\b` 可以用来匹配重复的单词，像 **go go**, 或者 **kitty kitty**\n\t*  `\\b(?<Word>\\w+)\\b\\s+\\k<Word>\\b` 也可以\n\t*\t**url 解析** 的例子: \n\n\t\t```js\n\t\tfunction parseUrl(url){\n\t\t\tvar urlPattern = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\t\t\tvar result = urlPattern.exec(url);\n\t\t\tvar type = ['url', 'scheme', 'slash', 'host', 'port', 'path', 'query', 'hash'];\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\n\t\tparseUrl(\"http://tool.oschina.net:80/regex?haha=true#fragment\");\n\t\t// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]\n\t\t```\n\t\t\n*  元字符\n\t*  \t`\\w` 匹配 字符、数字、下划线、汉字 等\n\t* \t`\\d` 匹配数字\n\t* \t`\\s` 匹配任意的空白符：空格，制表，换行，中文全角空格等\n\t*\t`.` 匹配除换行符(结束符)以外的任意字符\n\n* \t位置匹配：\n\t*\t`^`：\"字符串\"的开始\n\t* \t`$`：\"字符串\"的结束\n\t* \t`\\b`: 表示一个位置 => 其前一个和后一个字符不全是 `\\w`\n\n*  重复匹配：限定符\n\t*\t`*`\t 重复零次或更多次\n\t*\t`+`\t 重复一次或更多次\n\t*\t`?`\t 重复零次或一次\n\t*\t`{n}` 重复n次\n\t*\t`{n,}` 重复n次或更多次\n\t*\t`{n,m}` 重复n到m次\n\n*\t元素集：`[]` 里面表示一个范围\n\t* \t`[aeiou]` 匹配英文元音字母\n\t*  \t`[0-9]` 匹配数字,即\\d\n\t*  \t`[0-9a-zA-Z]` 匹配数字和字母\n\n*  \t分支条件：|\t把几种不同的规则分隔开(按顺序匹配)\n\t*  \t`0\\d{2}-\\d{8}|0\\d{3}-\\d{7}` 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(**010-12345678**)，一种是4位区号，7位本地号(**0376-2233445**)。\n\n*  \t分组：可以用小括号来指定子表达式(也叫做分组)\n\t* \t`(\\d{1,3}\\.){3}\\d{1,3}` 是一个简单的 IP 地址匹配表达式\n\n*  \t反义：\n\t*  \t`\\W` 匹配任意不是字母，数字，下划线，汉字的字符\n\t*\t`\\S` 匹配任意不是空白符的字符\n\t*\t`\\D` 匹配任意非数字的字符\n\t*\t`\\B` 匹配不是单词开头或结束的位置\n\t*\t`[^x]`\t匹配 **除了 x 以外** 的任意字符\n\t*\t`[^aeiou]` 匹配除了 aeiou 这几个字母以外的任意字符\n\n* \t后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: **从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2**\n\t* \t`\\1`: 代表分组1匹配的文本\n\t*  \t捕获\t\n\t\t*  \t`(exp)` 匹配 exp，并捕获文本到自动命名的组里\n\t\t*\t`(?<name>exp)` 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 `(?'name'exp)`\n\t\t*\t`(?:exp)` 匹配 exp，不捕获匹配的文本，也不给此分组分配组号\n\n*\t零宽断言（**匹配位置！**）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言\n\t* \t`(?=exp)` 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置\n\t\t*\t`\\b\\w+(?=ing\\b)` 匹配以 ing 结尾的单词的前面部分(**除了 ing 以外的部分**)\n\t*\t`(?<=exp)` 零宽度正回顾后发断言，匹配 exp 后面的位置\n\t*\t`(?!exp)` 匹配后面跟的不是 exp 的位置\n\t*\t`(?<!exp)` 匹配前面不是 exp 的位置\n\n*\t匹配优先级：\n\t* \t最先开始的匹配拥有最高优先级 —— **The match that begins earliest wins**\n\t*  \t贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符\n\t*  \t转化为懒惰匹配模式：要在限定符后面加上一个问号 `?`\n\n*\t需要转义的字符要注意\n\t* \t`\\/`: 避免误认为是 正则表达式的结束符\n\t*  \t`\\?`: 避免误认为是 非捕获匹配符或是限定符\n\t*  \t`\\.`: 避免误认为是 任意匹配元字符\n\n*\t练习:\n\t*\t匹配数字: `/^-?$/`\n","slug":"正则表达式学习","published":1,"updated":"2016-12-16T09:28:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeyv0006m21i3ye8vzin","content":"<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><ul>\n<li>sublime 中的搜索功能: 打开正则开关(<strong>Regular expression</strong>)和高亮开关(<strong>Highlight matches</strong>)</li>\n<li>网上测试工具:<ul>\n<li><a href=\"http://tool.oschina.net/regex/\" target=\"_blank\" rel=\"noopener\">开源中国在线工具</a></li>\n<li><a href=\"http://tool.chinaz.com/regex/\" target=\"_blank\" rel=\"noopener\">站长工具</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JavaScript-中的用法\"><a href=\"#JavaScript-中的用法\" class=\"headerlink\" title=\"JavaScript 中的用法\"></a><strong>JavaScript</strong> 中的用法</h2><ul>\n<li><p><code>replace</code>方法: <code>stringObject.replace(regexp,replacement)</code></p>\n<ul>\n<li><code>replacement</code> 参数<ul>\n<li><code>$1、$2、...、$99</code>: 与 <strong>regexp</strong> 中的第 1 到第 99 个子表达式相匹配的文本</li>\n<li><code>$&amp;</code>: 与 <strong>regexp</strong> 相匹配的子串。 </li>\n<li><code>$`</code>: 位于匹配子串左侧的文本。 </li>\n<li><code>$&#39;</code>: 位于匹配子串右侧的文本。 </li>\n<li><code>%</code>: 直接量符号。</li>\n</ul>\n</li>\n<li><p>例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 替换两个名字的顺序</span></span><br><span class=\"line\">name = <span class=\"string\">\"Doe, John\"</span>;</span><br><span class=\"line\">name.replace(<span class=\"regexp\">/(\\w+)\\s*, \\s*(\\w+)/</span>, <span class=\"string\">\"$2 $1\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"RegExp-对象\"><a href=\"#RegExp-对象\" class=\"headerlink\" title=\"RegExp 对象\"></a><strong>RegExp</strong> 对象</h3><ul>\n<li>修饰符<ul>\n<li><code>i</code>: 执行对大小写不敏感的匹配 =&gt; <code>/[a-z]/i</code> 匹配a-z，A-Z</li>\n<li><code>g</code>: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=&gt; <code>/[a-z]/g</code></li>\n<li><code>m</code>: 执行多行匹配</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"普通语法\"><a href=\"#普通语法\" class=\"headerlink\" title=\"普通语法\"></a>普通语法</h2><ul>\n<li><p>例子</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}</code> 匹配 <strong>010-88888888</strong> 这类的电话</li>\n<li><code>^\\d{5,12}$</code> 填写的 QQ 号必须为 5 位到 12 位数字时</li>\n<li><code>\\ba\\w*\\b</code> 匹配以字母 a 开头的单词</li>\n<li><code>\\(?0\\d{2}[) -]?\\d{8}</code> 匹配几种格式的电话：<br><strong>(010)88886666</strong>，或 <strong>022-22334455</strong>，或 <strong>02912345678</strong></li>\n<li><code>((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})</code> 匹配 IP 地址</li>\n<li><code>\\b(\\w+)\\b\\s+\\1\\b</code> 可以用来匹配重复的单词，像 <strong>go go</strong>, 或者 <strong>kitty kitty</strong></li>\n<li><code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> 也可以</li>\n<li><p><strong>url 解析</strong> 的例子: </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseUrl</span>(<span class=\"params\">url</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> urlPattern = <span class=\"regexp\">/^(?:([A-Za-z]+):)?(\\/&#123;0,3&#125;)([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> result = urlPattern.exec(url);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> type = [<span class=\"string\">'url'</span>, <span class=\"string\">'scheme'</span>, <span class=\"string\">'slash'</span>, <span class=\"string\">'host'</span>, <span class=\"string\">'port'</span>, <span class=\"string\">'path'</span>, <span class=\"string\">'query'</span>, <span class=\"string\">'hash'</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">parseUrl(<span class=\"string\">\"http://tool.oschina.net:80/regex?haha=true#fragment\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元字符</p>\n<ul>\n<li><code>\\w</code> 匹配 字符、数字、下划线、汉字 等</li>\n<li><code>\\d</code> 匹配数字</li>\n<li><code>\\s</code> 匹配任意的空白符：空格，制表，换行，中文全角空格等</li>\n<li><code>.</code> 匹配除换行符(结束符)以外的任意字符</li>\n</ul>\n</li>\n<li><p>位置匹配：</p>\n<ul>\n<li><code>^</code>：”字符串”的开始</li>\n<li><code>$</code>：”字符串”的结束</li>\n<li><code>\\b</code>: 表示一个位置 =&gt; 其前一个和后一个字符不全是 <code>\\w</code></li>\n</ul>\n</li>\n<li><p>重复匹配：限定符</p>\n<ul>\n<li><code>*</code>     重复零次或更多次</li>\n<li><code>+</code>     重复一次或更多次</li>\n<li><code>?</code>     重复零次或一次</li>\n<li><code>{n}</code> 重复n次</li>\n<li><code>{n,}</code> 重复n次或更多次</li>\n<li><code>{n,m}</code> 重复n到m次</li>\n</ul>\n</li>\n<li><p>元素集：<code>[]</code> 里面表示一个范围</p>\n<ul>\n<li><code>[aeiou]</code> 匹配英文元音字母</li>\n<li><code>[0-9]</code> 匹配数字,即\\d</li>\n<li><code>[0-9a-zA-Z]</code> 匹配数字和字母</li>\n</ul>\n</li>\n<li><p>分支条件：|    把几种不同的规则分隔开(按顺序匹配)</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}|0\\d{3}-\\d{7}</code> 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(<strong>010-12345678</strong>)，一种是4位区号，7位本地号(<strong>0376-2233445</strong>)。</li>\n</ul>\n</li>\n<li><p>分组：可以用小括号来指定子表达式(也叫做分组)</p>\n<ul>\n<li><code>(\\d{1,3}\\.){3}\\d{1,3}</code> 是一个简单的 IP 地址匹配表达式</li>\n</ul>\n</li>\n<li><p>反义：</p>\n<ul>\n<li><code>\\W</code> 匹配任意不是字母，数字，下划线，汉字的字符</li>\n<li><code>\\S</code> 匹配任意不是空白符的字符</li>\n<li><code>\\D</code> 匹配任意非数字的字符</li>\n<li><code>\\B</code> 匹配不是单词开头或结束的位置</li>\n<li><code>[^x]</code>    匹配 <strong>除了 x 以外</strong> 的任意字符</li>\n<li><code>[^aeiou]</code> 匹配除了 aeiou 这几个字母以外的任意字符</li>\n</ul>\n</li>\n<li><p>后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: <strong>从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2</strong></p>\n<ul>\n<li><code>\\1</code>: 代表分组1匹配的文本</li>\n<li>捕获    <ul>\n<li><code>(exp)</code> 匹配 exp，并捕获文本到自动命名的组里</li>\n<li><code>(?&lt;name&gt;exp)</code> 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 <code>(?&#39;name&#39;exp)</code></li>\n<li><code>(?:exp)</code> 匹配 exp，不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>零宽断言（<strong>匹配位置！</strong>）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言</p>\n<ul>\n<li><code>(?=exp)</code> 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置<ul>\n<li><code>\\b\\w+(?=ing\\b)</code> 匹配以 ing 结尾的单词的前面部分(<strong>除了 ing 以外的部分</strong>)</li>\n</ul>\n</li>\n<li><code>(?&lt;=exp)</code> 零宽度正回顾后发断言，匹配 exp 后面的位置</li>\n<li><code>(?!exp)</code> 匹配后面跟的不是 exp 的位置</li>\n<li><code>(?&lt;!exp)</code> 匹配前面不是 exp 的位置</li>\n</ul>\n</li>\n<li><p>匹配优先级：</p>\n<ul>\n<li>最先开始的匹配拥有最高优先级 —— <strong>The match that begins earliest wins</strong></li>\n<li>贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符</li>\n<li>转化为懒惰匹配模式：要在限定符后面加上一个问号 <code>?</code></li>\n</ul>\n</li>\n<li><p>需要转义的字符要注意</p>\n<ul>\n<li><code>\\/</code>: 避免误认为是 正则表达式的结束符</li>\n<li><code>\\?</code>: 避免误认为是 非捕获匹配符或是限定符</li>\n<li><code>\\.</code>: 避免误认为是 任意匹配元字符</li>\n</ul>\n</li>\n<li><p>练习:</p>\n<ul>\n<li>匹配数字: <code>/^-?$/</code></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"测试工具\"><a href=\"#测试工具\" class=\"headerlink\" title=\"测试工具\"></a>测试工具</h2><ul>\n<li>sublime 中的搜索功能: 打开正则开关(<strong>Regular expression</strong>)和高亮开关(<strong>Highlight matches</strong>)</li>\n<li>网上测试工具:<ul>\n<li><a href=\"http://tool.oschina.net/regex/\" target=\"_blank\" rel=\"noopener\">开源中国在线工具</a></li>\n<li><a href=\"http://tool.chinaz.com/regex/\" target=\"_blank\" rel=\"noopener\">站长工具</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"JavaScript-中的用法\"><a href=\"#JavaScript-中的用法\" class=\"headerlink\" title=\"JavaScript 中的用法\"></a><strong>JavaScript</strong> 中的用法</h2><ul>\n<li><p><code>replace</code>方法: <code>stringObject.replace(regexp,replacement)</code></p>\n<ul>\n<li><code>replacement</code> 参数<ul>\n<li><code>$1、$2、...、$99</code>: 与 <strong>regexp</strong> 中的第 1 到第 99 个子表达式相匹配的文本</li>\n<li><code>$&amp;</code>: 与 <strong>regexp</strong> 相匹配的子串。 </li>\n<li><code>$`</code>: 位于匹配子串左侧的文本。 </li>\n<li><code>$&#39;</code>: 位于匹配子串右侧的文本。 </li>\n<li><code>%</code>: 直接量符号。</li>\n</ul>\n</li>\n<li><p>例子</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 替换两个名字的顺序</span></span><br><span class=\"line\">name = <span class=\"string\">\"Doe, John\"</span>;</span><br><span class=\"line\">name.replace(<span class=\"regexp\">/(\\w+)\\s*, \\s*(\\w+)/</span>, <span class=\"string\">\"$2 $1\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"RegExp-对象\"><a href=\"#RegExp-对象\" class=\"headerlink\" title=\"RegExp 对象\"></a><strong>RegExp</strong> 对象</h3><ul>\n<li>修饰符<ul>\n<li><code>i</code>: 执行对大小写不敏感的匹配 =&gt; <code>/[a-z]/i</code> 匹配a-z，A-Z</li>\n<li><code>g</code>: 执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）=&gt; <code>/[a-z]/g</code></li>\n<li><code>m</code>: 执行多行匹配</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"普通语法\"><a href=\"#普通语法\" class=\"headerlink\" title=\"普通语法\"></a>普通语法</h2><ul>\n<li><p>例子</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}</code> 匹配 <strong>010-88888888</strong> 这类的电话</li>\n<li><code>^\\d{5,12}$</code> 填写的 QQ 号必须为 5 位到 12 位数字时</li>\n<li><code>\\ba\\w*\\b</code> 匹配以字母 a 开头的单词</li>\n<li><code>\\(?0\\d{2}[) -]?\\d{8}</code> 匹配几种格式的电话：<br><strong>(010)88886666</strong>，或 <strong>022-22334455</strong>，或 <strong>02912345678</strong></li>\n<li><code>((2([0-4]\\d|5[0-5])|1?\\d{1,2})\\.){3}(2([0-4]\\d|5[0-5])|1?\\d{1,2})</code> 匹配 IP 地址</li>\n<li><code>\\b(\\w+)\\b\\s+\\1\\b</code> 可以用来匹配重复的单词，像 <strong>go go</strong>, 或者 <strong>kitty kitty</strong></li>\n<li><code>\\b(?&lt;Word&gt;\\w+)\\b\\s+\\k&lt;Word&gt;\\b</code> 也可以</li>\n<li><p><strong>url 解析</strong> 的例子: </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parseUrl</span>(<span class=\"params\">url</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> urlPattern = <span class=\"regexp\">/^(?:([A-Za-z]+):)?(\\/&#123;0,3&#125;)([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> result = urlPattern.exec(url);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> type = [<span class=\"string\">'url'</span>, <span class=\"string\">'scheme'</span>, <span class=\"string\">'slash'</span>, <span class=\"string\">'host'</span>, <span class=\"string\">'port'</span>, <span class=\"string\">'path'</span>, <span class=\"string\">'query'</span>, <span class=\"string\">'hash'</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">parseUrl(<span class=\"string\">\"http://tool.oschina.net:80/regex?haha=true#fragment\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// [\"http://tool.oschina.net:80/regex?haha=true#fragment\", \"http\", \"//\", \"tool.oschina.net\", \"80\", \"regex\", \"haha=true\", \"fragment\"]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>元字符</p>\n<ul>\n<li><code>\\w</code> 匹配 字符、数字、下划线、汉字 等</li>\n<li><code>\\d</code> 匹配数字</li>\n<li><code>\\s</code> 匹配任意的空白符：空格，制表，换行，中文全角空格等</li>\n<li><code>.</code> 匹配除换行符(结束符)以外的任意字符</li>\n</ul>\n</li>\n<li><p>位置匹配：</p>\n<ul>\n<li><code>^</code>：”字符串”的开始</li>\n<li><code>$</code>：”字符串”的结束</li>\n<li><code>\\b</code>: 表示一个位置 =&gt; 其前一个和后一个字符不全是 <code>\\w</code></li>\n</ul>\n</li>\n<li><p>重复匹配：限定符</p>\n<ul>\n<li><code>*</code>     重复零次或更多次</li>\n<li><code>+</code>     重复一次或更多次</li>\n<li><code>?</code>     重复零次或一次</li>\n<li><code>{n}</code> 重复n次</li>\n<li><code>{n,}</code> 重复n次或更多次</li>\n<li><code>{n,m}</code> 重复n到m次</li>\n</ul>\n</li>\n<li><p>元素集：<code>[]</code> 里面表示一个范围</p>\n<ul>\n<li><code>[aeiou]</code> 匹配英文元音字母</li>\n<li><code>[0-9]</code> 匹配数字,即\\d</li>\n<li><code>[0-9a-zA-Z]</code> 匹配数字和字母</li>\n</ul>\n</li>\n<li><p>分支条件：|    把几种不同的规则分隔开(按顺序匹配)</p>\n<ul>\n<li><code>0\\d{2}-\\d{8}|0\\d{3}-\\d{7}</code> 这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8 位本地号(<strong>010-12345678</strong>)，一种是4位区号，7位本地号(<strong>0376-2233445</strong>)。</li>\n</ul>\n</li>\n<li><p>分组：可以用小括号来指定子表达式(也叫做分组)</p>\n<ul>\n<li><code>(\\d{1,3}\\.){3}\\d{1,3}</code> 是一个简单的 IP 地址匹配表达式</li>\n</ul>\n</li>\n<li><p>反义：</p>\n<ul>\n<li><code>\\W</code> 匹配任意不是字母，数字，下划线，汉字的字符</li>\n<li><code>\\S</code> 匹配任意不是空白符的字符</li>\n<li><code>\\D</code> 匹配任意非数字的字符</li>\n<li><code>\\B</code> 匹配不是单词开头或结束的位置</li>\n<li><code>[^x]</code>    匹配 <strong>除了 x 以外</strong> 的任意字符</li>\n<li><code>[^aeiou]</code> 匹配除了 aeiou 这几个字母以外的任意字符</li>\n</ul>\n</li>\n<li><p>后向引用（分组）：使用小括号指定一个子表达式后，匹配这个子表达式的文本(也就是此分组捕获的内容)可以在表达式或其它程序中作进一步的处理。默认情况下，每个分组会自动拥有一个组号，规则是: <strong>从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2</strong></p>\n<ul>\n<li><code>\\1</code>: 代表分组1匹配的文本</li>\n<li>捕获    <ul>\n<li><code>(exp)</code> 匹配 exp，并捕获文本到自动命名的组里</li>\n<li><code>(?&lt;name&gt;exp)</code> 匹配 exp，并捕获文本到名称为 name 的组里，也可以写成 <code>(?&#39;name&#39;exp)</code></li>\n<li><code>(?:exp)</code> 匹配 exp，不捕获匹配的文本，也不给此分组分配组号</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>零宽断言（<strong>匹配位置！</strong>）：用于查找在某些内容(但并不包括这些内容)之前或之后的东西，也就是说它们像\\b,^,$那样用于指定一个位置，这个位置应该满足一定的条件(即断言)，因此它们也被称为零宽断言</p>\n<ul>\n<li><code>(?=exp)</code> 零宽度正预测先行断言，断言自身出现的位置的后面能匹配表达式 exp，也就是匹配 exp 前面的位置<ul>\n<li><code>\\b\\w+(?=ing\\b)</code> 匹配以 ing 结尾的单词的前面部分(<strong>除了 ing 以外的部分</strong>)</li>\n</ul>\n</li>\n<li><code>(?&lt;=exp)</code> 零宽度正回顾后发断言，匹配 exp 后面的位置</li>\n<li><code>(?!exp)</code> 匹配后面跟的不是 exp 的位置</li>\n<li><code>(?&lt;!exp)</code> 匹配前面不是 exp 的位置</li>\n</ul>\n</li>\n<li><p>匹配优先级：</p>\n<ul>\n<li>最先开始的匹配拥有最高优先级 —— <strong>The match that begins earliest wins</strong></li>\n<li>贪婪：当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能多的字符</li>\n<li>转化为懒惰匹配模式：要在限定符后面加上一个问号 <code>?</code></li>\n</ul>\n</li>\n<li><p>需要转义的字符要注意</p>\n<ul>\n<li><code>\\/</code>: 避免误认为是 正则表达式的结束符</li>\n<li><code>\\?</code>: 避免误认为是 非捕获匹配符或是限定符</li>\n<li><code>\\.</code>: 避免误认为是 任意匹配元字符</li>\n</ul>\n</li>\n<li><p>练习:</p>\n<ul>\n<li>匹配数字: <code>/^-?$/</code></li>\n</ul>\n</li>\n</ul>\n"},{"title":"浏览器的 Cache 机制研究","date":"2017-02-14T06:35:28.000Z","_content":"\n## 测试过程\n*   打开网页可以发现图都是 `from memory cache` 方式获取的，另外还有一些 `from disk cache` 的则是浏览器插件的 js 和 css 文件\n\n![](media/14870541119124/14870545904964.jpg)\n\n*   按照网上说的([StackOverflow: Using <meta> tags to turn off caching in all browsers]((http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers)))，添加了清除缓存语句，然而图片还是 `from memory cache`，说明图片的缓存并不受 meta 控制\n\n    ```html\n  <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n  <meta http-equiv=\"cache-control\" content=\"no-cache\" />\n  <meta http-equiv=\"expires\" content=\"0\" />\n  <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n  <meta http-equiv=\"pragma\" content=\"no-cache\" />\n    ```\n    \n    ```html\n    <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n    <meta http-equiv=\"Pragma\" content=\"no-cache\" />\n    <meta http-equiv=\"Expires\" content=\"0\" />\n    ```\n\n*   在 Chrome 浏览器下，可以通过 `chrome://cache` 地址来查看当前 chrome 缓存的文件\n\n![](media/14870541119124/14870587533341.jpg)\n\n*   发现工程中的文件有时候是 `from disk cache`，有时候是 `from memory cache`\n\n![](media/14870541119124/14870618446585.jpg)\n\n*   加入了以下语句以后，清除缓存加刷新页面，ubt 文件加载了一次以后还是会显示 `from disk cache`，说明语句并没有起作用\n\n![](media/14870541119124/14870623717107.jpg)\n\n![](media/14870541119124/14870623524159.jpg)\n\n*   **memory cache** vs **disk cache**: 按照 Reddit 上的回答[What is the difference between disk caching and memory caching?](https://www.reddit.com/r/explainlikeimfive/comments/3660ig/eli5what_is_the_difference_between_disk_caching/)，浏览器缓存一般存于 **disk cache**，而系统缓存一般存于 **memory cache**\n\n![](media/14870541119124/14870635219273.jpg)\n\n\n## 相关链接\n*   [StackOverflow: How to control web page caching, across all browsers](http://stackoverflow.com/questions/49547/how-to-control-web-page-caching-across-all-browsers): 赞同最多的答案\n*   [StackOverflow: Using <meta> tags to turn off caching in all browsers]((http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers))\n\n","source":"_posts/浏览器的 Cache 机制研究.md","raw":"---\ntitle: 浏览器的 Cache 机制研究\ndate: 2017-02-14 14:35:28\ncategories: 未完成\ntags: \n---\n\n## 测试过程\n*   打开网页可以发现图都是 `from memory cache` 方式获取的，另外还有一些 `from disk cache` 的则是浏览器插件的 js 和 css 文件\n\n![](media/14870541119124/14870545904964.jpg)\n\n*   按照网上说的([StackOverflow: Using <meta> tags to turn off caching in all browsers]((http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers)))，添加了清除缓存语句，然而图片还是 `from memory cache`，说明图片的缓存并不受 meta 控制\n\n    ```html\n  <meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n  <meta http-equiv=\"cache-control\" content=\"no-cache\" />\n  <meta http-equiv=\"expires\" content=\"0\" />\n  <meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n  <meta http-equiv=\"pragma\" content=\"no-cache\" />\n    ```\n    \n    ```html\n    <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\n    <meta http-equiv=\"Pragma\" content=\"no-cache\" />\n    <meta http-equiv=\"Expires\" content=\"0\" />\n    ```\n\n*   在 Chrome 浏览器下，可以通过 `chrome://cache` 地址来查看当前 chrome 缓存的文件\n\n![](media/14870541119124/14870587533341.jpg)\n\n*   发现工程中的文件有时候是 `from disk cache`，有时候是 `from memory cache`\n\n![](media/14870541119124/14870618446585.jpg)\n\n*   加入了以下语句以后，清除缓存加刷新页面，ubt 文件加载了一次以后还是会显示 `from disk cache`，说明语句并没有起作用\n\n![](media/14870541119124/14870623717107.jpg)\n\n![](media/14870541119124/14870623524159.jpg)\n\n*   **memory cache** vs **disk cache**: 按照 Reddit 上的回答[What is the difference between disk caching and memory caching?](https://www.reddit.com/r/explainlikeimfive/comments/3660ig/eli5what_is_the_difference_between_disk_caching/)，浏览器缓存一般存于 **disk cache**，而系统缓存一般存于 **memory cache**\n\n![](media/14870541119124/14870635219273.jpg)\n\n\n## 相关链接\n*   [StackOverflow: How to control web page caching, across all browsers](http://stackoverflow.com/questions/49547/how-to-control-web-page-caching-across-all-browsers): 赞同最多的答案\n*   [StackOverflow: Using <meta> tags to turn off caching in all browsers]((http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers))\n\n","slug":"浏览器的 Cache 机制研究","published":1,"updated":"2017-04-08T10:28:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbeyy0009m21i760smgr4","content":"<h2 id=\"测试过程\"><a href=\"#测试过程\" class=\"headerlink\" title=\"测试过程\"></a>测试过程</h2><ul>\n<li>打开网页可以发现图都是 <code>from memory cache</code> 方式获取的，另外还有一些 <code>from disk cache</code> 的则是浏览器插件的 js 和 css 文件</li>\n</ul>\n<p><img src=\"media/14870541119124/14870545904964.jpg\" alt></p>\n<ul>\n<li><p>按照网上说的(<a href=\"(http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers\">StackOverflow: Using <meta> tags to turn off caching in all browsers</a>))，添加了清除缓存语句，然而图片还是 <code>from memory cache</code>，说明图片的缓存并不受 meta 控制</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"cache-control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"max-age=0\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"cache-control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Tue, 01 Jan 1980 1:00:00 GMT\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li>在 Chrome 浏览器下，可以通过 <code>chrome://cache</code> 地址来查看当前 chrome 缓存的文件</li>\n</ul>\n<p><img src=\"media/14870541119124/14870587533341.jpg\" alt></p>\n<ul>\n<li>发现工程中的文件有时候是 <code>from disk cache</code>，有时候是 <code>from memory cache</code></li>\n</ul>\n<p><img src=\"media/14870541119124/14870618446585.jpg\" alt></p>\n<ul>\n<li>加入了以下语句以后，清除缓存加刷新页面，ubt 文件加载了一次以后还是会显示 <code>from disk cache</code>，说明语句并没有起作用</li>\n</ul>\n<p><img src=\"media/14870541119124/14870623717107.jpg\" alt></p>\n<p><img src=\"media/14870541119124/14870623524159.jpg\" alt></p>\n<ul>\n<li><strong>memory cache</strong> vs <strong>disk cache</strong>: 按照 Reddit 上的回答<a href=\"https://www.reddit.com/r/explainlikeimfive/comments/3660ig/eli5what_is_the_difference_between_disk_caching/\" target=\"_blank\" rel=\"noopener\">What is the difference between disk caching and memory caching?</a>，浏览器缓存一般存于 <strong>disk cache</strong>，而系统缓存一般存于 <strong>memory cache</strong></li>\n</ul>\n<p><img src=\"media/14870541119124/14870635219273.jpg\" alt></p>\n<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://stackoverflow.com/questions/49547/how-to-control-web-page-caching-across-all-browsers\" target=\"_blank\" rel=\"noopener\">StackOverflow: How to control web page caching, across all browsers</a>: 赞同最多的答案</li>\n<li><a href=\"(http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers\">StackOverflow: Using <meta> tags to turn off caching in all browsers</a>)</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"测试过程\"><a href=\"#测试过程\" class=\"headerlink\" title=\"测试过程\"></a>测试过程</h2><ul>\n<li>打开网页可以发现图都是 <code>from memory cache</code> 方式获取的，另外还有一些 <code>from disk cache</code> 的则是浏览器插件的 js 和 css 文件</li>\n</ul>\n<p><img src=\"media/14870541119124/14870545904964.jpg\" alt></p>\n<ul>\n<li><p>按照网上说的(<a href=\"(http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers\">StackOverflow: Using <meta> tags to turn off caching in all browsers</a>))，添加了清除缓存语句，然而图片还是 <code>from memory cache</code>，说明图片的缓存并不受 meta 控制</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"cache-control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"max-age=0\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"cache-control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Tue, 01 Jan 1980 1:00:00 GMT\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<pre><code><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache, no-store, must-revalidate\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Pragma\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-cache\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Expires\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n</code></pre><ul>\n<li>在 Chrome 浏览器下，可以通过 <code>chrome://cache</code> 地址来查看当前 chrome 缓存的文件</li>\n</ul>\n<p><img src=\"media/14870541119124/14870587533341.jpg\" alt></p>\n<ul>\n<li>发现工程中的文件有时候是 <code>from disk cache</code>，有时候是 <code>from memory cache</code></li>\n</ul>\n<p><img src=\"media/14870541119124/14870618446585.jpg\" alt></p>\n<ul>\n<li>加入了以下语句以后，清除缓存加刷新页面，ubt 文件加载了一次以后还是会显示 <code>from disk cache</code>，说明语句并没有起作用</li>\n</ul>\n<p><img src=\"media/14870541119124/14870623717107.jpg\" alt></p>\n<p><img src=\"media/14870541119124/14870623524159.jpg\" alt></p>\n<ul>\n<li><strong>memory cache</strong> vs <strong>disk cache</strong>: 按照 Reddit 上的回答<a href=\"https://www.reddit.com/r/explainlikeimfive/comments/3660ig/eli5what_is_the_difference_between_disk_caching/\" target=\"_blank\" rel=\"noopener\">What is the difference between disk caching and memory caching?</a>，浏览器缓存一般存于 <strong>disk cache</strong>，而系统缓存一般存于 <strong>memory cache</strong></li>\n</ul>\n<p><img src=\"media/14870541119124/14870635219273.jpg\" alt></p>\n<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><ul>\n<li><a href=\"http://stackoverflow.com/questions/49547/how-to-control-web-page-caching-across-all-browsers\" target=\"_blank\" rel=\"noopener\">StackOverflow: How to control web page caching, across all browsers</a>: 赞同最多的答案</li>\n<li><a href=\"(http://stackoverflow.com/questions/1341089/using-meta-tags-to-turn-off-caching-in-all-browsers\">StackOverflow: Using <meta> tags to turn off caching in all browsers</a>)</li>\n</ul>\n"},{"title":"VSCode 基本操作","date":"2019-02-27T07:17:17.000Z","_content":"\n# VS Code\n## 基本操作\n*   命令面板：cmd + shift + p\n    *   Code Cli 的安装\n\n*   光标移动\n    *\t  单词：option + 左右\n    *\t  行：cmd + 左右\n    *   **代码块**：cmd + shift + \\ => **很关键**\n    *   **文件**：cmd + 上下\n\n*   文本选择 + `shift`\n    *   单词：option + 左右 + shift\n    *   行：cmd + 左右 + shift\n\n*\t操作\n    *   删除代码\n        *   删除行\n            *   cmd + fn + delete 右侧所有代码\n            *   cmd + delete 左侧所有代码\n        *   删除单词\n            *   option + fn + delete 右侧所有代码\n            *   option + delete 左侧所有代码\n        *   删除当前行 cmd + shift + k\n        *   剪切当前行 cmd + x\n    *   移动一行代码：option + 上下\n\n*   `keyboard` 查看键位绑定：cmd + k cmd + s\n\n## 进阶操作\n*   代码格式化：format\n    *   option + shift + f\n\n*   排序：sort line ascending => cmd + shift + p\n\n*   多光标操作 => **？** `https://time.geekbang.org/column/article/40261`\n\t*\tcmd + d => 选中左边第一个单词\n\t*\t选中多行后，option + shift + i => 多行行尾添加光标\n\n#### 文件跳转\n\t*\tcmd + p => 最近的文件列表(或者查找文件)\n\t\t*\tcmd + enter => 新窗口里打开 => **可以对比不同**\n\t\t*     打开以后发现它是可切换状态，因为你没有编辑，你可以手动 cmd + s 去固定这个标签页\n\t\t![](media/15481297883580/15482156645261.jpg)\n\n\t*\tctrl + tab 切换\n\t*\tcmd + option + 左右 => 浏览器里可以通用\n\n*   行跳转：ctrl + g => 在查看 git 冲突的时候 => vim 模式 `:number`\n\n#### 符号跳转\n*   cmd + shift + o：跳转类(类似于大纲，在组件的功能了解中很方便)\n*   cmd + t：跨文件查找调用方法的定义(比如查找接口调用的时候)\n\n#### 函数跳转\n*   cmd + f12：跳转方法实现\n*   f12: 跳转方法定义\n*   shift + f12：查看方法调用\n    *   space 打开\n\n*\tf2：快速修改方法/函数名(相关的调用/定义)\n\n*\tcmd + option + [/] => 代码折叠，看代码逻辑的时候特别好用，和 cmd + shift + 左右 都特别适合看代码\n*\tcmd + k -> cmd + 0 => 折叠文件\n\t*\tcmd + k -> cmd + j\n\n### 自动补全、快速修复、重构 => https://time.geekbang.org/column/article/40847\n\n### 代码折叠、小地图、面包屑\n#### 面包屑 => 可能有人更喜欢这个而不是文件资源管理器\n*   打开面包屑 cmd + shift + .\n*   option + 左/右 => 切换层级\n\n### 极速搜索\n*   cmd + f：自动选中当前光标所在的单词\n*   cmd + g：搜索，但是光标仍在编辑区\n\n大小写敏感，全单词匹配、正则匹配\n\n替换：cmd + option + f\n\n### 全局查找\n*\tcmd + shift + f 查找\n*\tcmd + 下 切换到相应搜索结果\n*\to 打开搜索列表\n\n\n### 查找/定位\n*\tcmd + f \n\t*\tenter => 下一个\n\t*\tshift + enter => 上一个\n\n### 切换工作区\n*\tcmd + shift + e => 文件资源管理器\n*\tcmd + shift + x => 插件管理\n*\tctrl + shift + g => 源代码管理\n\n右击工作区即可\n![](media/15481297883580/15481522955441.jpg)\n\n\n### 切换窗口\n支持多工作区模式，但是更支持多窗口，一个工作区对应一个窗口\n*\tctrl + w => 切换多窗口\n\n#### markdown 预览\ncmd + k 、v\n\n#### 查找键位绑定 keyboard\n*   录制按钮\n\n![](media/15481297883580/15482407032089.jpg)\n\n\n### 编辑器配置\n*   垂直标尺 => \"editor.rulers\": [120] => 120字符\n*   缩进参考线 => \"editor.renderIndentGuides\": true\n*   lineNumber\n*   空格处填充符号 => \"editor.renderWhitespace\": \"boundary\"\n*   左侧行号也添加了背景号 =>  \"editor.renderLineHighlight\": \"all\"\n\n#### 其它配置\n*   tabSize、lineHeight、autoSave/autoSaveDelay\n*  `terminal.integrated.shell.osx`: zsh\n*   \"files.exclude\":  { \"**/node_modules\": true } => 加快编辑器运行速度\n\n#### 悬浮注解\n![](media/15481297883580/15482581731361.jpg)\n\n### 编辑器管理\n#### 窗口管理\n*\tcmd + \\ => 打开新窗口\n    *   cmd + 1/2/3 => 切换窗口\n    *   cmd + option + 0(数字) => 切换布局方向(垂直/水平)\n\n#### Tab 管理\n*   ctrl + tab\n*   option + cmd + 左/右\n*   cmd + p\n\n### 视图切换\n*\tcmd + B => 左侧边栏的展示/隐藏\n*\tzen => 只留下代码\n*\tcmd + j => 查看 code spell check 的报错\n![](media/15481297883580/15482397619087.jpg)\n\n### 插件篇\n#### BASIC \n*   code spell checker：检查单词拼写错误\n*   Bracket Pair Colorizer：彩色的括号\n*   Document This：为 function、class 等自动生成文档\n*   Gitlens：Git 集成工具\n    *   当前行展示 git blame 信息\n*   Material Icon Theme/vscode-icons：文件夹icon的多样性\n*   TODO Highlight：List TODO list\n![](media/15481297883580/15482559630550.jpg)\n\n*   Vim：\n*   vscode-fileheader：ctrl + option + i 生成新文件的文档 => 孙悟空到此一游\n*   Path Intellisense：补全文件路径名\n*   Faker：生产 fake name => 就像名字一样废...\n\n#### ADDITIONS\n*\tpigment：可以直接看到当前的色彩\n*\tsettings sync：generate key => 保存到 gists 上\n*\tproject manager => 保存以后很方便可以切换(打开的/未打开的)工程\n*\tlive share => 登录就可以修改别人的工程文件，而不需要拉代码\n\n*\t.vscode 中添加 recommendations => vscode 会提示安装\n\n![](media/15481297883580/15482563560237.jpg)\n\n\n## mac note 的使用\n*\tctrl + shift + tab 或者 ctrl + tab\n\n## 浏览器\n*   f12 调出来控制台\n*   debugger 控制台\n\t*\tf8、f10、f11\n\t*\tesc：source debugger 的时候可以调出 console 控制台\n*\tcmd + shift + n 打开隐身窗口\n*\tshift + w => 在新的窗口打开浏览页\n\n\n### 插件\n*\tvimium\n\t*\tj、k 上下挪动页面\n\t*\tyy：复制当前 url\n\t*\tp/P：当前剪贴板的 url 复制到地址栏\n\t*\to/O：打开bookMark、收藏栏、历史记录中的页面\n\t*\tT：查找当前打开的 tab\n\t*\tr：reload page\n\t*\tshift + ? 查看快捷键\n\t*\t查找模式\n\t\t*\t/xxx：查找 xxx\n\t\t*\tn/N：上/下一个\n\n### 其它插件\n*   有道划词/网易有道词典鼠标取词：查询方便，划词翻译快速\n*   二维码生成\n*   great suspender\n*   各种 devtools：redux、MobX、vue、React\n*   Github 相关的文件管理侧边栏\n\n## iTerm 2 使用\n*\t选择文本: `cmd + f`搜索 ＋ `tab`选中文本，会自动添加到剪切板，使用`cmd + v`即可使用\n* \t临时调用iterm: 通过hotkey的设置 => `shift + space` => **可以尝试使用cal看今天是周几，不过使用台历也没有问题**\n ![](media/15481297883580/15482137824196.jpg)\n\n\n*  \t命令行标记: `cmd + shift + m`可以为某一行(或者说某一屏幕添加标记),之后可以使用`cmd + shift + j`跳回这里\n    *   比如一些安装步骤或者看到日志需要对比的时候可以打标记\n*  \t剪贴板历史: `cmd + shift + h`可以查看(iterm)剪贴板历史纪录\n*  \t查看操作历史(快照): `cmd + option + B`可以查看之前一段时间内的操作的快照(阴险)\n\n![](media/15481297883580/15482140578138.jpg)\n\n*   option + b、option + f\n*   iTerm2\n\t*  \t1. 分窗口操作：`shift+command+d`（横向）command+d（竖向）\n\t\t*  \t`cmd + opt + 方向键`: 切换窗口内的面板 \n\t*\t2. 查找和粘贴：command+f，呼出查找功能，tab 键选中找到的文本，`option+enter` 粘贴\n\t* \t3. 全屏快捷键是 `cmd+enter` 而不是默认的 `ctrl+cmd+f`\n\n*   cmd + k 清屏\n*   cmd + r 刷新屏幕(上面的记录会保留)\n\n## 切换显示器\n因为没有别的切换快捷键，所以可以通过 alfred/spotlight 来实现，所以需要保留一个功能，不要在不同显示屏打开同一个应用，这会导致切换的问题\n\n*\t注意，ctrl + 左/右 只会切换鼠标所在位置的屏幕，所以需要使用别的方式切换打开了多个窗口的应用\n\t*\tvscode: ctrl + w\n\t*\tchrome: vimium 插件的 T \n\n## MAC 常用快捷键\n*   ctrl + cmd + f => toggle full screen\n*   cmd + m => 最小化窗口\n*   ctrl + 方向 => switch screen \n*   ctrl + 上 => list screens\n*   cmd + tab => switch apps 可以使用 alfred/spotlight 替代\n*   cmd + option + esc => 强制关闭程序\n\n### 终端常用快捷键(https://www.cnblogs.com/mangosoft/p/6375266.html)\n*   `ls`\n*   mkdir、cd、cp、mv、rm、pwd\n*   history、ctrl + r\n*   env => 配置环境时需要\n*   cat、find、head/tail、diff(在进行一些实验的时候，可以用来对比实验结果)\n*   wc：看代码量(行、词、字母)\n*   ps、kill\n*   `du -h 1`\n\n## 其它电脑配置\n### vim\n![](media/15481297883580/15482589171116.jpg)\n\n\n参看： \n*   [Python环境配置](https://realpython.com/vim-and-python-a-match-made-in-heaven/)\n*   [阮一峰-vim 配置入门](http://www.ruanyifeng.com/blog/2018/09/vimrc.html)\n\n*   插件管理 Vundle\n*   Powerline\n*   Line Numbering\n*   File Browsing\n*   Color Schemes\n*   Syntax Checking/Highlighting\n*   Auto-Complete\n\n#### 其它链接\n*   [Vim配置](https://github.com/spf13/spf13-vim)\n*   [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\n*   [渐进配置vim](https://www.cnblogs.com/zhongcq/p/3642794.html)\n\n\n### zsh 插件\n![](media/15481297883580/15482590011608.jpg)\n\n\n\n## VIM\n*   zM/zR => 全文折叠/展开\n*   zc/zo: 代码块折叠/展开\n*   多级折叠\n*   \n\n","source":"_posts/VSCode-基本操作.md","raw":"---\ntitle: VSCode 基本操作\ndate: 2019-02-27 15:17:17\ntags:\n---\n\n# VS Code\n## 基本操作\n*   命令面板：cmd + shift + p\n    *   Code Cli 的安装\n\n*   光标移动\n    *\t  单词：option + 左右\n    *\t  行：cmd + 左右\n    *   **代码块**：cmd + shift + \\ => **很关键**\n    *   **文件**：cmd + 上下\n\n*   文本选择 + `shift`\n    *   单词：option + 左右 + shift\n    *   行：cmd + 左右 + shift\n\n*\t操作\n    *   删除代码\n        *   删除行\n            *   cmd + fn + delete 右侧所有代码\n            *   cmd + delete 左侧所有代码\n        *   删除单词\n            *   option + fn + delete 右侧所有代码\n            *   option + delete 左侧所有代码\n        *   删除当前行 cmd + shift + k\n        *   剪切当前行 cmd + x\n    *   移动一行代码：option + 上下\n\n*   `keyboard` 查看键位绑定：cmd + k cmd + s\n\n## 进阶操作\n*   代码格式化：format\n    *   option + shift + f\n\n*   排序：sort line ascending => cmd + shift + p\n\n*   多光标操作 => **？** `https://time.geekbang.org/column/article/40261`\n\t*\tcmd + d => 选中左边第一个单词\n\t*\t选中多行后，option + shift + i => 多行行尾添加光标\n\n#### 文件跳转\n\t*\tcmd + p => 最近的文件列表(或者查找文件)\n\t\t*\tcmd + enter => 新窗口里打开 => **可以对比不同**\n\t\t*     打开以后发现它是可切换状态，因为你没有编辑，你可以手动 cmd + s 去固定这个标签页\n\t\t![](media/15481297883580/15482156645261.jpg)\n\n\t*\tctrl + tab 切换\n\t*\tcmd + option + 左右 => 浏览器里可以通用\n\n*   行跳转：ctrl + g => 在查看 git 冲突的时候 => vim 模式 `:number`\n\n#### 符号跳转\n*   cmd + shift + o：跳转类(类似于大纲，在组件的功能了解中很方便)\n*   cmd + t：跨文件查找调用方法的定义(比如查找接口调用的时候)\n\n#### 函数跳转\n*   cmd + f12：跳转方法实现\n*   f12: 跳转方法定义\n*   shift + f12：查看方法调用\n    *   space 打开\n\n*\tf2：快速修改方法/函数名(相关的调用/定义)\n\n*\tcmd + option + [/] => 代码折叠，看代码逻辑的时候特别好用，和 cmd + shift + 左右 都特别适合看代码\n*\tcmd + k -> cmd + 0 => 折叠文件\n\t*\tcmd + k -> cmd + j\n\n### 自动补全、快速修复、重构 => https://time.geekbang.org/column/article/40847\n\n### 代码折叠、小地图、面包屑\n#### 面包屑 => 可能有人更喜欢这个而不是文件资源管理器\n*   打开面包屑 cmd + shift + .\n*   option + 左/右 => 切换层级\n\n### 极速搜索\n*   cmd + f：自动选中当前光标所在的单词\n*   cmd + g：搜索，但是光标仍在编辑区\n\n大小写敏感，全单词匹配、正则匹配\n\n替换：cmd + option + f\n\n### 全局查找\n*\tcmd + shift + f 查找\n*\tcmd + 下 切换到相应搜索结果\n*\to 打开搜索列表\n\n\n### 查找/定位\n*\tcmd + f \n\t*\tenter => 下一个\n\t*\tshift + enter => 上一个\n\n### 切换工作区\n*\tcmd + shift + e => 文件资源管理器\n*\tcmd + shift + x => 插件管理\n*\tctrl + shift + g => 源代码管理\n\n右击工作区即可\n![](media/15481297883580/15481522955441.jpg)\n\n\n### 切换窗口\n支持多工作区模式，但是更支持多窗口，一个工作区对应一个窗口\n*\tctrl + w => 切换多窗口\n\n#### markdown 预览\ncmd + k 、v\n\n#### 查找键位绑定 keyboard\n*   录制按钮\n\n![](media/15481297883580/15482407032089.jpg)\n\n\n### 编辑器配置\n*   垂直标尺 => \"editor.rulers\": [120] => 120字符\n*   缩进参考线 => \"editor.renderIndentGuides\": true\n*   lineNumber\n*   空格处填充符号 => \"editor.renderWhitespace\": \"boundary\"\n*   左侧行号也添加了背景号 =>  \"editor.renderLineHighlight\": \"all\"\n\n#### 其它配置\n*   tabSize、lineHeight、autoSave/autoSaveDelay\n*  `terminal.integrated.shell.osx`: zsh\n*   \"files.exclude\":  { \"**/node_modules\": true } => 加快编辑器运行速度\n\n#### 悬浮注解\n![](media/15481297883580/15482581731361.jpg)\n\n### 编辑器管理\n#### 窗口管理\n*\tcmd + \\ => 打开新窗口\n    *   cmd + 1/2/3 => 切换窗口\n    *   cmd + option + 0(数字) => 切换布局方向(垂直/水平)\n\n#### Tab 管理\n*   ctrl + tab\n*   option + cmd + 左/右\n*   cmd + p\n\n### 视图切换\n*\tcmd + B => 左侧边栏的展示/隐藏\n*\tzen => 只留下代码\n*\tcmd + j => 查看 code spell check 的报错\n![](media/15481297883580/15482397619087.jpg)\n\n### 插件篇\n#### BASIC \n*   code spell checker：检查单词拼写错误\n*   Bracket Pair Colorizer：彩色的括号\n*   Document This：为 function、class 等自动生成文档\n*   Gitlens：Git 集成工具\n    *   当前行展示 git blame 信息\n*   Material Icon Theme/vscode-icons：文件夹icon的多样性\n*   TODO Highlight：List TODO list\n![](media/15481297883580/15482559630550.jpg)\n\n*   Vim：\n*   vscode-fileheader：ctrl + option + i 生成新文件的文档 => 孙悟空到此一游\n*   Path Intellisense：补全文件路径名\n*   Faker：生产 fake name => 就像名字一样废...\n\n#### ADDITIONS\n*\tpigment：可以直接看到当前的色彩\n*\tsettings sync：generate key => 保存到 gists 上\n*\tproject manager => 保存以后很方便可以切换(打开的/未打开的)工程\n*\tlive share => 登录就可以修改别人的工程文件，而不需要拉代码\n\n*\t.vscode 中添加 recommendations => vscode 会提示安装\n\n![](media/15481297883580/15482563560237.jpg)\n\n\n## mac note 的使用\n*\tctrl + shift + tab 或者 ctrl + tab\n\n## 浏览器\n*   f12 调出来控制台\n*   debugger 控制台\n\t*\tf8、f10、f11\n\t*\tesc：source debugger 的时候可以调出 console 控制台\n*\tcmd + shift + n 打开隐身窗口\n*\tshift + w => 在新的窗口打开浏览页\n\n\n### 插件\n*\tvimium\n\t*\tj、k 上下挪动页面\n\t*\tyy：复制当前 url\n\t*\tp/P：当前剪贴板的 url 复制到地址栏\n\t*\to/O：打开bookMark、收藏栏、历史记录中的页面\n\t*\tT：查找当前打开的 tab\n\t*\tr：reload page\n\t*\tshift + ? 查看快捷键\n\t*\t查找模式\n\t\t*\t/xxx：查找 xxx\n\t\t*\tn/N：上/下一个\n\n### 其它插件\n*   有道划词/网易有道词典鼠标取词：查询方便，划词翻译快速\n*   二维码生成\n*   great suspender\n*   各种 devtools：redux、MobX、vue、React\n*   Github 相关的文件管理侧边栏\n\n## iTerm 2 使用\n*\t选择文本: `cmd + f`搜索 ＋ `tab`选中文本，会自动添加到剪切板，使用`cmd + v`即可使用\n* \t临时调用iterm: 通过hotkey的设置 => `shift + space` => **可以尝试使用cal看今天是周几，不过使用台历也没有问题**\n ![](media/15481297883580/15482137824196.jpg)\n\n\n*  \t命令行标记: `cmd + shift + m`可以为某一行(或者说某一屏幕添加标记),之后可以使用`cmd + shift + j`跳回这里\n    *   比如一些安装步骤或者看到日志需要对比的时候可以打标记\n*  \t剪贴板历史: `cmd + shift + h`可以查看(iterm)剪贴板历史纪录\n*  \t查看操作历史(快照): `cmd + option + B`可以查看之前一段时间内的操作的快照(阴险)\n\n![](media/15481297883580/15482140578138.jpg)\n\n*   option + b、option + f\n*   iTerm2\n\t*  \t1. 分窗口操作：`shift+command+d`（横向）command+d（竖向）\n\t\t*  \t`cmd + opt + 方向键`: 切换窗口内的面板 \n\t*\t2. 查找和粘贴：command+f，呼出查找功能，tab 键选中找到的文本，`option+enter` 粘贴\n\t* \t3. 全屏快捷键是 `cmd+enter` 而不是默认的 `ctrl+cmd+f`\n\n*   cmd + k 清屏\n*   cmd + r 刷新屏幕(上面的记录会保留)\n\n## 切换显示器\n因为没有别的切换快捷键，所以可以通过 alfred/spotlight 来实现，所以需要保留一个功能，不要在不同显示屏打开同一个应用，这会导致切换的问题\n\n*\t注意，ctrl + 左/右 只会切换鼠标所在位置的屏幕，所以需要使用别的方式切换打开了多个窗口的应用\n\t*\tvscode: ctrl + w\n\t*\tchrome: vimium 插件的 T \n\n## MAC 常用快捷键\n*   ctrl + cmd + f => toggle full screen\n*   cmd + m => 最小化窗口\n*   ctrl + 方向 => switch screen \n*   ctrl + 上 => list screens\n*   cmd + tab => switch apps 可以使用 alfred/spotlight 替代\n*   cmd + option + esc => 强制关闭程序\n\n### 终端常用快捷键(https://www.cnblogs.com/mangosoft/p/6375266.html)\n*   `ls`\n*   mkdir、cd、cp、mv、rm、pwd\n*   history、ctrl + r\n*   env => 配置环境时需要\n*   cat、find、head/tail、diff(在进行一些实验的时候，可以用来对比实验结果)\n*   wc：看代码量(行、词、字母)\n*   ps、kill\n*   `du -h 1`\n\n## 其它电脑配置\n### vim\n![](media/15481297883580/15482589171116.jpg)\n\n\n参看： \n*   [Python环境配置](https://realpython.com/vim-and-python-a-match-made-in-heaven/)\n*   [阮一峰-vim 配置入门](http://www.ruanyifeng.com/blog/2018/09/vimrc.html)\n\n*   插件管理 Vundle\n*   Powerline\n*   Line Numbering\n*   File Browsing\n*   Color Schemes\n*   Syntax Checking/Highlighting\n*   Auto-Complete\n\n#### 其它链接\n*   [Vim配置](https://github.com/spf13/spf13-vim)\n*   [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\n*   [渐进配置vim](https://www.cnblogs.com/zhongcq/p/3642794.html)\n\n\n### zsh 插件\n![](media/15481297883580/15482590011608.jpg)\n\n\n\n## VIM\n*   zM/zR => 全文折叠/展开\n*   zc/zo: 代码块折叠/展开\n*   多级折叠\n*   \n\n","slug":"VSCode-基本操作","published":1,"updated":"2019-02-27T07:17:32.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsmvbezq000sm21iyh87bzw1","content":"<h1 id=\"VS-Code\"><a href=\"#VS-Code\" class=\"headerlink\" title=\"VS Code\"></a>VS Code</h1><h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><ul>\n<li><p>命令面板：cmd + shift + p</p>\n<ul>\n<li>Code Cli 的安装</li>\n</ul>\n</li>\n<li><p>光标移动</p>\n<ul>\n<li>单词：option + 左右</li>\n<li>行：cmd + 左右</li>\n<li><strong>代码块</strong>：cmd + shift + \\ =&gt; <strong>很关键</strong></li>\n<li><strong>文件</strong>：cmd + 上下</li>\n</ul>\n</li>\n<li><p>文本选择 + <code>shift</code></p>\n<ul>\n<li>单词：option + 左右 + shift</li>\n<li>行：cmd + 左右 + shift</li>\n</ul>\n</li>\n<li><p>操作</p>\n<ul>\n<li>删除代码<ul>\n<li>删除行<ul>\n<li>cmd + fn + delete 右侧所有代码</li>\n<li>cmd + delete 左侧所有代码</li>\n</ul>\n</li>\n<li>删除单词<ul>\n<li>option + fn + delete 右侧所有代码</li>\n<li>option + delete 左侧所有代码</li>\n</ul>\n</li>\n<li>删除当前行 cmd + shift + k</li>\n<li>剪切当前行 cmd + x</li>\n</ul>\n</li>\n<li>移动一行代码：option + 上下</li>\n</ul>\n</li>\n<li><p><code>keyboard</code> 查看键位绑定：cmd + k cmd + s</p>\n</li>\n</ul>\n<h2 id=\"进阶操作\"><a href=\"#进阶操作\" class=\"headerlink\" title=\"进阶操作\"></a>进阶操作</h2><ul>\n<li><p>代码格式化：format</p>\n<ul>\n<li>option + shift + f</li>\n</ul>\n</li>\n<li><p>排序：sort line ascending =&gt; cmd + shift + p</p>\n</li>\n<li><p>多光标操作 =&gt; <strong>？</strong> <code>https://time.geekbang.org/column/article/40261</code></p>\n<ul>\n<li>cmd + d =&gt; 选中左边第一个单词</li>\n<li>选中多行后，option + shift + i =&gt; 多行行尾添加光标</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件跳转\"><a href=\"#文件跳转\" class=\"headerlink\" title=\"文件跳转\"></a>文件跳转</h4><pre><code>*    cmd + p =&gt; 最近的文件列表(或者查找文件)\n    *    cmd + enter =&gt; 新窗口里打开 =&gt; **可以对比不同**\n    *     打开以后发现它是可切换状态，因为你没有编辑，你可以手动 cmd + s 去固定这个标签页\n    ![](media/15481297883580/15482156645261.jpg)\n\n*    ctrl + tab 切换\n*    cmd + option + 左右 =&gt; 浏览器里可以通用\n</code></pre><ul>\n<li>行跳转：ctrl + g =&gt; 在查看 git 冲突的时候 =&gt; vim 模式 <code>:number</code></li>\n</ul>\n<h4 id=\"符号跳转\"><a href=\"#符号跳转\" class=\"headerlink\" title=\"符号跳转\"></a>符号跳转</h4><ul>\n<li>cmd + shift + o：跳转类(类似于大纲，在组件的功能了解中很方便)</li>\n<li>cmd + t：跨文件查找调用方法的定义(比如查找接口调用的时候)</li>\n</ul>\n<h4 id=\"函数跳转\"><a href=\"#函数跳转\" class=\"headerlink\" title=\"函数跳转\"></a>函数跳转</h4><ul>\n<li>cmd + f12：跳转方法实现</li>\n<li>f12: 跳转方法定义</li>\n<li><p>shift + f12：查看方法调用</p>\n<ul>\n<li>space 打开</li>\n</ul>\n</li>\n<li><p>f2：快速修改方法/函数名(相关的调用/定义)</p>\n</li>\n<li><p>cmd + option + [/] =&gt; 代码折叠，看代码逻辑的时候特别好用，和 cmd + shift + 左右 都特别适合看代码</p>\n</li>\n<li>cmd + k -&gt; cmd + 0 =&gt; 折叠文件<ul>\n<li>cmd + k -&gt; cmd + j</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自动补全、快速修复、重构-gt-https-time-geekbang-org-column-article-40847\"><a href=\"#自动补全、快速修复、重构-gt-https-time-geekbang-org-column-article-40847\" class=\"headerlink\" title=\"自动补全、快速修复、重构 =&gt; https://time.geekbang.org/column/article/40847\"></a>自动补全、快速修复、重构 =&gt; <a href=\"https://time.geekbang.org/column/article/40847\" target=\"_blank\" rel=\"noopener\">https://time.geekbang.org/column/article/40847</a></h3><h3 id=\"代码折叠、小地图、面包屑\"><a href=\"#代码折叠、小地图、面包屑\" class=\"headerlink\" title=\"代码折叠、小地图、面包屑\"></a>代码折叠、小地图、面包屑</h3><h4 id=\"面包屑-gt-可能有人更喜欢这个而不是文件资源管理器\"><a href=\"#面包屑-gt-可能有人更喜欢这个而不是文件资源管理器\" class=\"headerlink\" title=\"面包屑 =&gt; 可能有人更喜欢这个而不是文件资源管理器\"></a>面包屑 =&gt; 可能有人更喜欢这个而不是文件资源管理器</h4><ul>\n<li>打开面包屑 cmd + shift + .</li>\n<li>option + 左/右 =&gt; 切换层级</li>\n</ul>\n<h3 id=\"极速搜索\"><a href=\"#极速搜索\" class=\"headerlink\" title=\"极速搜索\"></a>极速搜索</h3><ul>\n<li>cmd + f：自动选中当前光标所在的单词</li>\n<li>cmd + g：搜索，但是光标仍在编辑区</li>\n</ul>\n<p>大小写敏感，全单词匹配、正则匹配</p>\n<p>替换：cmd + option + f</p>\n<h3 id=\"全局查找\"><a href=\"#全局查找\" class=\"headerlink\" title=\"全局查找\"></a>全局查找</h3><ul>\n<li>cmd + shift + f 查找</li>\n<li>cmd + 下 切换到相应搜索结果</li>\n<li>o 打开搜索列表</li>\n</ul>\n<h3 id=\"查找-定位\"><a href=\"#查找-定位\" class=\"headerlink\" title=\"查找/定位\"></a>查找/定位</h3><ul>\n<li>cmd + f <ul>\n<li>enter =&gt; 下一个</li>\n<li>shift + enter =&gt; 上一个</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"切换工作区\"><a href=\"#切换工作区\" class=\"headerlink\" title=\"切换工作区\"></a>切换工作区</h3><ul>\n<li>cmd + shift + e =&gt; 文件资源管理器</li>\n<li>cmd + shift + x =&gt; 插件管理</li>\n<li>ctrl + shift + g =&gt; 源代码管理</li>\n</ul>\n<p>右击工作区即可<br><img src=\"media/15481297883580/15481522955441.jpg\" alt></p>\n<h3 id=\"切换窗口\"><a href=\"#切换窗口\" class=\"headerlink\" title=\"切换窗口\"></a>切换窗口</h3><p>支持多工作区模式，但是更支持多窗口，一个工作区对应一个窗口</p>\n<ul>\n<li>ctrl + w =&gt; 切换多窗口</li>\n</ul>\n<h4 id=\"markdown-预览\"><a href=\"#markdown-预览\" class=\"headerlink\" title=\"markdown 预览\"></a>markdown 预览</h4><p>cmd + k 、v</p>\n<h4 id=\"查找键位绑定-keyboard\"><a href=\"#查找键位绑定-keyboard\" class=\"headerlink\" title=\"查找键位绑定 keyboard\"></a>查找键位绑定 keyboard</h4><ul>\n<li>录制按钮</li>\n</ul>\n<p><img src=\"media/15481297883580/15482407032089.jpg\" alt></p>\n<h3 id=\"编辑器配置\"><a href=\"#编辑器配置\" class=\"headerlink\" title=\"编辑器配置\"></a>编辑器配置</h3><ul>\n<li>垂直标尺 =&gt; “editor.rulers”: [120] =&gt; 120字符</li>\n<li>缩进参考线 =&gt; “editor.renderIndentGuides”: true</li>\n<li>lineNumber</li>\n<li>空格处填充符号 =&gt; “editor.renderWhitespace”: “boundary”</li>\n<li>左侧行号也添加了背景号 =&gt;  “editor.renderLineHighlight”: “all”</li>\n</ul>\n<h4 id=\"其它配置\"><a href=\"#其它配置\" class=\"headerlink\" title=\"其它配置\"></a>其它配置</h4><ul>\n<li>tabSize、lineHeight、autoSave/autoSaveDelay</li>\n<li><code>terminal.integrated.shell.osx</code>: zsh</li>\n<li>“files.exclude”:  { “**/node_modules”: true } =&gt; 加快编辑器运行速度</li>\n</ul>\n<h4 id=\"悬浮注解\"><a href=\"#悬浮注解\" class=\"headerlink\" title=\"悬浮注解\"></a>悬浮注解</h4><p><img src=\"media/15481297883580/15482581731361.jpg\" alt></p>\n<h3 id=\"编辑器管理\"><a href=\"#编辑器管理\" class=\"headerlink\" title=\"编辑器管理\"></a>编辑器管理</h3><h4 id=\"窗口管理\"><a href=\"#窗口管理\" class=\"headerlink\" title=\"窗口管理\"></a>窗口管理</h4><ul>\n<li>cmd + \\ =&gt; 打开新窗口<ul>\n<li>cmd + 1/2/3 =&gt; 切换窗口</li>\n<li>cmd + option + 0(数字) =&gt; 切换布局方向(垂直/水平)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Tab-管理\"><a href=\"#Tab-管理\" class=\"headerlink\" title=\"Tab 管理\"></a>Tab 管理</h4><ul>\n<li>ctrl + tab</li>\n<li>option + cmd + 左/右</li>\n<li>cmd + p</li>\n</ul>\n<h3 id=\"视图切换\"><a href=\"#视图切换\" class=\"headerlink\" title=\"视图切换\"></a>视图切换</h3><ul>\n<li>cmd + B =&gt; 左侧边栏的展示/隐藏</li>\n<li>zen =&gt; 只留下代码</li>\n<li>cmd + j =&gt; 查看 code spell check 的报错<br><img src=\"media/15481297883580/15482397619087.jpg\" alt></li>\n</ul>\n<h3 id=\"插件篇\"><a href=\"#插件篇\" class=\"headerlink\" title=\"插件篇\"></a>插件篇</h3><h4 id=\"BASIC\"><a href=\"#BASIC\" class=\"headerlink\" title=\"BASIC\"></a>BASIC</h4><ul>\n<li>code spell checker：检查单词拼写错误</li>\n<li>Bracket Pair Colorizer：彩色的括号</li>\n<li>Document This：为 function、class 等自动生成文档</li>\n<li>Gitlens：Git 集成工具<ul>\n<li>当前行展示 git blame 信息</li>\n</ul>\n</li>\n<li>Material Icon Theme/vscode-icons：文件夹icon的多样性</li>\n<li><p>TODO Highlight：List TODO list<br><img src=\"media/15481297883580/15482559630550.jpg\" alt></p>\n</li>\n<li><p>Vim：</p>\n</li>\n<li>vscode-fileheader：ctrl + option + i 生成新文件的文档 =&gt; 孙悟空到此一游</li>\n<li>Path Intellisense：补全文件路径名</li>\n<li>Faker：生产 fake name =&gt; 就像名字一样废…</li>\n</ul>\n<h4 id=\"ADDITIONS\"><a href=\"#ADDITIONS\" class=\"headerlink\" title=\"ADDITIONS\"></a>ADDITIONS</h4><ul>\n<li>pigment：可以直接看到当前的色彩</li>\n<li>settings sync：generate key =&gt; 保存到 gists 上</li>\n<li>project manager =&gt; 保存以后很方便可以切换(打开的/未打开的)工程</li>\n<li><p>live share =&gt; 登录就可以修改别人的工程文件，而不需要拉代码</p>\n</li>\n<li><p>.vscode 中添加 recommendations =&gt; vscode 会提示安装</p>\n</li>\n</ul>\n<p><img src=\"media/15481297883580/15482563560237.jpg\" alt></p>\n<h2 id=\"mac-note-的使用\"><a href=\"#mac-note-的使用\" class=\"headerlink\" title=\"mac note 的使用\"></a>mac note 的使用</h2><ul>\n<li>ctrl + shift + tab 或者 ctrl + tab</li>\n</ul>\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><ul>\n<li>f12 调出来控制台</li>\n<li>debugger 控制台<ul>\n<li>f8、f10、f11</li>\n<li>esc：source debugger 的时候可以调出 console 控制台</li>\n</ul>\n</li>\n<li>cmd + shift + n 打开隐身窗口</li>\n<li>shift + w =&gt; 在新的窗口打开浏览页</li>\n</ul>\n<h3 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h3><ul>\n<li>vimium<ul>\n<li>j、k 上下挪动页面</li>\n<li>yy：复制当前 url</li>\n<li>p/P：当前剪贴板的 url 复制到地址栏</li>\n<li>o/O：打开bookMark、收藏栏、历史记录中的页面</li>\n<li>T：查找当前打开的 tab</li>\n<li>r：reload page</li>\n<li>shift + ? 查看快捷键</li>\n<li>查找模式<ul>\n<li>/xxx：查找 xxx</li>\n<li>n/N：上/下一个</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其它插件\"><a href=\"#其它插件\" class=\"headerlink\" title=\"其它插件\"></a>其它插件</h3><ul>\n<li>有道划词/网易有道词典鼠标取词：查询方便，划词翻译快速</li>\n<li>二维码生成</li>\n<li>great suspender</li>\n<li>各种 devtools：redux、MobX、vue、React</li>\n<li>Github 相关的文件管理侧边栏</li>\n</ul>\n<h2 id=\"iTerm-2-使用\"><a href=\"#iTerm-2-使用\" class=\"headerlink\" title=\"iTerm 2 使用\"></a>iTerm 2 使用</h2><ul>\n<li>选择文本: <code>cmd + f</code>搜索 ＋ <code>tab</code>选中文本，会自动添加到剪切板，使用<code>cmd + v</code>即可使用</li>\n<li>临时调用iterm: 通过hotkey的设置 =&gt; <code>shift + space</code> =&gt; <strong>可以尝试使用cal看今天是周几，不过使用台历也没有问题</strong><br><img src=\"media/15481297883580/15482137824196.jpg\" alt></li>\n</ul>\n<ul>\n<li>命令行标记: <code>cmd + shift + m</code>可以为某一行(或者说某一屏幕添加标记),之后可以使用<code>cmd + shift + j</code>跳回这里<ul>\n<li>比如一些安装步骤或者看到日志需要对比的时候可以打标记</li>\n</ul>\n</li>\n<li>剪贴板历史: <code>cmd + shift + h</code>可以查看(iterm)剪贴板历史纪录</li>\n<li>查看操作历史(快照): <code>cmd + option + B</code>可以查看之前一段时间内的操作的快照(阴险)</li>\n</ul>\n<p><img src=\"media/15481297883580/15482140578138.jpg\" alt></p>\n<ul>\n<li>option + b、option + f</li>\n<li><p>iTerm2</p>\n<ul>\n<li><ol>\n<li>分窗口操作：<code>shift+command+d</code>（横向）command+d（竖向）</li>\n</ol>\n<ul>\n<li><code>cmd + opt + 方向键</code>: 切换窗口内的面板 </li>\n</ul>\n</li>\n<li><ol start=\"2\">\n<li>查找和粘贴：command+f，呼出查找功能，tab 键选中找到的文本，<code>option+enter</code> 粘贴</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>全屏快捷键是 <code>cmd+enter</code> 而不是默认的 <code>ctrl+cmd+f</code></li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>cmd + k 清屏</p>\n</li>\n<li>cmd + r 刷新屏幕(上面的记录会保留)</li>\n</ul>\n<h2 id=\"切换显示器\"><a href=\"#切换显示器\" class=\"headerlink\" title=\"切换显示器\"></a>切换显示器</h2><p>因为没有别的切换快捷键，所以可以通过 alfred/spotlight 来实现，所以需要保留一个功能，不要在不同显示屏打开同一个应用，这会导致切换的问题</p>\n<ul>\n<li>注意，ctrl + 左/右 只会切换鼠标所在位置的屏幕，所以需要使用别的方式切换打开了多个窗口的应用<ul>\n<li>vscode: ctrl + w</li>\n<li>chrome: vimium 插件的 T </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MAC-常用快捷键\"><a href=\"#MAC-常用快捷键\" class=\"headerlink\" title=\"MAC 常用快捷键\"></a>MAC 常用快捷键</h2><ul>\n<li>ctrl + cmd + f =&gt; toggle full screen</li>\n<li>cmd + m =&gt; 最小化窗口</li>\n<li>ctrl + 方向 =&gt; switch screen </li>\n<li>ctrl + 上 =&gt; list screens</li>\n<li>cmd + tab =&gt; switch apps 可以使用 alfred/spotlight 替代</li>\n<li>cmd + option + esc =&gt; 强制关闭程序</li>\n</ul>\n<h3 id=\"终端常用快捷键-https-www-cnblogs-com-mangosoft-p-6375266-html\"><a href=\"#终端常用快捷键-https-www-cnblogs-com-mangosoft-p-6375266-html\" class=\"headerlink\" title=\"终端常用快捷键(https://www.cnblogs.com/mangosoft/p/6375266.html)\"></a>终端常用快捷键(<a href=\"https://www.cnblogs.com/mangosoft/p/6375266.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/mangosoft/p/6375266.html</a>)</h3><ul>\n<li><code>ls</code></li>\n<li>mkdir、cd、cp、mv、rm、pwd</li>\n<li>history、ctrl + r</li>\n<li>env =&gt; 配置环境时需要</li>\n<li>cat、find、head/tail、diff(在进行一些实验的时候，可以用来对比实验结果)</li>\n<li>wc：看代码量(行、词、字母)</li>\n<li>ps、kill</li>\n<li><code>du -h 1</code></li>\n</ul>\n<h2 id=\"其它电脑配置\"><a href=\"#其它电脑配置\" class=\"headerlink\" title=\"其它电脑配置\"></a>其它电脑配置</h2><h3 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h3><p><img src=\"media/15481297883580/15482589171116.jpg\" alt></p>\n<p>参看： </p>\n<ul>\n<li><a href=\"https://realpython.com/vim-and-python-a-match-made-in-heaven/\" target=\"_blank\" rel=\"noopener\">Python环境配置</a></li>\n<li><p><a href=\"http://www.ruanyifeng.com/blog/2018/09/vimrc.html\" target=\"_blank\" rel=\"noopener\">阮一峰-vim 配置入门</a></p>\n</li>\n<li><p>插件管理 Vundle</p>\n</li>\n<li>Powerline</li>\n<li>Line Numbering</li>\n<li>File Browsing</li>\n<li>Color Schemes</li>\n<li>Syntax Checking/Highlighting</li>\n<li>Auto-Complete</li>\n</ul>\n<h4 id=\"其它链接\"><a href=\"#其它链接\" class=\"headerlink\" title=\"其它链接\"></a>其它链接</h4><ul>\n<li><a href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\" rel=\"noopener\">Vim配置</a></li>\n<li><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">oh-my-zsh</a></li>\n<li><a href=\"https://www.cnblogs.com/zhongcq/p/3642794.html\" target=\"_blank\" rel=\"noopener\">渐进配置vim</a></li>\n</ul>\n<h3 id=\"zsh-插件\"><a href=\"#zsh-插件\" class=\"headerlink\" title=\"zsh 插件\"></a>zsh 插件</h3><p><img src=\"media/15481297883580/15482590011608.jpg\" alt></p>\n<h2 id=\"VIM\"><a href=\"#VIM\" class=\"headerlink\" title=\"VIM\"></a>VIM</h2><ul>\n<li>zM/zR =&gt; 全文折叠/展开</li>\n<li>zc/zo: 代码块折叠/展开</li>\n<li>多级折叠</li>\n<li></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"VS-Code\"><a href=\"#VS-Code\" class=\"headerlink\" title=\"VS Code\"></a>VS Code</h1><h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><ul>\n<li><p>命令面板：cmd + shift + p</p>\n<ul>\n<li>Code Cli 的安装</li>\n</ul>\n</li>\n<li><p>光标移动</p>\n<ul>\n<li>单词：option + 左右</li>\n<li>行：cmd + 左右</li>\n<li><strong>代码块</strong>：cmd + shift + \\ =&gt; <strong>很关键</strong></li>\n<li><strong>文件</strong>：cmd + 上下</li>\n</ul>\n</li>\n<li><p>文本选择 + <code>shift</code></p>\n<ul>\n<li>单词：option + 左右 + shift</li>\n<li>行：cmd + 左右 + shift</li>\n</ul>\n</li>\n<li><p>操作</p>\n<ul>\n<li>删除代码<ul>\n<li>删除行<ul>\n<li>cmd + fn + delete 右侧所有代码</li>\n<li>cmd + delete 左侧所有代码</li>\n</ul>\n</li>\n<li>删除单词<ul>\n<li>option + fn + delete 右侧所有代码</li>\n<li>option + delete 左侧所有代码</li>\n</ul>\n</li>\n<li>删除当前行 cmd + shift + k</li>\n<li>剪切当前行 cmd + x</li>\n</ul>\n</li>\n<li>移动一行代码：option + 上下</li>\n</ul>\n</li>\n<li><p><code>keyboard</code> 查看键位绑定：cmd + k cmd + s</p>\n</li>\n</ul>\n<h2 id=\"进阶操作\"><a href=\"#进阶操作\" class=\"headerlink\" title=\"进阶操作\"></a>进阶操作</h2><ul>\n<li><p>代码格式化：format</p>\n<ul>\n<li>option + shift + f</li>\n</ul>\n</li>\n<li><p>排序：sort line ascending =&gt; cmd + shift + p</p>\n</li>\n<li><p>多光标操作 =&gt; <strong>？</strong> <code>https://time.geekbang.org/column/article/40261</code></p>\n<ul>\n<li>cmd + d =&gt; 选中左边第一个单词</li>\n<li>选中多行后，option + shift + i =&gt; 多行行尾添加光标</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文件跳转\"><a href=\"#文件跳转\" class=\"headerlink\" title=\"文件跳转\"></a>文件跳转</h4><pre><code>*    cmd + p =&gt; 最近的文件列表(或者查找文件)\n    *    cmd + enter =&gt; 新窗口里打开 =&gt; **可以对比不同**\n    *     打开以后发现它是可切换状态，因为你没有编辑，你可以手动 cmd + s 去固定这个标签页\n    ![](media/15481297883580/15482156645261.jpg)\n\n*    ctrl + tab 切换\n*    cmd + option + 左右 =&gt; 浏览器里可以通用\n</code></pre><ul>\n<li>行跳转：ctrl + g =&gt; 在查看 git 冲突的时候 =&gt; vim 模式 <code>:number</code></li>\n</ul>\n<h4 id=\"符号跳转\"><a href=\"#符号跳转\" class=\"headerlink\" title=\"符号跳转\"></a>符号跳转</h4><ul>\n<li>cmd + shift + o：跳转类(类似于大纲，在组件的功能了解中很方便)</li>\n<li>cmd + t：跨文件查找调用方法的定义(比如查找接口调用的时候)</li>\n</ul>\n<h4 id=\"函数跳转\"><a href=\"#函数跳转\" class=\"headerlink\" title=\"函数跳转\"></a>函数跳转</h4><ul>\n<li>cmd + f12：跳转方法实现</li>\n<li>f12: 跳转方法定义</li>\n<li><p>shift + f12：查看方法调用</p>\n<ul>\n<li>space 打开</li>\n</ul>\n</li>\n<li><p>f2：快速修改方法/函数名(相关的调用/定义)</p>\n</li>\n<li><p>cmd + option + [/] =&gt; 代码折叠，看代码逻辑的时候特别好用，和 cmd + shift + 左右 都特别适合看代码</p>\n</li>\n<li>cmd + k -&gt; cmd + 0 =&gt; 折叠文件<ul>\n<li>cmd + k -&gt; cmd + j</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自动补全、快速修复、重构-gt-https-time-geekbang-org-column-article-40847\"><a href=\"#自动补全、快速修复、重构-gt-https-time-geekbang-org-column-article-40847\" class=\"headerlink\" title=\"自动补全、快速修复、重构 =&gt; https://time.geekbang.org/column/article/40847\"></a>自动补全、快速修复、重构 =&gt; <a href=\"https://time.geekbang.org/column/article/40847\" target=\"_blank\" rel=\"noopener\">https://time.geekbang.org/column/article/40847</a></h3><h3 id=\"代码折叠、小地图、面包屑\"><a href=\"#代码折叠、小地图、面包屑\" class=\"headerlink\" title=\"代码折叠、小地图、面包屑\"></a>代码折叠、小地图、面包屑</h3><h4 id=\"面包屑-gt-可能有人更喜欢这个而不是文件资源管理器\"><a href=\"#面包屑-gt-可能有人更喜欢这个而不是文件资源管理器\" class=\"headerlink\" title=\"面包屑 =&gt; 可能有人更喜欢这个而不是文件资源管理器\"></a>面包屑 =&gt; 可能有人更喜欢这个而不是文件资源管理器</h4><ul>\n<li>打开面包屑 cmd + shift + .</li>\n<li>option + 左/右 =&gt; 切换层级</li>\n</ul>\n<h3 id=\"极速搜索\"><a href=\"#极速搜索\" class=\"headerlink\" title=\"极速搜索\"></a>极速搜索</h3><ul>\n<li>cmd + f：自动选中当前光标所在的单词</li>\n<li>cmd + g：搜索，但是光标仍在编辑区</li>\n</ul>\n<p>大小写敏感，全单词匹配、正则匹配</p>\n<p>替换：cmd + option + f</p>\n<h3 id=\"全局查找\"><a href=\"#全局查找\" class=\"headerlink\" title=\"全局查找\"></a>全局查找</h3><ul>\n<li>cmd + shift + f 查找</li>\n<li>cmd + 下 切换到相应搜索结果</li>\n<li>o 打开搜索列表</li>\n</ul>\n<h3 id=\"查找-定位\"><a href=\"#查找-定位\" class=\"headerlink\" title=\"查找/定位\"></a>查找/定位</h3><ul>\n<li>cmd + f <ul>\n<li>enter =&gt; 下一个</li>\n<li>shift + enter =&gt; 上一个</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"切换工作区\"><a href=\"#切换工作区\" class=\"headerlink\" title=\"切换工作区\"></a>切换工作区</h3><ul>\n<li>cmd + shift + e =&gt; 文件资源管理器</li>\n<li>cmd + shift + x =&gt; 插件管理</li>\n<li>ctrl + shift + g =&gt; 源代码管理</li>\n</ul>\n<p>右击工作区即可<br><img src=\"media/15481297883580/15481522955441.jpg\" alt></p>\n<h3 id=\"切换窗口\"><a href=\"#切换窗口\" class=\"headerlink\" title=\"切换窗口\"></a>切换窗口</h3><p>支持多工作区模式，但是更支持多窗口，一个工作区对应一个窗口</p>\n<ul>\n<li>ctrl + w =&gt; 切换多窗口</li>\n</ul>\n<h4 id=\"markdown-预览\"><a href=\"#markdown-预览\" class=\"headerlink\" title=\"markdown 预览\"></a>markdown 预览</h4><p>cmd + k 、v</p>\n<h4 id=\"查找键位绑定-keyboard\"><a href=\"#查找键位绑定-keyboard\" class=\"headerlink\" title=\"查找键位绑定 keyboard\"></a>查找键位绑定 keyboard</h4><ul>\n<li>录制按钮</li>\n</ul>\n<p><img src=\"media/15481297883580/15482407032089.jpg\" alt></p>\n<h3 id=\"编辑器配置\"><a href=\"#编辑器配置\" class=\"headerlink\" title=\"编辑器配置\"></a>编辑器配置</h3><ul>\n<li>垂直标尺 =&gt; “editor.rulers”: [120] =&gt; 120字符</li>\n<li>缩进参考线 =&gt; “editor.renderIndentGuides”: true</li>\n<li>lineNumber</li>\n<li>空格处填充符号 =&gt; “editor.renderWhitespace”: “boundary”</li>\n<li>左侧行号也添加了背景号 =&gt;  “editor.renderLineHighlight”: “all”</li>\n</ul>\n<h4 id=\"其它配置\"><a href=\"#其它配置\" class=\"headerlink\" title=\"其它配置\"></a>其它配置</h4><ul>\n<li>tabSize、lineHeight、autoSave/autoSaveDelay</li>\n<li><code>terminal.integrated.shell.osx</code>: zsh</li>\n<li>“files.exclude”:  { “**/node_modules”: true } =&gt; 加快编辑器运行速度</li>\n</ul>\n<h4 id=\"悬浮注解\"><a href=\"#悬浮注解\" class=\"headerlink\" title=\"悬浮注解\"></a>悬浮注解</h4><p><img src=\"media/15481297883580/15482581731361.jpg\" alt></p>\n<h3 id=\"编辑器管理\"><a href=\"#编辑器管理\" class=\"headerlink\" title=\"编辑器管理\"></a>编辑器管理</h3><h4 id=\"窗口管理\"><a href=\"#窗口管理\" class=\"headerlink\" title=\"窗口管理\"></a>窗口管理</h4><ul>\n<li>cmd + \\ =&gt; 打开新窗口<ul>\n<li>cmd + 1/2/3 =&gt; 切换窗口</li>\n<li>cmd + option + 0(数字) =&gt; 切换布局方向(垂直/水平)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Tab-管理\"><a href=\"#Tab-管理\" class=\"headerlink\" title=\"Tab 管理\"></a>Tab 管理</h4><ul>\n<li>ctrl + tab</li>\n<li>option + cmd + 左/右</li>\n<li>cmd + p</li>\n</ul>\n<h3 id=\"视图切换\"><a href=\"#视图切换\" class=\"headerlink\" title=\"视图切换\"></a>视图切换</h3><ul>\n<li>cmd + B =&gt; 左侧边栏的展示/隐藏</li>\n<li>zen =&gt; 只留下代码</li>\n<li>cmd + j =&gt; 查看 code spell check 的报错<br><img src=\"media/15481297883580/15482397619087.jpg\" alt></li>\n</ul>\n<h3 id=\"插件篇\"><a href=\"#插件篇\" class=\"headerlink\" title=\"插件篇\"></a>插件篇</h3><h4 id=\"BASIC\"><a href=\"#BASIC\" class=\"headerlink\" title=\"BASIC\"></a>BASIC</h4><ul>\n<li>code spell checker：检查单词拼写错误</li>\n<li>Bracket Pair Colorizer：彩色的括号</li>\n<li>Document This：为 function、class 等自动生成文档</li>\n<li>Gitlens：Git 集成工具<ul>\n<li>当前行展示 git blame 信息</li>\n</ul>\n</li>\n<li>Material Icon Theme/vscode-icons：文件夹icon的多样性</li>\n<li><p>TODO Highlight：List TODO list<br><img src=\"media/15481297883580/15482559630550.jpg\" alt></p>\n</li>\n<li><p>Vim：</p>\n</li>\n<li>vscode-fileheader：ctrl + option + i 生成新文件的文档 =&gt; 孙悟空到此一游</li>\n<li>Path Intellisense：补全文件路径名</li>\n<li>Faker：生产 fake name =&gt; 就像名字一样废…</li>\n</ul>\n<h4 id=\"ADDITIONS\"><a href=\"#ADDITIONS\" class=\"headerlink\" title=\"ADDITIONS\"></a>ADDITIONS</h4><ul>\n<li>pigment：可以直接看到当前的色彩</li>\n<li>settings sync：generate key =&gt; 保存到 gists 上</li>\n<li>project manager =&gt; 保存以后很方便可以切换(打开的/未打开的)工程</li>\n<li><p>live share =&gt; 登录就可以修改别人的工程文件，而不需要拉代码</p>\n</li>\n<li><p>.vscode 中添加 recommendations =&gt; vscode 会提示安装</p>\n</li>\n</ul>\n<p><img src=\"media/15481297883580/15482563560237.jpg\" alt></p>\n<h2 id=\"mac-note-的使用\"><a href=\"#mac-note-的使用\" class=\"headerlink\" title=\"mac note 的使用\"></a>mac note 的使用</h2><ul>\n<li>ctrl + shift + tab 或者 ctrl + tab</li>\n</ul>\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><ul>\n<li>f12 调出来控制台</li>\n<li>debugger 控制台<ul>\n<li>f8、f10、f11</li>\n<li>esc：source debugger 的时候可以调出 console 控制台</li>\n</ul>\n</li>\n<li>cmd + shift + n 打开隐身窗口</li>\n<li>shift + w =&gt; 在新的窗口打开浏览页</li>\n</ul>\n<h3 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h3><ul>\n<li>vimium<ul>\n<li>j、k 上下挪动页面</li>\n<li>yy：复制当前 url</li>\n<li>p/P：当前剪贴板的 url 复制到地址栏</li>\n<li>o/O：打开bookMark、收藏栏、历史记录中的页面</li>\n<li>T：查找当前打开的 tab</li>\n<li>r：reload page</li>\n<li>shift + ? 查看快捷键</li>\n<li>查找模式<ul>\n<li>/xxx：查找 xxx</li>\n<li>n/N：上/下一个</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其它插件\"><a href=\"#其它插件\" class=\"headerlink\" title=\"其它插件\"></a>其它插件</h3><ul>\n<li>有道划词/网易有道词典鼠标取词：查询方便，划词翻译快速</li>\n<li>二维码生成</li>\n<li>great suspender</li>\n<li>各种 devtools：redux、MobX、vue、React</li>\n<li>Github 相关的文件管理侧边栏</li>\n</ul>\n<h2 id=\"iTerm-2-使用\"><a href=\"#iTerm-2-使用\" class=\"headerlink\" title=\"iTerm 2 使用\"></a>iTerm 2 使用</h2><ul>\n<li>选择文本: <code>cmd + f</code>搜索 ＋ <code>tab</code>选中文本，会自动添加到剪切板，使用<code>cmd + v</code>即可使用</li>\n<li>临时调用iterm: 通过hotkey的设置 =&gt; <code>shift + space</code> =&gt; <strong>可以尝试使用cal看今天是周几，不过使用台历也没有问题</strong><br><img src=\"media/15481297883580/15482137824196.jpg\" alt></li>\n</ul>\n<ul>\n<li>命令行标记: <code>cmd + shift + m</code>可以为某一行(或者说某一屏幕添加标记),之后可以使用<code>cmd + shift + j</code>跳回这里<ul>\n<li>比如一些安装步骤或者看到日志需要对比的时候可以打标记</li>\n</ul>\n</li>\n<li>剪贴板历史: <code>cmd + shift + h</code>可以查看(iterm)剪贴板历史纪录</li>\n<li>查看操作历史(快照): <code>cmd + option + B</code>可以查看之前一段时间内的操作的快照(阴险)</li>\n</ul>\n<p><img src=\"media/15481297883580/15482140578138.jpg\" alt></p>\n<ul>\n<li>option + b、option + f</li>\n<li><p>iTerm2</p>\n<ul>\n<li><ol>\n<li>分窗口操作：<code>shift+command+d</code>（横向）command+d（竖向）</li>\n</ol>\n<ul>\n<li><code>cmd + opt + 方向键</code>: 切换窗口内的面板 </li>\n</ul>\n</li>\n<li><ol start=\"2\">\n<li>查找和粘贴：command+f，呼出查找功能，tab 键选中找到的文本，<code>option+enter</code> 粘贴</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>全屏快捷键是 <code>cmd+enter</code> 而不是默认的 <code>ctrl+cmd+f</code></li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>cmd + k 清屏</p>\n</li>\n<li>cmd + r 刷新屏幕(上面的记录会保留)</li>\n</ul>\n<h2 id=\"切换显示器\"><a href=\"#切换显示器\" class=\"headerlink\" title=\"切换显示器\"></a>切换显示器</h2><p>因为没有别的切换快捷键，所以可以通过 alfred/spotlight 来实现，所以需要保留一个功能，不要在不同显示屏打开同一个应用，这会导致切换的问题</p>\n<ul>\n<li>注意，ctrl + 左/右 只会切换鼠标所在位置的屏幕，所以需要使用别的方式切换打开了多个窗口的应用<ul>\n<li>vscode: ctrl + w</li>\n<li>chrome: vimium 插件的 T </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MAC-常用快捷键\"><a href=\"#MAC-常用快捷键\" class=\"headerlink\" title=\"MAC 常用快捷键\"></a>MAC 常用快捷键</h2><ul>\n<li>ctrl + cmd + f =&gt; toggle full screen</li>\n<li>cmd + m =&gt; 最小化窗口</li>\n<li>ctrl + 方向 =&gt; switch screen </li>\n<li>ctrl + 上 =&gt; list screens</li>\n<li>cmd + tab =&gt; switch apps 可以使用 alfred/spotlight 替代</li>\n<li>cmd + option + esc =&gt; 强制关闭程序</li>\n</ul>\n<h3 id=\"终端常用快捷键-https-www-cnblogs-com-mangosoft-p-6375266-html\"><a href=\"#终端常用快捷键-https-www-cnblogs-com-mangosoft-p-6375266-html\" class=\"headerlink\" title=\"终端常用快捷键(https://www.cnblogs.com/mangosoft/p/6375266.html)\"></a>终端常用快捷键(<a href=\"https://www.cnblogs.com/mangosoft/p/6375266.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/mangosoft/p/6375266.html</a>)</h3><ul>\n<li><code>ls</code></li>\n<li>mkdir、cd、cp、mv、rm、pwd</li>\n<li>history、ctrl + r</li>\n<li>env =&gt; 配置环境时需要</li>\n<li>cat、find、head/tail、diff(在进行一些实验的时候，可以用来对比实验结果)</li>\n<li>wc：看代码量(行、词、字母)</li>\n<li>ps、kill</li>\n<li><code>du -h 1</code></li>\n</ul>\n<h2 id=\"其它电脑配置\"><a href=\"#其它电脑配置\" class=\"headerlink\" title=\"其它电脑配置\"></a>其它电脑配置</h2><h3 id=\"vim\"><a href=\"#vim\" class=\"headerlink\" title=\"vim\"></a>vim</h3><p><img src=\"media/15481297883580/15482589171116.jpg\" alt></p>\n<p>参看： </p>\n<ul>\n<li><a href=\"https://realpython.com/vim-and-python-a-match-made-in-heaven/\" target=\"_blank\" rel=\"noopener\">Python环境配置</a></li>\n<li><p><a href=\"http://www.ruanyifeng.com/blog/2018/09/vimrc.html\" target=\"_blank\" rel=\"noopener\">阮一峰-vim 配置入门</a></p>\n</li>\n<li><p>插件管理 Vundle</p>\n</li>\n<li>Powerline</li>\n<li>Line Numbering</li>\n<li>File Browsing</li>\n<li>Color Schemes</li>\n<li>Syntax Checking/Highlighting</li>\n<li>Auto-Complete</li>\n</ul>\n<h4 id=\"其它链接\"><a href=\"#其它链接\" class=\"headerlink\" title=\"其它链接\"></a>其它链接</h4><ul>\n<li><a href=\"https://github.com/spf13/spf13-vim\" target=\"_blank\" rel=\"noopener\">Vim配置</a></li>\n<li><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">oh-my-zsh</a></li>\n<li><a href=\"https://www.cnblogs.com/zhongcq/p/3642794.html\" target=\"_blank\" rel=\"noopener\">渐进配置vim</a></li>\n</ul>\n<h3 id=\"zsh-插件\"><a href=\"#zsh-插件\" class=\"headerlink\" title=\"zsh 插件\"></a>zsh 插件</h3><p><img src=\"media/15481297883580/15482590011608.jpg\" alt></p>\n<h2 id=\"VIM\"><a href=\"#VIM\" class=\"headerlink\" title=\"VIM\"></a>VIM</h2><ul>\n<li>zM/zR =&gt; 全文折叠/展开</li>\n<li>zc/zo: 代码块折叠/展开</li>\n<li>多级折叠</li>\n<li></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjsmvbeyi0000m21i3vr2e7u2","category_id":"cjsmvbeyq0002m21i5io0yzdl","_id":"cjsmvbez0000bm21iw0h2kgnz"},{"post_id":"cjsmvbeyy0009m21i760smgr4","category_id":"cjsmvbeyq0002m21i5io0yzdl","_id":"cjsmvbez1000em21issl2s7mr"},{"post_id":"cjsmvbeyn0001m21ir10siokm","category_id":"cjsmvbeyq0002m21i5io0yzdl","_id":"cjsmvbez2000hm21ih71jcukv"},{"post_id":"cjsmvbeyv0006m21i3ye8vzin","category_id":"cjsmvbez0000am21i98mfigfi","_id":"cjsmvbez3000im21ixrr840l7"}],"PostTag":[{"post_id":"cjsmvbeyi0000m21i3vr2e7u2","tag_id":"cjsmvbeys0003m21i3k73lw3e","_id":"cjsmvbez1000dm21i8yysum79"},{"post_id":"cjsmvbeyi0000m21i3vr2e7u2","tag_id":"cjsmvbeyx0008m21i9ipkqv1b","_id":"cjsmvbez2000fm21i2ixizg18"},{"post_id":"cjsmvbeyn0001m21ir10siokm","tag_id":"cjsmvbeys0003m21i3k73lw3e","_id":"cjsmvbez3000km21ifwogfxkc"},{"post_id":"cjsmvbeyn0001m21ir10siokm","tag_id":"cjsmvbez2000gm21i7tavoc63","_id":"cjsmvbez3000lm21iz582dm4n"},{"post_id":"cjsmvbeys0004m21imhxspf0g","tag_id":"cjsmvbez3000jm21ie6a06kwx","_id":"cjsmvbez4000nm21irwhv2mn5"},{"post_id":"cjsmvbeyu0005m21ij1qhwo2l","tag_id":"cjsmvbez3000mm21itmhdxe7p","_id":"cjsmvbez4000pm21iwy6ih4cd"},{"post_id":"cjsmvbeyv0006m21i3ye8vzin","tag_id":"cjsmvbeys0003m21i3k73lw3e","_id":"cjsmvbez5000qm21ijupv6b5t"},{"post_id":"cjsmvbeyv0006m21i3ye8vzin","tag_id":"cjsmvbeyx0008m21i9ipkqv1b","_id":"cjsmvbez5000rm21if4n5905o"}],"Tag":[{"name":"工具","_id":"cjsmvbeys0003m21i3k73lw3e"},{"name":"语法","_id":"cjsmvbeyx0008m21i9ipkqv1b"},{"name":"实践","_id":"cjsmvbez2000gm21i7tavoc63"},{"name":"随笔","_id":"cjsmvbez3000jm21ie6a06kwx"},{"name":"游戏攻略","_id":"cjsmvbez3000mm21itmhdxe7p"}]}}